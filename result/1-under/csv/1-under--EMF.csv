search_string,predict_under_code,line_no,similarity,filepath
"// TODO factor up into GenBaseImpl //","None",None,None,None
"// EATM Call the deprecated method which does the same thing  // but might have an override in older code.","result = getFeature(object, prefix, name);",2975,0.7352941176470589,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// Unused?","protected static IContainer findOrCreateContainer",2583,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenBaseImpl.java
"// TODO factor up into GenBaseImpl? //","None",None,None,None
"// call workaround","((ASTFacadeHelper.ASTRewriteWithRemove)rewriter).remove(bodyDeclaration, bodyDeclaration.getModifiersProperty(), (ASTNode)modifier);",99,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJMember.java
"// TODO deprecate (since getPluginClass() is no longer called) //","None",None,None,None
"// Ensure that this race condition is thread safe; it doesn't matter who wins the race. //","BasicEList<Entry<String, String>> [] result = newEntryData(2 * size + 1);",176,0.9863013698630136,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EAnnotationImpl.java
"// TODO // This assumes we only get a SET notification, which isn't a good assumption. //","final MapDiff diff = Diffs.createMapDiffSingleChange(notification.getNotifier(), notification.getOldValue(), notification.getNewValue());",46,0.9420289855072463,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.databinding/src/org/eclipse/emf/databinding/EObjectObservableMap.java
"//DMS handle this well.","CodeGenEcorePlugin.INSTANCE.log(exception);",345,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/generator/GenPackageGeneratorAdapter.java
"//FB TBD can we come up with a better algorithm for choosing the default label feature?","for (GenFeature feature : getLabelFeatureCandidates())",2091,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenClassImpl.java
"//DMS should we let this exception out?","CodeGenEcorePlugin.INSTANCE.log(exception);",1517,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/generator/AbstractGeneratorAdapter.java
"//DMS What if Eclipse is running, but an invalid facade has been specified?  We still should format code, use encoding,...","newContents =",1045,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/generator/AbstractGeneratorAdapter.java
"//DMS  Do a better job with specific exceptions? Just use chained RuntimeExceptions?","throw e instanceof RuntimeException ? (RuntimeException)e : new WrappedException(e);",1098,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/generator/AbstractGeneratorAdapter.java
"// If the delegate URI can be handled as a file,  // we'll hope that renaming it will be really efficient. //","if (useRenameTo)",510,0.608,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/archive/ArchiveURLConnection.java
"//DMS Why not this? //new SubProgressMonitor(progressMonitor, 1));","Generator.EMF_MODEL_PROJECT_STYLE | Generator.EMF_PLUGIN_PROJECT_STYLE);",110,0.42105263157894735,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore.ui/src/org/eclipse/emf/codegen/ecore/ui/EmptyProjectWizard.java
"// Assume that it's an attribute for now. // It will/could become a reference if the type resolves to an EClass. //","EAttribute eAttribute = EcoreFactory.eINSTANCE.createEAttribute();",1581,0.53125,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Do nothing for now, and avoid propagating the exception.   // How should builders handle cancel?","return eSuperTypes;",1854,0.23655913978494625,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EClassImpl.java
"// this is a fall-back, however, this should never be called","return node.toString();",846,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTFacadeHelper.java
"// TODO fix the space above","genModel.emitSortedImports();",4843,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/templates/model/Class.java
"// TODO REMOVE THIS BOGUS EMPTY LINE","stringBuffer.append(TEXT_146);",971,0.7894736842105263,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/templates/model/PackageClass.java
"// TODO handle class cast exception better.","EReference eOpposite = (EReference)eClass.getEStructuralFeature(oppositeName);",427,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// I don't know if we should be run this deferred  // because we might have to give the editor a chance to process the viewer update events  // and hence to update the views first. //  //","Runnable runnable =",844,0.6575342465753424,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreEditor.java
"// This is a big festering hack to make the images the right size from the start. //","org.eclipse.swt.widgets.TableItem item = new org.eclipse.swt.widgets.TableItem(table, SWT.NULL);",2357,0.9848484848484849,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping.ui/src/org/eclipse/emf/mapping/presentation/MappingEditor.java
"// EATM Demand create metadata; needs to depend on processing mode...","String factoryNamespace = extendedMetaData.getNamespace(factory.getEPackage());",2321,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// TODO This is really quite attrocious since there is code that will assume an iterator that returns strings!","return (ListIterator<Element>)(ListIterator<?>)new SegmentIterator();",470,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/StringSegment.java
"//TBD return (user selected subset?) of referenced packages that contain super classes of classes in this package.","return result;",3427,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenPackageImpl.java
"// call the workaround","((ASTFacadeHelper.ASTRewriteWithRemove)rewriter).remove(node, property, oldValue);",730,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJNode.java
"// //TBD rethink where exactly some of the following methods belong (GenModel or GenPackage) //","public String getEditPluginClassName()",3332,0.9746835443037974,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenPackageImpl.java
"// if there are multiple variables in declaration,  // separate this variable fragment into a separate declaration","performSplit();",182,0.6142857142857143,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJField.java
"// EATM this would be wrong.","return name;",662,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHelperImpl.java
"// REVISIT: Remove this code.","/** for (int i = 0; i < portStr.length(); i++) {",2180,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// The label is not used. //","super("");",53,0.9523809523809523,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/action/CommandActionHandler.java
"// Motif kludge: we would get something random instead of null. //","if (IS_MOTIF) return null;",382,0.9814814814814815,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/dnd/EditingDomainViewerDropAdapter.java
"// TODO So what should be the eType be now? //","eType = getBasicType("EString");",2180,0.9714285714285714,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseEcoreBuilder.java
"// This runs the operation, and shows progress. // (It appears to be a bad thing to fork this onto another thread.) //","new ProgressMonitorDialog(activeEditorPart.getSite().getShell()).run(true, true, operation);",419,0.72,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore.ui/src/org/eclipse/emf/codegen/ecore/genmodel/presentation/GenModelActionBarContributor.java
"// EATM Kind of hacky.","String typeName = extendedMetaData.getName(eClass);",1352,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// This is a kludge to deal with enumerators, which crash the doSwitch. //","if (object instanceof EObject && ((EObject)object).eClass() == null)",138,0.9833333333333333,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/tree/provider/TreeItemProviderAdapterFactory.java
"// This is copied from ItemProviderAdapterFactory. //","protected String crop(String text)",238,0.9782608695652174,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemPropertyDescriptor.java
"// EATM This might be better written as a single loop for the EObject case? //","if (isEObject())",513,0.9838709677419355,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/DelegatingEcoreEList.java
"// Second alternative should be getModelProject()?","None",None,None,None
"// TODO Hack that should be removed.","if (marker.exists() && marker.getType().equals(EValidator.MARKER))",1591,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore.ui/src/org/eclipse/emf/codegen/ecore/genmodel/presentation/GenModelEditor.java
"// TODO // Specialize this to return a resource locator for messages specific to this validator. // Ensure that you remove @generated or mark it @generated NOT","return super.getResourceLocator();",213,0.7211538461538461,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/tests/org.eclipse.emf.test.tools/data/ant.expected/models/5.0/reload/library.xsds/src/org/examples/library/elements/util/ElementsValidator.java
"// TODO // I'm concerned that folders will often return 401 or even 403. // So should we consider something to exist even though access if unauthorized or forbidden? //","return responseCode == HttpURLConnection.HTTP_OK;",313,0.5520833333333334,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/resource/impl/URIHandlerImpl.java
"// Only file-scheme URIs will be re-encoded. If a URI was decoded in the workaround // above, and Platform.resolve() didn't return a file-scheme URI, then this will return // an decoded URI. //","URI result =",232,0.6,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/CommonPlugin.java
"// This functionality should eventually go away, as it is replaced by model exporters. // We'll just delegate to the deprecated GenPackage method. The monitor isn't used, so we won't pass it. //","genPackage.generateSchema();",233,0.6212765957446809,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/generator/GenPackageGeneratorAdapter.java
"// The eAnnotations and eGenericType are possible containment references.  // We'll move them instead of copying //","if (eReference == EcorePackage.Literals.ETYPED_ELEMENT__EGENERIC_TYPE)",249,0.7975460122699386,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/EMOFHelperImpl.java
"// Note: Registry based authority is being removed from a // new spec for URI which would obsolete RFC 2396. If the // spec is added to XML errata, processing of reg_name // needs to be removed. - mrglavas.","else if (isValidRegistryBasedAuthority(p_uriSpec)) {",2207,0.4444444444444444,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// temporary structure to hold node's attributes + namespaces in scope","AttributesImpl attrs = new AttributesImpl();",432,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLLoadImpl.java
"// HACK: reading encoding","String encoding = null;",124,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLLoadImpl.java
"// Because of the old factoring approach in the create method,  // it might be the case that the state of the old value has changed by the time we get here, // and in that case, we don't want to duplicate the removals in this code. //","if (oldValue instanceof Collection)",605,0.4369747899159664,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/SetCommand.java
"// REVISIT: Remove this code. // Store port value as string instead of integer.","/** for (int i = 0; i < portStr.length(); i++) {",2180,0.5494505494505495,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// TODO // This is faster than many charAt() calls. //","private static class CharArrayThreadLocal extends ThreadLocal<char[]>",93,0.9,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/util/XMLTypeUtil.java
"//REVISIT: do we really need to support block names as in Unicode 3.1 //         or we can just create all the names in IsBLOCKNAME format (XML Schema REC)? //","StringBuffer buffer = new StringBuffer(50);",6660,0.6333333333333333,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Bubble sort // Why? -- In many cases, //         this.ranges has few elements.","for (int i = this.ranges.length-4;  i >= 0;  i -= 2) {",4281,0.3333333333333333,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Per Schema 1.0 it is not clear if the result returned should be a valid URI.  // For the future if we plant to support IRIs then it is better not to massage // the initialValue.  // We should thought consider where would be the best way to validate anyURI values -- EL","/*initialValue = collapseWhiteSpace(initialValue);",84,0.45161290322580644,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/impl/XMLTypeFactoryImpl.java
"// Note that the way they are sorted, the values of index[i++] always increase, // so the objects are added from right to left in the list. // // EATM  TODO // // We could make this more efficient by grouping the adds when indices increment by one, // so that a single grouped notification would result. //","int i = 0;",455,0.42038216560509556,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/RemoveCommand.java
"// TODO deprecate (since no longer used by getEditPluginClass(), getEditorPluginClass(), getTestSuiteClass()) //","None",None,None,None
"// if there are multiple variables in declaration,  // separate this variable fragment into a separate declaration","performSplit();",182,0.6142857142857143,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJField.java
"//DMS factor this into a method? Use a non-static subclass?","int style = 0;",399,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/generator/GenBaseGeneratorAdapter.java
"//DMS this doesn't really produce nice output. //","diagnostic.add(BasicDiagnostic.toDiagnostic(exception));",360,0.975609756097561,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/generator/AbstractGeneratorAdapter.java
"//FB TBD filter out volatile and other inappropriate links?","return genFeature.isProperty();",1752,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenClassImpl.java
"// I don't know if this should be run this deferred // because we might have to give the editor a chance to process the viewer update events // and hence to update the views first. // //","Runnable runnable =",843,0.43157894736842106,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreEditor.java
"// TODO processing instructions are not sent to recordValues","currentNode.appendChild(document.createProcessingInstruction(target, data));",2400,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLSaveImpl.java
"// TODO comments are not sent to recordValues","currentNode.appendChild(document.createComment(stringValue));",2478,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLSaveImpl.java
"// TODO Ignore for now.","}",471,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// TODO handle situation when ASTJNode is removed (compilationUnit is null)","}",694,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJNode.java
"//TBD return super classes of classes in this package that come from a delegate package.","return result;",3436,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenPackageImpl.java
"// if current char is comma, insert line break after it // // we should be able to find the comma because the range for enum constants includes all trailing comments up to the separator // if TargetSourceRangeComputer of ASTRewrite changes, this logic should change to skip comments // see org.eclipse.emf.codegen.merge.java.facade.ast.CommentAwareSourceRangeComputer#getEnumConstantSourceRange(ASTNode)","if (commaPosition >=0 && charContent[commaPosition] == ',')",1200,0.38443935926773454,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJCompilationUnit.java
"// TODO translation","throw new IllegalArgumentException("Invalid XMI namespace: '"+namespace+"'");",108,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMIResourceImpl.java
"// TODO Binary incompatibility; an old override must override putAll.","Class<?> valueClass = value.getClass();",309,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EPackageRegistryImpl.java
"// This runs the options, and shows progress. // (It appears to be a bad thing to fork this onto another thread.) //","new ProgressMonitorDialog(getSite().getShell()).run(true, false, operation);",1488,0.5757575757575758,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreEditor.java
"// we should be able to find the comma because the range for enum constants includes all preceding comments up to the previous constant // if TargetSourceRangeComputer of ASTRewrite changes, this logic should change to skip comments // see org.eclipse.emf.codegen.merge.java.facade.ast.CommentAwareSourceRangeComputer#getEnumConstantSourceRange(ASTNode)","if (commaPosition >=0 && charContent[commaPosition] == ',')",1199,0.5258215962441315,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJCompilationUnit.java
"// TODO we should generate this.","if (false)",1617,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreEditor.java
"// TODO What about the instance type name and the fact that we should be matching its type argument structure? // If they match so far, we must assume they are okay and then check all the arguments. //","return equalTypeArguments(eGenericType.getETypeArguments(), eBound.getETypeArguments(), substitutions);",3520,0.7165354330708661,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// Set of options that we want to control","javaCoreOptions.put("org.eclipse.jdt.core.incompleteClasspath", "warning");",427,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTFacadeHelper.java
"// get the end position of the range for the previous node","SourceRange range = computeDefaultSourceRange(previousNode);",225,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/CommentAwareSourceRangeComputer.java
"// adding 'at' allows distinguish annotations from other members // (i.e. inner class verses annotation of a class) //","name = "@" + ASTFacadeHelper.toString(getASTNode().getTypeName());",84,0.717948717948718,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJAnnotation.java
"// Get the adapter from the factory. //","ITableItemLabelProvider tableItemLabelProvider = (ITableItemLabelProvider)adapterFactory.adapt(object, ITableItemLabelProvider.class);",208,0.967741935483871,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/AdapterFactoryItemDelegator.java
"// No methods added.","}",162,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/resource/impl/URIConverterImpl.java
""/*   * Javadoc copied from interface.   */"","@Override",117,0.9032258064516129,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EObjectImpl.java
"// add trailing comments if necessary","sourceRange = extendRangeForward(includeTrailingCommentMapper.get(node), sourceRange);",763,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/CommentAwareSourceRangeComputer.java
"// If the target is read-only, we can ask the platform to release it. //","validateEdit(targetFile, createMonitor(monitor, 1));",674,0.9824561403508771,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/generator/AbstractGeneratorAdapter.java
"// If entries don't have the same feature, the feature maps aren't equal. //","EStructuralFeature feature = featureMap1.getEStructuralFeature(i);",2312,0.9838709677419355,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// Merge with an existing file. //","PropertyMerger propertyMerger = new PropertyMerger();",751,0.9629629629629629,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/generator/AbstractGeneratorAdapter.java
"// Walk up the superpackages, collecting the package names. // Because empty packages are ommitted from the GenModel, we need to walk up the EPackages. //","None",None,None,None
"// Any features that delegate to features in this package. //","List<GenFeature> delegated = new ArrayList<GenFeature>();",3378,0.98,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenPackageImpl.java
"// See java.lang.Class.getName() javadoc for explanation of array encoding.","int arrayDepth = 0;",396,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/Literals.java
"// Additional useful character classes, including characters valid in certain // URI components and separators used in parsing them out of a string.  // // | ucschar | escaped","private static final long SEGMENT_CHAR_HI = UNRESERVED_HI | highBitmask(";:@&=+$,");  // | ucschar | escaped",257,0.6355140186915887,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
""/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */"","public class FeatureMapEntryItemProvider",43,0.17959183673469387,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.change.edit/src/org/eclipse/emf/ecore/change/provider/FeatureMapEntryItemProvider.java
"// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //","if (isReadOnly(targetFile) && validateEdit(targetFile, createMonitor(monitor, 1)))",765,0.9885057471264368,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/generator/AbstractGeneratorAdapter.java
"// find start position of farthest preceding comment","None",None,None,None
"// was the details button pressed?","toggleDetailsArea();",259,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common.ui/src/org/eclipse/emf/common/ui/dialogs/DiagnosticDialog.java
"// Set up the tree viewer. //","contentOutlineViewer.setContentProvider(new AdapterFactoryContentProvider(adapterFactory));",1311,0.9545454545454546,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreEditor.java
"// Process the children of the UnitTreeNode recursively. //","for (UnitTreeNode subNode : node.getNodes())",320,0.98,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseUtil.java
"// Create a code formatter for this compilation unit, if needed. //","Object codeFormatter = getGenerator().getOptions().codeFormatting ?",1001,0.9818181818181818,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/generator/AbstractGeneratorAdapter.java
"// If the name isn't qualified, it might be a primitive or from java.lang. Otherwise, assume it's in the current // package and use the nsPrefix for the qualified package name. //","boolean primitive = false;",2700,0.7717842323651453,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Determine the base URL by looking for the plugin.properties file in the standard way. //","Class<? extends DelegatingResourceLocator> theClass = getClass();",111,0.9866666666666667,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/DelegatingResourceLocator.java
"// The notification for this list is being thrown by the // delegating list //","return null;",1845,0.8363636363636363,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EClassImpl.java
"// Make sure our popups work. //","createContextMenuFor(contentOutlineViewer);",1317,0.96,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreEditor.java
"// remove type, insert enum","replaceNode(type, astjEnum);",216,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTNodeConverter.java
"// We need to screen out duplicates in the unlikely event that we have two //  features with the same class-qualified name. We'll only generate one property //  string in that case and let the user add the second one manually, if necessary. //","Set<String> noDupSet = new HashSet<String>();",8221,0.5168539325842697,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenModelImpl.java
"// build mapping from classes to list of features that use them","Map<GenClass, List<GenFeature>> classToFeatureMap = new LinkedHashMap<GenClass, List<GenFeature>>();",1927,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenClassImpl.java
"// This runs the options, and shows progress. //","new ProgressMonitorDialog(getSite().getShell()).run(true, false, operation);",1488,0.9743589743589743,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreEditor.java
"// no paths: keep query only","newAbsolutePath = false;",2166,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Select the root object in the view. //","contentOutlineViewer.setSelection(new StructuredSelection(editingDomain.getResourceSet().getResources().get(0)), true);",1323,0.96875,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreEditor.java
"// else absolute path: keep it and query","}",1983,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Listen to selection so that we can handle it is a special way. //","contentOutlinePage.addSelectionChangedListener",1346,0.9811320754716981,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreEditor.java
"// The algorithm for the order of the features in this list should never change. // Also, the fact that a new list is created whenever the contents change  // is something else that should never change. // There are clients who rely on both these behaviors,  // and they will need to agree to any change, // so that they can adjust their own code. //","if (eAllStructuralFeatures == null)",732,0.3793103448275862,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EClassImpl.java
"// This ensures that we handle selections correctly. //","public void selectionChanged(SelectionChangedEvent event)",1351,0.9782608695652174,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreEditor.java
"// Create an adapter factory that yields item providers. //","adapterFactory = new ComposedAdapterFactory(ComposedAdapterFactory.Descriptor.Registry.INSTANCE);",771,0.9795918367346939,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreEditor.java
"// Get the current time in milliseconds since the epoch  // and adjust it to match the epoch required by the specification. //","long currentTime = System.currentTimeMillis() + EPOCH_ADJUSTMENT;",3733,0.6174496644295302,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// Get the first selected element. //","Object selectedElement = selectedElements.next();",1409,0.9666666666666667,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreEditor.java
"// Otherwise, the path needs only the remaining segments.","String[] newSegments = new String[segments.length - i];",2791,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// log the error, ignore the change and continue","if (ASTFacadeHelper.DEBUG)",616,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJCompilationUnit.java
"// absolute path or no path -> absolute path","boolean newAbsolutePath = !hasRelativePath();",2511,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Do a base 64 conversion by turning every 3 bytes into 4 base 64 characters //","for (int i = 0; i < 5; ++i)",3560,0.9841269841269841,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// create a composite with standard margins and spacing","Composite composite = new Composite(parent, SWT.NONE);",305,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common.ui/src/org/eclipse/emf/common/ui/dialogs/DiagnosticDialog.java
"// source method return type is array (getExceptions), target is not array (i.e. addException)","else",785,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/JMerger.java
"// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //","if (ecoreGenPackage != null && ecoreGenPackage.getGenModel().getImportManager() != importManager)",2013,0.9868421052631579,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenModelImpl.java
""/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */"","public class FeatureMapEntryItemProvider",43,0.2894736842105263,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.change.edit/src/org/eclipse/emf/ecore/change/provider/FeatureMapEntryItemProvider.java
"// This is the page for the tree viewer //","ViewerPane viewerPane =",1235,0.96875,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping.ecore2xml.ui/src/org/eclipse/emf/mapping/ecore2xml/presentation/Ecore2XMLEditor.java
"// empty last segment -> trailing separator","private final String query;",154,0.7184466019417476,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Refresh the necessary state. //","((BasicCommandStack)editingDomain.getCommandStack()).saveIsDone();",1492,0.9642857142857143,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreEditor.java
"// A set command without a feature sets the value of this wrapper, hence replacing it with a new wrapper. So, // we need a special command wrapper that selects this new wrapper as the affected object. //","if (feature == null)",459,0.6980392156862745,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/DelegatingWrapperItemProvider.java
"// Maintain a (weak hash) set on the type parameter of all referencing generic types. //","if (eTypeParameter != null)",475,0.9861111111111112,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EGenericTypeImpl.java
"// Force the project to be setup properly. //","if (isUpdateClasspath() && EMFPlugin.IS_ECLIPSE_RUNNING)",2970,0.9722222222222222,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenModelImpl.java
""/*    * Javadoc copied from interface.   */"","@Override",117,0.9032258064516129,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EObjectImpl.java
"// WizardContainer variables","protected static PageHelper pageHelper;",119,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.converter/src/org/eclipse/emf/converter/ui/contribution/base/ModelConverterWizard.java
"// return getPrefixedName("EditorPlugin");","return getGenModel().getEditorPluginClassName();",3354,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenPackageImpl.java
"//EParameter","None",None,None,None
"// retrieve source node corresponding to target //","if (target instanceof JAbstractType)",84,0.9761904761904762,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/JMerger.java
"// Ignore.","}",358,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreEditor.java
"// Create a default .jetsettings file file","writer.write("<?xml version=\"1.0\" encoding=\"UTF-8\"?>");",701,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETNature.java
"// Subclasses may overrride","}",336,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.converter/src/org/eclipse/emf/converter/ui/ModelConverterDescriptorSelectionPage.java
"// Save the resources to the file system. //","boolean first = true;",1463,0.9714285714285714,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreEditor.java
"// Set the selection to the widget. //","selectionViewer.setSelection(new StructuredSelection(selectionList));",1420,0.9666666666666667,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreEditor.java
"// ETypeParameter","None",None,None,None
"// Save only resources that have actually changed. //","final Map<Object, Object> saveOptions = new HashMap<Object, Object>();",1448,0.9772727272727273,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreEditor.java
"// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList","@Override",1268,0.5454545454545454,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreEditor.java
"// This is the method that gets invoked when the operation runs. //","@Override",1458,0.9814814814814815,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreEditor.java
"// Ignore this since we will throw an exception when all else fails.","}",455,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/DelegatingResourceLocator.java
"// Fill 3 of value (byte) -19","CHARS[907] = 33;",3611,0.5542168674698795,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// for enum constants use special range","if (node.getNodeType() == ASTNode.ENUM_CONSTANT_DECLARATION)",681,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/CommentAwareSourceRangeComputer.java
"//ETypedElement","None",None,None,None
"// So if the resolved object is also present... //","InternalEList<?> holderContents = (InternalEList<?>)proxyHolder.eGet(oppositeEReference);",1072,0.975,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"//EcorePackage","None",None,None,None
"// Subclasses may override this method","public boolean canFinish()",149,0.8214285714285714,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.exporter/src/org/eclipse/emf/exporter/ui/EMFExportWizard.java
"// Create resource","createResource(eNS_URI);",2391,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EcorePackageImpl.java
"// Something went wrong that shouldn't. //","EcoreEditorPlugin.INSTANCE.log(exception);",1499,0.9714285714285714,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreEditor.java
"// Create package meta-data objects","theEcorePackage.createPackageContents();",488,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EcorePackageImpl.java
"// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33","None",None,None,None
"// getObjectsToDetachGen() should be changed only if required","getObjectsToDetachGen().retainAll(objectsAfterChange);",246,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.change/src/org/eclipse/emf/ecore/change/impl/ChangeDescriptionImpl.java
"// If a newline from the previous character data remains, add a generator for it. //","if (fSavedLine != null)",399,0.9852941176470589,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETCompiler.java
"// Obtain or create and register package","EcorePackageImpl theEcorePackage = (EcorePackageImpl)(EPackage.Registry.INSTANCE.getEPackage(eNS_URI) instanceof EcorePackageImpl ? EPackage.Registry.INSTANCE.getEPackage(eNS_URI) : new EcorePackageImpl());",483,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EcorePackageImpl.java
"// remove the node","removeNodeFromListProperty(getASTNode(), astNodeToBeRemoved, property);",646,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJNode.java
"// Initialize simple dependencies","XMLTypePackage.eINSTANCE.eClass();",137,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/namespace/impl/XMLNamespacePackageImpl.java
"// Fill 11 of value (byte) 33","Arrays.fill(CHARS, 1488, 1515, (byte) -19 ); // Fill 27 of value (byte) -19",3670,0.5476190476190477,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Obtain other dependent packages","XMLTypePackage theXMLTypePackage = (XMLTypePackage)EPackage.Registry.INSTANCE.getEPackage(XMLTypePackage.eNS_URI);",355,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/namespace/impl/XMLNamespacePackageImpl.java
"// If the intersection is empty, i.e., no ancestor is in the mapping... //","if (mappedObjects.isEmpty())",471,0.9833333333333333,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/impl/MappingRootImpl.java
"// Create classes and their features","eAttributeEClass = createEClass(EATTRIBUTE);",1922,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EcorePackageImpl.java
"// Continue with a different approach.","}",2500,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// Initialize created meta-data","theEcorePackage.initializePackageContents();",491,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EcorePackageImpl.java
"// If this mapping isn't a parent, it's children definitely won't be either. //","mappings.prune();",475,0.9846153846153847,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/impl/MappingRootImpl.java
"// Set bounds for type parameters","// Add supertypes to classes",2110,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EcorePackageImpl.java
"// Make sure the collections aren't identical... //","Collection<?> mappedObjects = mapping.getMappedObjects();",482,0.9767441860465116,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/impl/MappingRootImpl.java
"// Initialize enums and add enum literals","initEEnum(spaceTypeEEnum, SpaceType.class, "SpaceType");",374,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/namespace/impl/XMLNamespacePackageImpl.java
"// Add supertypes to classes","eAttributeEClass.getESuperTypes().add(this.getEStructuralFeature());",2112,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EcorePackageImpl.java
"//FB used to check for parent != null. // Need to find the top most model object not including the resource. // parent instanceof Eobject only checks for trees in model object space.","for (Object parent = domain.getParent(object); parent instanceof EObject; parent = domain.getParent(parent))",791,0.3425414364640884,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/impl/MappingRootImpl.java
"// FeatureMapEntry","None",None,None,None
"// Do the work within an operation because this is a long running activity that modifies the workbench. //","WorkspaceModifyOperation operation =",1453,0.9885057471264368,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreEditor.java
"// ResourceChange","None",None,None,None
"// Isolating the new objects","objectsAfterChange.removeAll(objectsBeforeChange);",243,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.change/src/org/eclipse/emf/ecore/change/impl/ChangeDescriptionImpl.java
"//FeatureChangeImpl","None",None,None,None
"// set features and properties","if (parserFeatures != null)",146,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLLoadImpl.java
"// cache result","return changedList;",471,0.5909090909090909,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.change/src/org/eclipse/emf/ecore/change/impl/FeatureChangeImpl.java
"// This is the page for the list viewer //","ViewerPane viewerPane =",1207,0.96875,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping.ecore2xml.ui/src/org/eclipse/emf/mapping/ecore2xml/presentation/Ecore2XMLEditor.java
"// insert line break and comment out the first line if needed // note that first line might move backward beyond node start (e.g. if a comma of the previous enum constant has been commented out)","int firstLine = addLineBreakBeforeNode(existingEdits, nodePosition, node);",709,0.4784688995215311,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJCompilationUnit.java
"//ResourceChangeImpl","None",None,None,None
"// If we change to pattern defaults, will have to specify plain suffix in no main package case. //","None",None,None,None
"// feature is instance of EAttribute","{",429,0.7654320987654321,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.change/src/org/eclipse/emf/ecore/change/impl/FeatureChangeImpl.java
"// Different than the Edit and Editor projects, this method is invoked while  // generating the model plugin xml.","return getTestsDirectory() == null ? false : getModelProjectDirectory().equals(getTestsProjectDirectory());",6926,0.810126582278481,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenModelImpl.java
"// Make sure that all the old values are cached.","for (List<FeatureChange> featureChanges : changeDescription.getObjectChanges().values())",185,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.change/src/org/eclipse/emf/ecore/change/util/ChangeRecorder.java
"// Include only non-duplicate namespace declarations. //","if (namespaceAware)",453,0.9795918367346939,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLLoadImpl.java
"//EDataType","None",None,None,None
"// Create the command stack that will notify this editor as commands are executed. //","BasicCommandStack commandStack = new BasicCommandStack();",779,0.9857142857142858,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreEditor.java
"// Try to select the items in the current content viewer of the editor. //","if (currentViewer != null)",853,0.9830508474576272,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreEditor.java
"// caches the list value.","}",476,0.5384615384615384,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.change/src/org/eclipse/emf/ecore/change/impl/ChangeDescriptionImpl.java
"// Set the editors selection based on the current viewer's selection. //","setSelection(currentViewer == null ? StructuredSelection.EMPTY : currentViewer.getSelection());",990,0.9833333333333333,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreEditor.java
"//ChangeFactory","None",None,None,None
"// Set of options that we want to copy from the current definition","useCurrentOption(javaCoreOptions, "org.eclipse.jdt.core.compiler.compliance");",377,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTFacadeHelper.java
"// Sorting only the genModels","referencedGenModelsTreeViewer.setSorter(new ViewerSorter()",653,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.converter/src/org/eclipse/emf/converter/ui/contribution/base/ModelConverterPackagePage.java
"// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //","if (namespace != null)",391,0.7692307692307693,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHelperImpl.java
"// Register package validator","EValidator.Registry.INSTANCE.put",494,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EcorePackageImpl.java
"// We must have a qualifier for an attribute that needs qualified. //","if (result.length() == name.length() && extendedMetaData.getFeatureKind(feature) == ExtendedMetaData.ATTRIBUTE_FEATURE)",416,0.9821428571428571,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHelperImpl.java
"//System.err.println("DEBUG: fixed-only: "+this.fixedString);","(">   " + eStructuralFeature.getEContainingClass().getName() + "." + eStructuralFeature.getName() +",4086,0.4675324675324675,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// cached already?","{",464,0.5714285714285714,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.change/src/org/eclipse/emf/ecore/change/impl/FeatureChangeImpl.java
"// see if prefix already exists in current context","for (int i = namespaceSize; i > context[currentContext]; i -= 2)",1516,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHelperImpl.java
"// Initialize classes and features; add operations and parameters","initEClass(eAttributeEClass, EAttribute.class, "EAttribute", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);",2132,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EcorePackageImpl.java
"// default implementation does nothing","}",374,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJNode.java
"// Initialize package","setName(eNAME);",2098,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EcorePackageImpl.java
"// Walk up the super types until we reach a root. //","while (eClassifier != null)",74,0.975,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/ElementHandlerImpl.java
"//ChangeSwitch","None",None,None,None
"// Try to select the affected objects. //","Command mostRecentCommand = ((CommandStack)event.getSource()).getMostRecentCommand();",797,0.9696969696969697,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreEditor.java
"// Continue with no instanceClass.","}",91,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EDataTypeImpl.java
"// Unwrap collection. //","if (oldCollection != null)",2682,0.95,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"//case Notification.REMOVE_MANY:","Object oldValue = notification.getOldValue();",175,0.9666666666666667,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/ESuperAdapter.java
"//case Notification.REMOVE:","Object oldValue = notification.getOldValue();",161,0.96,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/ESuperAdapter.java
"// Look for a matching element in the classifier's package but don't bother with the XML type package's document root. //","EClass eClass = extendedMetaData.getDocumentRoot(eClassifier.getEPackage());",78,0.99,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/ElementHandlerImpl.java
"// Create data types","eBigDecimalEDataType = createEDataType(EBIG_DECIMAL);",2044,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EcorePackageImpl.java
"//EGenericTypeImpl","None",None,None,None
"//return eContainer;","@Override",205,0.9444444444444444,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EObjectImpl.java
""/*   * INTERNAL: this is a specialized method to add attributes for a top/root element   */"","protected void writeTopAttributes(EObject top)",606,0.9577464788732394,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLSaveImpl.java
"// create containment one.","prototypeFeatureMapEntry = new ContainmentUpdatingFeatureMapEntry(this, null);",3164,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EStructuralFeatureImpl.java
"// it's intentional to keep going","}",1283,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLSaveImpl.java
"// Initialize data types","initEDataType(eBigDecimalEDataType, BigDecimal.class, "EBigDecimal", IS_SERIALIZABLE, !IS_GENERATED_INSTANCE_CLASS);",2357,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EcorePackageImpl.java
"// Don't really unset it.","clear();",320,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EClassImpl.java
"//ETypeParameterImpl","None",None,None,None
"// Stop only on cancel. //","protected boolean canContinue(Diagnostic diagnostic)",410,0.95,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore.ui/src/org/eclipse/emf/codegen/ecore/genmodel/presentation/GenModelActionBarContributor.java
"// System bar.","systemBar = new ToolBar(control, SWT.FLAT | SWT.WRAP);",402,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common.ui/src/org/eclipse/emf/common/ui/ViewerPane.java
"// Continue to try a different approach.","}",384,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EFactoryImpl.java
"// Produce the supplemental character as an entity","outputPos = replaceChars(outputPos, ("&#x" + Integer.toHexString(XMLChar.supplemental(high, ch)) + ";").toCharArray(), inputLength);",3332,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLSaveImpl.java
"// Keep trying until all else has failed.","}",332,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EFactoryImpl.java
"// If we can't determine it by reading the file, // look at the preferences instead.","finally",1314,0.7222222222222222,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/generator/AbstractGeneratorAdapter.java
"//ETypedElementImpl","None",None,None,None
"// Since we're invoking plugged-in code, we must be defensive against cycles. //","Set<Object> objects = new HashSet<Object>();",408,0.9850746268656716,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/generator/Generator.java
"// Subclasses may override","}",149,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.exporter/src/org/eclipse/emf/exporter/ui/EMFExportWizard.java
"// Combine the two lists. //","List<GeneratorData> result = new ArrayList<GeneratorData>(parentsData.size() + childrenData.size());",418,0.9545454545454546,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/generator/Generator.java
"//EcoreFactoryImpl","None",None,None,None
"// We not sure the encoding supports this code point, so we write it as a character entity reference.","outputPos = replaceChars(outputPos, ("&#x" + Integer.toHexString(ch) + ";").toCharArray(), inputLength);",3359,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLSaveImpl.java
"// Keep trying until all else false.","}",496,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EFactoryImpl.java
"// no property","xmlMap.add(EcorePackage.eINSTANCE.getETypedElement_EType(), createXMLInfo("type"));",55,0.24489795918367346,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/EMOFResourceFactoryImpl.java
""/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */"","public class FeatureMapEntryItemProvider",43,0.3142857142857143,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.change.edit/src/org/eclipse/emf/ecore/change/provider/FeatureMapEntryItemProvider.java
"//EParameterImpl","None",None,None,None
"// Identifies a file-type absolute URI.","private static final String SCHEME_FILE = "file";",205,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Only handle classifiers from this package. //","if (key instanceof EClassifier)",172,0.975,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLMapImpl.java
"// ChangeDescription","None",None,None,None
"// FeatureChange","Object svalue = s.getValue();",277,0.5555555555555556,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/tests/org.eclipse.emf.test.sdo/src/org/eclipse/emf/test/sdo/ChangeSummaryTest.java
"// If it is an unqualified name, we will assume it refers to a type parameter, since we don't support default package. //","String instanceTypeName = eClassifier.getInstanceTypeName();",3278,0.9897959183673469,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenBaseImpl.java
"// Mark meta-data to indicate it can't be changed","theXMLNamespacePackage.freeze();",157,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/namespace/impl/XMLNamespacePackageImpl.java
"// We effectively passed null, "" to look up the general-content feature. //","if (infoURI == null && (name.equals(infoName) || infoName == null && name.length() == 0))",238,0.9841269841269841,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLMapImpl.java
"// EGenericType","None",None,None,None
"// insert line break at the first line if there is something before the node start and the beginning of the line","InsertEdit lineBreakEdit = lineBreakInserter.createLineBreakBeforeNode(nodePosition, node);",777,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJCompilationUnit.java
"//EcoreFactory","None",None,None,None
"// EATM Leave this disabled for now. //","this.optimize = false;",185,0.967741935483871,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/DragAndDropCommand.java
"// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19","None",None,None,None
"// Give all generator adapters the chance to do setup work. //","int preIndex = 0;",604,0.98,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/generator/Generator.java
"//  Remove any non-Java dependencies from being added. //","for (Iterator i = referencedProjects.iterator(); i.hasNext(); )",2683,0.9787234042553191,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenBaseImpl.java
"// clear old values","for (ASTNode oldValue : oldValues)",723,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJNode.java
"// We can't update any properties via just a URL connection.","}",405,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/resource/impl/URIHandlerImpl.java
"// Trim off the segments corresponding to the package nesting. //","int count = 1;",424,0.9814814814814815,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/EMFPlugin.java
"// Ignore any exceptions and assume the class isn't available.","}",147,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/resource/impl/URIConverterImpl.java
"// For an archive URI, check for the plugin.properties in the archive. //","if (URI.isArchiveScheme(uri.scheme()))",150,0.9833333333333333,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/DelegatingResourceLocator.java
"// create the IV for the password generation algorithm","pbeIV = randomBytes(PBE_IV_LENGTH);",162,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/resource/impl/AESCipherImpl.java
"// Opening the detail area","diagnosticComposite = createDiagnosticComposite((Composite)getContents());",429,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common.ui/src/org/eclipse/emf/common/ui/dialogs/DiagnosticDialog.java
"// DocumentRoot","None",None,None,None
"// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //","for (EClass eSuperType : eClass.getESuperTypes())",713,0.5887096774193549,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// loop for all commented out nodes","for (Map.Entry<ASTNode, ITrackedNodePosition> entry : commentedOutPositions.entrySet())",702,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJCompilationUnit.java
"// We need to be careful that the proxy may be resolved while we are attaching this adapter. // We need to avoid attaching the adapter during the resolve  // and also attaching it again as we walk the eContents() later. // Checking here avoids having to check during addAdapter. //","Notifier oldValue = (Notifier)notification.getOldValue();",95,0.4918032786885246,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EContentAdapter.java
"// Produce different levels of diagnostic depending whether the names are exactly the same or only matching. //","String otherName = otherEStructuralFeature.getName();",814,0.989247311827957,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// Switch to the new selection provider. //","if (selectionProvider != null)",473,0.9714285714285714,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreActionBarContributor.java
"// Look for duplicates among the generic super types. //","EList<EGenericType> eGenericSuperTypes = eClass.getEGenericSuperTypes();",1220,0.9782608695652174,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// Keep trying other member types until all have failed.","}",227,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/namespace/impl/XMLNamespaceFactoryImpl.java
"// Match against every other operation but this one. //","if (otherEOperation == eOperation)",886,0.9777777777777777,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// Fake a selection changed event to update the menus. //","if (selectionProvider.getSelection() != null)",488,0.9782608695652174,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreActionBarContributor.java
"// The referencing generic type must be contained to be in scope //","EObject scope = eTypeParameter.eContainer();",2727,0.9814814814814815,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.","return super.getChildFeature(object, child);",183,0.7783783783783784,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.change.edit/src/org/eclipse/emf/ecore/change/provider/ResourceChangeItemProvider.java
"// If none of the generic super types are bounded, then we've failed. //","return false;",3301,0.9827586206896551,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// append extra dimensions since they are not stored in Type object","for (int i = 0; i < getASTNode().getExtraDimensions(); i++)",110,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJMethod.java
"// Check if the bound specifies a classifier... //","EClassifier eBoundEClassifier = eBound.getEClassifier();",3245,0.975609756097561,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// Trim off the "bin" or "runtime" segment. //","String lastSegment = uri.lastSegment();",462,0.972972972972973,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/EMFPlugin.java
"// The classifier of an attribute's generic type must be a data type. //","if (diagnostics == null)",2861,0.9827586206896551,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// Compact the results to remove unmatched objects //","if (count != listSize)",889,0.9772727272727273,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/notify/impl/DelegatingNotifyingListImpl.java
"// If neither approach finds a contradiction, we must assume they are okay and then check all the arguments. //","return matchingTypeArguments(eGenericType.getETypeArguments(), eBound.getETypeArguments(), substitutions);",3321,0.989010989010989,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// If we didn't find the plugin.properties in the usual place nor in the archive... //","if (baseURL == null)",172,0.9857142857142858,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/DelegatingResourceLocator.java
"// The type arguments of a generic super type must not be a wildcard. //","if (eClassifier == null && eTypeParameter == null)",2804,0.9824561403508771,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// If we can open  an input stream, then the plugin.properties is in the folder, and we have a good base URL. //","InputStream inputStream = new URL(uri.toString()).openStream();",186,0.9886363636363636,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/DelegatingResourceLocator.java
"// If we still don't have a good base URL, complain about it. //","if (baseURL == null)",198,0.98,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/DelegatingResourceLocator.java
"// Consider the classifiers in a special way  // to take into account the fact they they often acts as wrappers for instance type names // and that two classifiers that wrap the same instance type name should be considered equal. //","EClassifier eClassifier1 = eGenericType1.getEClassifier();",3633,0.32599118942731276,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// Create the mapping domain with a special command stack. //","mappingDomain = createMappingDomain();",1986,0.98,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping.ui/src/org/eclipse/emf/mapping/presentation/MappingEditor.java
"// The content outline is just a tree. //","class MyContentOutlinePage extends ContentOutlinePage",1300,0.96875,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreEditor.java
"// If we are still on the root mapping itself... //","if (data == null)",121,0.975,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/AbstractTreeIterator.java
"// If the type also specifies a classifier... //","EClassifier eClassifier = eGenericType.getEClassifier();",3250,0.9743589743589743,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// Yield that mapping, create a stack, record it as the next one to prune, and add it to the stack. //","nextPruneIterator = getChildren(object);",125,0.9875,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/AbstractTreeIterator.java
"// I.e., the classifiers are considered equal if they wrap the same non-null type. //","if (instanceTypeName1 == null || !instanceTypeName2.equals(instanceTypeName2))",3512,0.9857142857142858,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// Consider the instance type names they wrap  // to see if they are non-null and equal. //","String instanceTypeName1 = eClassifier.getInstanceTypeName();",3506,0.6846846846846847,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// Get the top iterator, retrieve it's result, and record it as the one to which remove will be delegated. //","@SuppressWarnings("unchecked") Iterator<? extends E> currentIterator = (Iterator<? extends E>)data[size - 1];",136,0.9886363636363636,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/AbstractTreeIterator.java
"// If the result about to be returned has children... //","Iterator<? extends E> iterator = getChildren(result);",142,0.9777777777777777,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/AbstractTreeIterator.java
"// Record the iterator as the next one to prune, and add it to the stack. //","nextPruneIterator = iterator;",147,0.9830508474576272,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/AbstractTreeIterator.java
"// Then eObject1 must be that match. //","return eObject2MappedValue == eObject1;",2130,0.967741935483871,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// There will be no iterator to prune. //","nextPruneIterator = null;",154,0.96875,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/AbstractTreeIterator.java
"// While the current iterator has no next... //","while (!currentIterator.hasNext())",158,0.9736842105263158,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/AbstractTreeIterator.java
"// if the given class is subclass of enum and node is of subclass of type","if (ASTJEnum.class.isAssignableFrom(cls) && abstractType instanceof ASTJType)",63,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTNodeConverter.java
"// Only if the feature kind is unspecified should we return a match. // Otherwise, we might return an attribute feature when an element is required,  // or vice versa. This also can be controlled by XMLResource.OPTION_LAX_FEATURE_PROCESSING. //","if (!laxFeatureProcessing && eStructuralFeature != null &&",976,0.42748091603053434,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHelperImpl.java
"// Pop it from the stack. //","data[--size] = null;",162,0.9523809523809523,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/AbstractTreeIterator.java
"// If the stack is empty, we're done. //","if (isEmpty())",166,0.967741935483871,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/AbstractTreeIterator.java
"// Pop it off the stack. //","data[--size] = null;",213,0.95,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/AbstractTreeIterator.java
"// Generate a 48 bit node identifier;  // This is an alternative to the IEEE 802 host address, which is not available in Java. //","byte[] nodeAddress = new byte [6];",3689,0.45925925925925926,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// Get the next one down and then test it for has next. //","@SuppressWarnings("unchecked") Iterator<? extends E> nextIterator = (Iterator<? extends E>)data[size - 1];",173,0.9772727272727273,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/AbstractTreeIterator.java
"// If there is an iterator to prune. //","if (nextPruneIterator != null)",205,0.9666666666666667,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/AbstractTreeIterator.java
""/*   * Javadoc copied from source.   */"","public V removeKey(Object key)",623,0.8928571428571429,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/BasicEMap.java
"// You can only prune once. //","nextPruneIterator = null;",225,0.9565217391304348,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/AbstractTreeIterator.java
"// Undo the preparation for previous and continue.","if (values == null)",390,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EContentsEList.java
"// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext. //","if (data == null)",1368,0.6666666666666666,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// printAdapters();","}",1092,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/impl/MappingRootImpl.java
"// Keys that will be used to record visibility for the accessors. //","static final String[] ACCESSOR_KEYS =",3425,0.9818181818181818,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// If that iterator is still at the top of the stack... //","if (!isEmpty() && data[size - 1] == nextPruneIterator)",209,0.9777777777777777,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/AbstractTreeIterator.java
"// If the referenced EObjects aren't equal, the feature maps aren't equal. //","return equals((EObject)value1, (EObject)value2);",2343,0.984375,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// Allow for a bit-shift of growth. //","data = newData(size + size / 8 + 1);",88,0.9666666666666667,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/BasicEList.java
"// If eObject2 has been compared already... //","Object eObject2MappedValue = get(eObject2);",2125,0.9736842105263158,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// Keep popping the stack until an iterator that has a next is at the top. //","while (!isEmpty() && !((Iterator<?>)data[size - 1]).hasNext())",217,0.9833333333333333,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/AbstractTreeIterator.java
"// The feature maps must be equal. //","FeatureMap featureMap1 = (FeatureMap)value1;",2279,0.9655172413793104,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// Conditionally create the data. //","if (size > 0)",84,0.9666666666666667,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/BasicEList.java
"// The first case is the most common case. // It is slightly cheaper to call add without an index since an index will be range checked. //","if (data[index] == oldCursor)",181,0.4689655172413793,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/StringSegment.java
"//  ++modCount //","grow(size + 1);",641,0.9230769230769231,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/BasicEList.java
"// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.","eGenericType = EcoreFactory.eINSTANCE.createEGenericType();",2519,0.8027210884353742,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// clockseq_low","uuid[9] = (byte)(clockSequence & 0xFF);",3721,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// Guard for no data. //","if (size > 0)",440,0.9444444444444444,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/BasicEList.java
"// The system clock has been rewound so the clock sequence must be incremented  // to ensure that a duplicate UUID is not generated. //","++clockSequence;",3740,0.7428571428571429,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// Suppress default constructor for noninstantiability.","//   private EcoreUtil()",72,0.9803921568627451,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// ++modCount //","grow(size + 1);",641,0.9230769230769231,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/BasicEList.java
"// Ensure that anything can be handled, even if it's not recognized. //","String namespaceURI = helper.getURI(prefix);",118,0.9827586206896551,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/GenericXMLResourceImpl.java
""/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)   */"","public Object getValue(Node node)",84,0.297029702970297,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/DefaultDOMHandlerImpl.java
"// Strip off the array indices if any. //","String arrayIndices = null;",3283,0.96875,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenBaseImpl.java
"// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //","uriHandler = (XMLResource.URIHandler)options.get(XMLResource.OPTION_URI_HANDLER);",479,0.6688311688311688,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// Create a page, set the title, and the initial model file name. // //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$","newFileCreationPage = new DynamicModelWizardNewFileCreationPage("Whatever", selection);",291,0.6127167630057804,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/DynamicModelWizard.java
"//MappingRootImpl","None",None,None,None
"// Prepare for CreateSibling item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$","createSiblingMenuManager = new MenuManager(EcoreEditorPlugin.getPlugin().getString("_UI_CreateSibling_menu_item"));",437,0.7704918032786885,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreActionBarContributor.java
"// Fill 3 of value (byte) -87","CHARS[1470] = 33;",3663,0.5411764705882353,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Ignore it if we've already set generic versions of these //","if (!objectsWithGenericTypeList.contains(object))",95,0.98,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/EMOFHelperImpl.java
"// String getPackageID();","String getNSName();",748,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/GenPackage.java
"// // EMFEdit generation //","String getPropertyImageName();",439,0.9047619047619048,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/GenFeature.java
"// Returns whether this class implements any of the given features.","public boolean implementsAny(Collection<GenFeature> genFeatures);",344,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/GenClass.java
"// ignore rules for nodes of different class","if (rule.getSelector().isInstance(node))",1091,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/JMerger.java
"// Remember the static instance. //","plugin = this;",105,0.9655172413793104,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.change.edit/src/org/eclipse/emf/ecore/change/provider/ChangeEditPlugin.java
"//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), substituteOldValue, substituteNewValue, msg.getPosition());","ENotificationImpl note =",714,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/provider/MappingItemProvider.java
"//Class/genFeature.override.javajetinc //for","}}.run();",3799,0.9382716049382716,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/templates/model/Class.java
"// Create a command to do parentMapping.getNested().remove(mapping). // //subcommands.appendAndExecute(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), mapping));","subcommands.appendAndExecute(new RemoveCommand(domain, parentMapping, MappingPackage.eINSTANCE.getMapping_Nested(), mapping));",144,0.48249027237354086,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/command/RemoveMappingCommand.java
"// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.","else if (!isPathCharacter(testChar)) {",2345,0.72,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87","None",None,None,None
"// processing unknown feature with xsi:type (xmi:type)","if (recordUnknownFeature || processAnyXML)",2276,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"//Class/implementedGenOperation.override.javajetinc //for","if (isImplementation && !genModel.isReflectiveDelegation() && genClass.implementsAny(genClass.getEInverseAddGenFeatures())) {",3903,0.9532710280373832,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/templates/model/Class.java
"// Bidirectional references need to use this less efficient approach because some //  or all of the changes may already have been made from the other end. //","@SuppressWarnings("unchecked") EList<Object> result = (EList<Object>)originalObject.eGet(internalFeature);",551,0.6129032258064516,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.change/src/org/eclipse/emf/ecore/change/impl/FeatureChangeImpl.java
"// returns the package in which this enum literal is defined // returns the name of the enum literal get method in the package interface","None",None,None,None
"// If the proxy holder can hold many values, // it may contain a duplicate that resulted when the other end was processed as an IDREF // and hence did both sides of the bidirectional relation. //","if (oppositeEReference.isMany())",1066,0.36923076923076925,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// // Data //","None",None,None,None
""/*     * Javadoc copied from interface.     */"","@Override",117,0.9032258064516129,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EObjectImpl.java
"// Pretend there is an xmlns="" because we really need to ensure that the null prefix  // isn't used to denote something other than the null namespace. //","if (usedNullNamespacePackage)",1195,0.7142857142857143,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// do not add a new line if there is one","InsertEdit existingEdit = addedInsertEdits.get(lineBreakEdit.getOffset());",981,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJCompilationUnit.java
"// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87","None",None,None,None
"// Excise the new root from the document root. //","EcoreUtil.remove(peekObject = objects.get(0));",1392,0.9743589743589743,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// Don't hold onto a duplicate reference to the last object. //","data[--size] = null;",950,0.9803921568627451,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/BasicEList.java
"// If processSchemaLocations is specified, treat these as XML Schema locations","if (processSchemaLocations)",1677,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// Give it all back to the garbage collector. //","data = null;",995,0.9736842105263158,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/BasicEList.java
"// there is only whitespace after enum constant on the same line - do not add line breaks","return null;",1265,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJCompilationUnit.java
"// Write the capacity. //","objectOutputStream.writeInt(entryData.length);",1512,0.95,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/BasicEMap.java
"// This happens when processing an element with simple content that has elements content even though it shouldn't. //","if (peekObject == null)",1746,0.9897959183673469,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33","None",None,None,None
"// record node's attributes","if (element.hasAttributes())",436,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLLoadImpl.java
"// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87","None",None,None,None
"// There's an EObject on the stack already. //","if (objects.size() > 1)",1388,0.972972972972973,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"//FB The following method is copied from com.ibm.etools.b2b.util.StringUtility //FB because the mapping framework cannot have a dependency on b2b. What we really //FB need to do is get methods like this moved to vabase so that everyone can //FB use them. // change all occurrences of oldPat to newPat","protected String change(String in, String oldPat, String newPat)",898,0.43962848297213625,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/domain/AdapterFactoryMappingDomain.java
"// If it is changing... //","if (currentViewer != viewer)",952,0.95,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreEditor.java
"// Test for a same document reference that would usually be handled as an IDREF. //","if (proxyURI.trimFragment().equals(resourceURI))",2861,0.9850746268656716,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.","@SuppressWarnings("null")",1887,0.6229508196721312,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Need not to call setSource() because // a caller can not access this match instance.","con.match = match;",1505,0.6285714285714286,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Only creates the other pages if there is something that can be edited //","if (!getEditingDomain().getResourceSet().getResources().isEmpty() &&",1156,0.9833333333333333,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreEditor.java
"// Create the listener on demand. //","selectionChangedListener =",958,0.9655172413793104,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreEditor.java
""/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */"","if (this.fixedString != null) {",1544,0.38095238095238093,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// handler.unparsedEntityDecl(name, publicId, systemId, notationName);","}",169,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/SAXWrapper.java
"// Ignore close since we don't want to let the parser close the stream when it's done.","}",185,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLContentHandlerImpl.java
"// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //","CopyCommand.Helper copyHelper = new CopyCommand.Helper();",47,0.498220640569395,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/command/DragAndDropOverrideCommand.java
""/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */"","if (this.fixedStringOnly) {",1525,0.6521739130434783,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19","None",None,None,None
"// handler.notationDecl(name, publicId, systemId);","}",163,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/SAXWrapper.java
"// EDate is far too often overridden to provide a different mapping, and therefor the default is somewhat obscure. // So, it's best to delegate to the factory. //","if ("EDate".equals(eDataType.getName()))",1097,0.8347826086956521,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenDataTypeImpl.java
"// This seems to be a pretty sweet formula that supports good growth. // Adding an object to a list will create a list of capacity 4,  // which is just about the average list size. //","int newCapacity = oldCapacity + oldCapacity / 2 + 4;",1090,0.5615763546798029,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/BasicEList.java
""/*     *  Convert attribute values:     *  & to &amp;     *  < to &lt;     *  "" to &quot;     *  \t to &#x9;     *  \n to &#xA;     *  \r to &#xD;     */"","public String convert(String input)",3215,0.42857142857142855,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLSaveImpl.java
"// caching parser does not parse 2nd file in the same way (javadoc of package for example) // hence, new parser is created every time this method is called","ASTParser astParser = ASTParser.newParser(AST.JLS3);",248,0.736318407960199,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTFacadeHelper.java
"// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19","None",None,None,None
"// This should be transparent. //","int oldModCount = modCount;",241,0.9629629629629629,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/BasicEMap.java
"// | ucschar | escaped","private static final long URIC_LO = RESERVED_LO | UNRESERVED_LO;",254,0.391304347826087,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// ModifierOp // CharOp  for CHAR, BACKREFERENCE, CAPTURE, ANCHOR,","int getData() {                             // CharOp  for CHAR, BACKREFERENCE, CAPTURE, ANCHOR,",4087,0.34782608695652173,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Fill 7 of value (byte) -19","Arrays.fill(CHARS, 706, 720, (byte) 33 ); // Fill 14 of value (byte) 33",3601,0.5542168674698795,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
""/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */"","* @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)",84,0.189873417721519,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/DefaultDOMHandlerImpl.java
"// process eStructuralFeatures for association end(Role) //","for (EReference eReference : roseUtil.refTable.keySet())",2068,0.9807692307692307,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseEcoreBuilder.java
"// STRING","throw new RuntimeException("Internal Error: type="+this.type);",4097,0.47058823529411764,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// xsi:nil // xsi:type // xmlns:xsi // xsi:schemaLocation // xsi:noNamespaceSchemaLocation","None",None,None,None
"// Look for a substitution group feature in the feature's containing class' containing package. //","EClass eContainingClass = eStructuralFeature.getEContainingClass();",152,0.9879518072289156,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/ElementHandlerImpl.java
"// It's intentional to keep going.","}",1320,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLSaveImpl.java
"// Check which directive it is. //","String match = null;",399,0.9629629629629629,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETParser.java
"//iri = iri || containsNonASCII(fragment);","}",1014,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Check if it's an anonymous type. //","String name = extendedMetaData.getName(eClass);",1026,0.9666666666666667,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLSaveImpl.java
"// for RANGE or NRANGE","@Override",4221,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// We only get here if we should do this. //","if (elementFeatures == null)",1420,0.9696969696969697,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLSaveImpl.java
"//reader.reset(start); //return false;","return true;",207,0.5,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/DynamicModelWizard.java
"// Write all the entryData; there will be size of them. //","for (int i = 0; i < entryData.length; ++i)",1516,0.9782608695652174,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/BasicEMap.java
"// Fill 2 of value (byte) -19","Arrays.fill(CHARS, 502, 506, (byte) 33 ); // Fill 4 of value (byte) 33",3595,0.5542168674698795,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Overlapped // src:    o--------o // sub:  o----o // sub:      o----o // sub:          o----o // sub:  o------------o","if (subbegin <= srcbegin && srcend <= subend) {",4444,0.32,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Restore the capacity, if there was any. //","int capacity = objectInputStream.readInt();",1540,0.9722222222222222,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/BasicEMap.java
"// Read all size number of entryData. //","for (int i = 0; i < size; ++i)",1547,0.96875,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/BasicEMap.java
"// This just represents going back to the unset state, but that doesn't affect the contents of the list. //","return;",127,0.9885057471264368,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.databinding/src/org/eclipse/emf/databinding/EObjectObservableList.java
"// String-parsing implementation.","private static URI parseIntoURI(String uri)",677,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Create a page for the selection tree view. //","Tree tree = new Tree(getContainer(), SWT.MULTI);",1161,0.9736842105263158,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreEditor.java
"// generateColor();","ColorInformation info1 = ColorInformation.getColor(code(key1));",2141,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenBaseImpl.java
"// this.ranges is sorted and compacted.","}",4499,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33","None",None,None,None
"// Create annotations // http://www.w3.org/XML/1998/namespace","// http:///org/eclipse/emf/ecore/util/ExtendedMetaData",520,0.5,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EcorePackageImpl.java
"// src1:    o--------o // src2:          o----o // res:           o--o // Reuse src2","src1 += 2;",4527,0.3548387096774194,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"//  Interpret the body of a nested ownedComment as a comment-type and assign it as the EAnnotation.source of the parent. //","None",None,None,None
"// X{2,6} -> XX(X(X(XX?)?)?)?","ret = next;",1347,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Internal bootstrap uses Literals constants, so we must force initialization this inner interface first. //","boolean _INTERNAL_BOOTSTRAP = Literals.EATTRIBUTE != null && org.eclipse.emf.ecore.impl.EcorePackageImpl.internalBootstrap();",5099,0.989247311827957,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/EcorePackage.java
"//iri = iri || containsNonASCII(device);","}",1004,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Open an editor on the new file. //","page.openEditor",54,0.9642857142857143,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/action/OpenEditorAction.java
"// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG","for (; index < end; ++index) {",3232,0.6666666666666666,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
""/*           * Checks whether the expression starts with "".*"".           */"","None",None,None,None
"// Parse the attr-val pairs. //","Map<String, String> attrs = reader.parseTagAttributes();",425,0.96,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETParser.java
"// Skips ')'","return tok;",5190,0.625,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// create field initializer from enum constant's arguments and body","setFieldInitializer(field, enumConstant);",473,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTNodeConverter.java
""/*                       * Saves current position to avoid                       * zero-width repeats.                       */"","int id = op.getData();",1929,0.691358024691358,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// off -> next of '}'","tok = Token.createNGClosure(tok);",5420,0.5333333333333333,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// different scheme: need complete, absolute URI","if (!scheme.equalsIgnoreCase(base.scheme())) return this;",2125,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Apply the change. //","for (Map.Entry<EObject,EList<FeatureChange>> entry : getObjectChanges())",290,0.9444444444444444,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.change/src/org/eclipse/emf/ecore/change/impl/ChangeDescriptionImpl.java
""/*           * Straightforward matching.           */"","else {",1626,0.8928571428571429,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Delete the change information because it is invalid now that the objects have been changed. //","getObjectsToAttach().clear();",306,0.9875,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.change/src/org/eclipse/emf/ecore/change/impl/ChangeDescriptionImpl.java
"// Static initializer for archiveSchemes.","static",277,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Apply the change and reverse the change information. //","for (Map.Entry<EObject, EList<FeatureChange>> entry : getObjectChanges())",326,0.9791666666666666,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.change/src/org/eclipse/emf/ecore/change/impl/ChangeDescriptionImpl.java
"// Compute the URL for where the classes for this project will be located. //","IJavaProject javaProject = JavaCore.create(project);",508,0.9838709677419355,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETEmitter.java
"//this.iri = iri;","this.hierarchical = hierarchical;",1024,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// \ + c // backsolidus // POSIX Character class such as [:alnum:]","else if (type == T_POSIX_CHARCLASS_START) {",5617,0.8,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
""/*      public RegularExpression createRegex(String regex, int options) throws ParseException {          Token tok = this.parse(regex, options);          return new RegularExpression(regex, tok, this.parennumber, this.hasBackReferences, options);      }      */"","RegularExpression re = null;",729,0.18421052631578946,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Compute the URLs for all the output folder of all the project dependencies. //","for (IClasspathEntry classpathEntry :  javaProject.getResolvedClasspath(true))",513,0.9848484848484849,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETEmitter.java
"//tok.dumpRanges();","/*",5667,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Define a class loader that will look in the URLs first,  // and if it doesn't find the class there, uses the emitter's loader. //","theClassLoader =",526,0.6143790849673203,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETEmitter.java
"// Single character // [a-zA-Z] // [^a-zA-Z] // ^ $ ... // literal String  // X* // X*? // X? // X?? // X|Y // ( and ) // \1 \2 ... // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(..)yes|no)","None",None,None,None
"// Define a class loader that will look up the class in the bundle, // and if it doesn't find it there, will look in the parent. //","theClassLoader =",552,0.6835443037974683,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETEmitter.java
"//************************************************************************ //*    class RoseToken                                                   * //************************************************************************","* A class to represent a Uniform Resource Identifier (URI). This class",1443,0.5991561181434599,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Strip off the trailing "_" and load that class. //","String className = (packageName.length() == 0 ? "" : packageName + ".") + jetCompiler.getSkeleton().getClassName();",576,0.9761904761904762,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETEmitter.java
"// Since the granularity of time in Java is only milliseconds,  // add an adjustment so that the time is represented in 100s of nanoseconds. // The version number (1) is multiplexed into the most significant hex digit. //","currentTime *= 10000;",3795,0.4444444444444444,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// Check that the class is actually different from the one that's directly visible to the JETEmitter. //","Class<?> theOtherClass = null;",588,0.9883720930232558,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETEmitter.java
"// Filtered for property keys to remove duplicates.","/**",2538,0.6666666666666666,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/GenModel.java
""/*   * Javadoc copied from base class.   */"","@Override",49,0.9032258064516129,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.ecore/src/org/eclipse/emf/importer/ecore/EcoreImporterPlugin.java
"// '|' // '*' // '+' // '?' // '(' // ')' // '.' // '[' // '\' // '^' // '$' // '(?:' // '(?=' // '(?!' // '(?<=' // '(?<!' // '(?>' // '(?[' // '[:' in a character class // '(?#' // '(?' [\-,a-z,A-Z] // '(?(' // '-[' in a character class","None",None,None,None
"// Kick of a Java build if not already in a build. //","if (!isInBuild())",334,0.975,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETCompileTemplateOperation.java
"// src:    o--------o // sub:  o------------o // res: empty // Reuse sub","// sub:  o----o",4444,0.4383561643835616,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Add the new entries, including source, JRE container, and added variables and classpath containers.  //","progressMonitor.subTask",677,0.9887640449438202,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETEmitter.java
"// This will deal with all the subcommands to modifying the root mapping tree. //","CompoundCommand subcommands = new CompoundCommand();",129,0.9848484848484849,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/command/RemoveMappingCommand.java
"// Skips ']'","return tok;",5673,0.625,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// 32 is the number of bits in `int'.","this.map = new int[asize];",4698,0.7435897435897436,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Construct a proper URL for relative lookup. //","List<URL> urls = new ArrayList<URL>();",781,0.975,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETEmitter.java
"// src1:    o--------o // src2:      o----o // res:       o----o // Reuse the rest of src1","// src2:  o------------o",4531,0.43037974683544306,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Create a proper feature map entry. //","entry = entry.createEntry(entryValue);",530,0.96875,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.change/src/org/eclipse/emf/ecore/change/impl/FeatureChangeImpl.java
"// set original node of annotations (to allow get methods to work correctly)","@SuppressWarnings("unchecked")",371,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJField.java
"// Determine all the bundles that this project depends on. //","final Set<Bundle> bundles = new HashSet<Bundle>();",786,0.98,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETEmitter.java
"// This call should get the files checked out from version control if the project is a 'team' project. //","IStatus status = ResourcesPlugin.getWorkspace().validateEdit(new IFile [] { outputFile }, null);",312,0.9882352941176471,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETCompileTemplateOperation.java
"// Like isStringType(), but still returns true even if multiplicity-many. //","@Override",74,0.3076923076923077,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore.ui/src/org/eclipse/emf/codegen/ecore/genmodel/provider/GenBaseItemProvider.java
"// Reverse the objects to attach and detach lists. //","getObjectsToAttach().clear();",415,0.9767441860465116,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.change/src/org/eclipse/emf/ecore/change/impl/ChangeDescriptionImpl.java
"// this.offset points the next of '?'. // modifiers ::= [imsw]* ('-' [imsw]*)? ':'","int add = 0, mask = 0, ch = -1;",5246,0.6336633663366337,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Make sure the changed values of bidirectional reference lists are cached before we //  start to apply the change. //","for (Map.Entry<EObject, EList<FeatureChange>> entry : getObjectChanges())",451,0.39344262295081966,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.change/src/org/eclipse/emf/ecore/change/impl/ChangeDescriptionImpl.java
"// This case will be handled special during apply //","EList<Object> applyToList = new BasicEList<Object>((EList<?>)objectToChange.eGet(internalFeature));",469,0.9761904761904762,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.change/src/org/eclipse/emf/ecore/change/impl/ChangeDescriptionImpl.java
"// If it doesn't correspond to a bundle, then try to process it as a project in the workspace. //","if (bundle == null)",879,0.987012987012987,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETEmitter.java
"//System.err.println("CLOSURE: "+min+", "+max);","(">   " + eStructuralFeature.getEContainingClass().getName() + "." + eStructuralFeature.getName() +",4086,0.5714285714285714,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// Must be in 0x0040-0x005f","if (this.offset >= this.regexlen",5292,0.8679245283018868,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// for CLOSURE","throw new RuntimeException("Internal Error: type="+this.type);",4084,0.5217391304347826,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
""/*  public String getImportedInstanceClassName()  {    return getGenModel().getImportedName(""org.eclipse.emf.ecore.EEnumLiteral"");   }*/"","return getGenModel().getImportedName("org.eclipse.emf.ecore.EEnumLiteral");",381,0.5,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenEnumImpl.java
"// there is only whitespace on this line - no need for line break","return null;",1046,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJCompilationUnit.java
"// This handles Rose 2003 format, e.g., // Logical View::JavaException[40722F9D0294] //","String exception = stringTokenizer.nextToken().trim();",957,0.6,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseEcoreBuilder.java
"// for STRING","return 0;",6052,0.4782608695652174,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// move all children to the type, converting enum constants to fields // // fields that are created by conversion from enum constants must be inserted after // the last final field that is used in constructors for initializers","List<ASTJNode<?>> convertedEnumConstants = new ArrayList<ASTJNode<?>>(enumChildren.size());",400,0.4715447154471545,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTNodeConverter.java
"// ESCAPE U+001B // FORM FEED U+000C // LINE FEED U+000A // CRRIAGE RETURN U+000D // HORIZONTAL TABULATION U+0009 //case 'v':  c = 0x0b;  break; // VERTICAL TABULATION U+000B","case 'x':",5752,0.5077720207253886,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Add JETBuilder //","addToFrontOfBuildSpec(CodeGenPlugin.INSTANCE.getSymbolicName() + "." + BUILDER);",174,0.9375,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETNature.java
"// Literal char // . // XY // X|Y|Z // X* // [a-zA-Z] etc. // [^a-zA-Z] etc. // (X) or (?:X) // // ^ $ \b \B \< \> \A \Z \z // *? +? // strings // back references // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(...)yes|no)","None",None,None,None
"// clone includeStack without cloning contents //","includeStack = new Stack<IncludeState>();",138,0.9761904761904762,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETMark.java
""/*               *  a|b|c -> FC_TERMINAL               *  a|.|c -> FC_ANY               *  a|b|  -> FC_CONTINUE               */"","int ret2 = FC_CONTINUE;",6220,0.5,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Create .jetproperties file //","createDefaultJETSettingsFile(getTemplateContainers(), getJavaSourceContainer());",187,0.9629629629629629,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETNature.java
"// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //","if (isElement)",2048,0.5803108808290155,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/BasicExtendedMetaData.java
"// Store the current state in stack. //","includeStack.push(new IncludeState(cursor, line, col, fileid, baseDir, encoding, stream) );",157,0.967741935483871,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETMark.java
"// If all the objects aren't used up by the above, then we can't do the command. //","if (list.isEmpty())",1466,0.9846153846153847,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"// Perl extension","Token.setAlias("xdigit", "IsXDigit", true);",6786,0.44776119402985076,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// New Template Container Entryfield","templateContainerField = new Text(containerGroup, SWT.BORDER);",78,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ui/src/org/eclipse/emf/codegen/presentation/JETPropertyPage.java
"// If there's no position, the list is being cleared. //","int position = notification.getPosition();",404,0.9777777777777777,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.change/src/org/eclipse/emf/ecore/change/util/ChangeRecorder.java
"// Set the new variables. //","cursor = 0;",161,0.9545454545454546,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETMark.java
"// If the template path points at a project with a JET Nature,  // then we will assume that the templates we want to use are already compiled in this plugin Java project. //","IProject project = workspace.getRoot().getProject(templateURI.segment(1));",500,0.5291005291005291,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETEmitter.java
"// When we attached we have to recompute the erasure of the type parameter. //","EClassifier newERawType = getErasure(eTypeParameter);",369,0.9841269841269841,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EGenericTypeImpl.java
"//build table of Pf values","if (i == 0x00BB || i == 0x2019 || i == 0x201D || i == 0x203A ) {",6592,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Create a key set that supports add. //","return",159,0.96875,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/ETypeParameterImpl.java
"// Suppress default constructor for non-instantiability.","private Literals()",33,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/Literals.java
"// Get previous state in stack. //","IncludeState state = includeStack.pop( );",184,0.9629629629629629,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETMark.java
"// VAJ kludge //","super.firePropertyChange(type);",384,0.9166666666666666,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping.ui/src/org/eclipse/emf/mapping/presentation/MappingEditor.java
""/*                  result.addRange(0, RegularExpression.LINE_FEED-1);                  result.addRange(RegularExpression.LINE_FEED+1, RegularExpression.CARRIAGE_RETURN-1);                  result.addRange(RegularExpression.CARRIAGE_RETURN+1,                                  RegularExpression.LINE_SEPARATOR-1);                  result.addRange(RegularExpression.PARAGRAPH_SEPARATOR+1, UTF16_MAX);                  return 1;                  */"","case RANGE:",6269,0.28,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Make sure we have something to pop. //","if (includeStack.size() <= 0)",177,0.96875,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETMark.java
"// Map to EClass, EEnum or EInerface. // Note that we do not map structure and primitive type class. //","RoseNode stereoTypeNode = roseNode.findNodeWithKey(RoseStrings.STEREOTYPE);",214,0.5391304347826087,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseEcoreBuilder.java
"// Register the file, and read its content: //","int fileid    = registerSourceFile(locationURI);",91,0.972972972972973,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETReader.java
"// The system time hasn't changed so add some increment of 100s of nanoseconds to guarantee uniqueness. //","++timeAdjustment;",3754,0.9886363636363636,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// Is stack created ? (will happen if the JET file we're looking at is missing. //","if (current == null)",148,0.9846153846153847,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETReader.java
"// Use an alternate if we can't write to this one. //","if (redirect)",463,0.975609756097561,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenBaseImpl.java
"// And delegate the call. //","return tableItemLabelProvider.getColumnText(object, columnIndex);",216,0.9545454545454546,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/AdapterFactoryItemDelegator.java
"// The method is not a structural feature, so it's modeled as an operation. //","EOperation eOperation = EcoreFactory.eINSTANCE.createEOperation();",1448,0.9841269841269841,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Continue with the established base URL.","}",194,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/DelegatingResourceLocator.java
"// Consume the open quote: //","ch = nextChar();",446,0.9565217391304348,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETReader.java
"// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //","None",None,None,None
"// Restore parser state: //","size--;",155,0.9545454545454546,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETReader.java
"// Filter out explicit EObject from super types, except in the Ecore package itself, or if it appears in the @model superTypes. //","if (!javaEGenericSuperTypes.isEmpty() &&",1060,0.9906542056074766,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Check for an equal sign: //","skipSpaces();",513,0.9565217391304348,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETReader.java
"//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$","None",None,None,None
"// Get the attribute value: //","skipSpaces();",522,0.9583333333333334,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETReader.java
"// insert line break if there is non-whitespace before end of the line","if (i < endOfLine)",1243,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJCompilationUnit.java
"//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data","}",350,0.9147286821705426,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Don't do any of the other normally dynamic JETEmitter project processing. //","return;",612,0.9848484848484849,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETEmitter.java
""/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#dispose()   */"","* @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)",84,0.3191489361702128,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/DefaultDOMHandlerImpl.java
"// Get the existing classpath and remove the project root if necessary. // Any new non-duplicate entries will be added to this. //","List<IClasspathEntry> classpath = new UniqueEList<IClasspathEntry>(Arrays.asList(javaProject.getRawClasspath()));",664,0.7142857142857143,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETEmitter.java
"// Schema Rec. {Datatypes} - Punctuation  // Pi - initial quote // Pf - final quote","static final int CHAR_INIT_QUOTE  = 29;     // Pi - initial quote",6436,0.6862745098039216,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// note: hierarchical -> authority != null","return !hierarchical;",1363,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// End of the useBean tag. //","return values;",555,0.9545454545454546,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETReader.java
"// '::' represents at least one 16-bit group of zeros.","if (++counter[0] > 8) {",3177,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// // EMF.Editor generation //","boolean hasEditorSupport();",2309,0.9166666666666666,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/GenModel.java
"// XMLesque Close tags //","if (nextChar() == endTagFinalChar)",564,0.95,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETReader.java
"// Parse as an attribute=value: //","parseAttributeValue(values);",583,0.9642857142857143,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETReader.java
"// We can create the RemoveCommand for an uncontrol, but we must defer creating an AddCommand // to control until run(), when the user specifies a target resource. //","@Override",66,0.7222222222222222,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/action/ControlAction.java
"// // Tests generation //","boolean hasTestSupport();",2386,0.8947368421052632,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/GenModel.java
"// Reached EOF: //","throw new JETException(CodeGenPlugin.getPlugin().getString("jet.error.tag.attr.unterminated", new Object [] { mark().toString() }));",588,0.9285714285714286,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETReader.java
"// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications","if (p_base != null) {",1961,0.36101083032490977,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData","((EcorePackageImpl)EcorePackage.eINSTANCE).createExtendedMetaDataAnnotations();",520,0.4175824175824176,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EcorePackageImpl.java
"// Map to an eClass. //","EClass eClass = EcoreFactory.eINSTANCE.createEClass();",343,0.9411764705882353,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseEcoreBuilder.java
"// Until the encoding can be specified within the template  // we need to assume an encoding capable of working with any character set.","if (encoding == null)",84,0.6125,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETReader.java
"//FB TBD different objects for ecore model!","{",859,0.5211267605633803,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenBaseImpl.java
"// Check end of quote, skip closing quote: //","if (ch == -1)",458,0.9722222222222222,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETReader.java
"// note: absolutePath -> hierarchical","return absolutePath;",1395,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Get the attribute name: //","skipSpaces();",508,0.9565217391304348,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETReader.java
"/*0A00..0A7F;*/","/*0A80..0AFF;*/ "Gujarati",",6465,0.7317073170731707,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.","if (index > startPos) {",1944,0.6347305389221557,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Delete the ActionContributionItems with matching action. //","if (contributionItem instanceof ActionContributionItem)",687,0.9814814814814815,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreActionBarContributor.java
"// search backwards starting from character before ':'.","int slashIdx = uriSpec.lastIndexOf('/', searchFrom);",1894,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Don't remove the adapter if the object is in a different resource  // and that resource (and hence all its contents) are being cross referenced. //","InternalEObject internalEObject = i.next();",774,0.6256983240223464,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/ECrossReferenceAdapter.java
"/*0D00..0D7F;*/","/*0D80..0DFF;*/ "Sinhala",",6471,0.7142857142857143,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.","else {",3187,0.532608695652174,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Skip derived features. //","EStructuralFeature eStructuralFeature = (EStructuralFeature)data[i];",796,0.9565217391304348,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EClassImpl.java
"// The include succeeded, so if there is an alternative and we're not skipping, we need to start. //","if ("alternative".equals(attributes.get("fail")))",188,0.9876543209876543,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETCompiler.java
"// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done","if (m_host == null && m_regAuthority == null) {",1999,0.5470085470085471,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Include derived relations only if they won't also come from mixed or a group. //","if (!eReference.isDerived() ||",811,0.9850746268656716,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EClassImpl.java
"// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment","if (path.endsWith("/..")) {",2068,0.8264462809917356,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// If this is just a proxy being resolved... //","if (resolveProxy(result) == eClass)",1684,0.972972972972973,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EClassImpl.java
"// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.","if (addrLength > 255) {",3037,0.5050505050505051,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Force the raw type to be resolved so we don't resolve this endlessly. //","eGenericType.getERawType();",1688,0.9833333333333333,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EClassImpl.java
"// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2","int index = address.lastIndexOf('.');",3021,0.6096256684491979,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Update the classifier and hence the raw type as normal. //","eGenericType.setEClassifier(eClass);",1694,0.9795918367346939,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EClassImpl.java
"// RFC 2732 only allows '[' and ']' to appear in the opaque part.","if (getScheme() == null || p_uriSpec.charAt(start) == '/') {",2326,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"/*10A0..10FF;*/","/*1100..11FF;*/ "Hangul Jamo",",6477,0.7317073170731707,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Map to an EClass. //","EClass eClass = EcoreFactory.eINSTANCE.createEClass();",224,0.9411764705882353,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseEcoreBuilder.java
"// Look for an end-of-comment or end-of-tag: //","if (ch == '-')",700,0.9743589743589743,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETReader.java
"// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits.","return (index == end) ||",3203,0.5294117647058824,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// A section is not allowed without a preceding include with alternative. //","SkipSection skipSection = skipSections.isEmpty() ? null : (SkipSection)skipSections.peek();",235,0.9841269841269841,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETCompiler.java
"// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).","public static String encode(String anyURI){",3410,0.5402843601895735,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// // XML Schema anyURI specific information //","// which ASCII characters need to be escaped",3377,0.9473684210526315,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// An expression with more that 931 "+" will break Sun and IBM javac compilers. //","if (chars.length > 500)",411,0.9848484848484849,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETCompiler.java
"// If a newline from the previous character data remains, leave it around to be processed as if it appeared in the included file. //","if (fSavedLine != null)",195,0.9906542056074766,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETCompiler.java
"// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19","None",None,None,None
"// The include failed, so if there is an alternative, we don't skip it. //","String failType = attributes.get("fail");",204,0.9830508474576272,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETCompiler.java
"// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19","None",None,None,None
"// At development time, the real factory may not be available. Just return null. //","defaultValue = null;",137,0.9852941176470589,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EStructuralFeatureImpl.java
"// This pop is safe because a section couldn't have been started without an include that pushed. //","if (skipSections.pop().skip)",262,0.9876543209876543,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETCompiler.java
""/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#doConvertToNode(java.lang.Object)   */"","* @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)",84,0.23622047244094488,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/DefaultDOMHandlerImpl.java
"/*16A0..16FF;*/","/*1780..17FF;*/ "Khmer",",6483,0.7894736842105263,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Cannot start with a '.', '-', or end with a '-'.","if (address.startsWith(".") ||",3014,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Process this first. //","String skeletonURI = attributes.get("skeleton");",278,0.95,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETCompiler.java
"// Ignore this now //","if (entry.getKey().equals("skeleton"))",300,0.9375,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETCompiler.java
"// Don't overwrite exising file","PropertyMerger propertyMerger = new PropertyMerger();",427,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenBaseImpl.java
"// Register our directive. //","JETParser.Directive directive = new JETParser.Directive();",600,0.9583333333333334,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETCompiler.java
"// Create an import manager for this compilation unit","ImportManager importManager = new ImportManager(packageName);",640,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenBaseImpl.java
"// Ignore it if there are multiple comments. //","if (++count > 1)",312,0.9736842105263158,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jmerge/JPatternDictionary.java
"// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //","String[] arguments = (String[])object;",263,0.9888888888888889,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/properties/PropertyMerger.java
"// Interprets escaped characters according to Java literal rules, with one // exception: a single \ is taken literally, not as an error.","public static char parseChar(String c)",322,0.7191011235955056,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/util/CodeGenUtil.java
"// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33","None",None,None,None
"// protected static final EStructuralFeature CONTAINING_FEATURE = new EReferenceImpl(); // protected static final EStructuralFeature CONTAINER = new EReferenceImpl();","protected Map<Entry, Object> map = new HashMap<Entry, Object>();",868,0.6929824561403509,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EStoreEObjectImpl.java
"// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19","None",None,None,None
"/*2FF0..2FFF;*/","/*3000..303F;*/ "CJK Symbols and Punctuation",",6508,0.46153846153846156,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87","None",None,None,None
""/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getPackage(java.lang.String)   */"","* @see org.eclipse.emf.mapping.action.AddRootTopAction#getTopsToAdd()",46,0.25,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping.ecore2ecore.editor/src/org/eclipse/emf/mapping/ecore2ecore/action/AddInputRootAction.java
"// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87","None",None,None,None
"// Entry entry = new Entry(eObject, CONTAINER); // return (InternalEObject)map.get(entry);","public EStructuralFeature getContainingFeature(InternalEObject eObject)",1048,0.6721311475409836,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EStoreEObjectImpl.java
"// Fill 23 of value (byte) -19","CHARS[215] = 33;",3579,0.5647058823529412,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// This should never be called. //","throw new UnsupportedOperationException();",1054,0.9629629629629629,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EStoreEObjectImpl.java
"// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33","None",None,None,None
"// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87","None",None,None,None
"// check for valid escape sequence","if (testChar == '%') {",2285,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //","if (!result && operation != DROP_LINK && (operations & DROP_LINK) != 0)",448,0.9902912621359223,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/DragAndDropCommand.java
"// return a correctly sized result","String[] result = new String[sp];",2038,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"/* EATM getDecoratedAdapterFactory().*/","Object image = itemLabelProvider.getImage(mappedObject);",828,0.5323741007194245,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping.ui/src/org/eclipse/emf/mapping/presentation/MappingEditor.java
"// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19","None",None,None,None
"// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87","None",None,None,None
"/*A000..A48F;*/","/*A490..A4CF;*/ "Yi Radicals",",6520,0.6818181818181818,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33","None",None,None,None
""/*   * @deprecated   */"","* replaced by getETypedElement_Unique()",3290,0.8,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/EcorePackage.java
""/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeatures(org.eclipse.emf.ecore.EClass)   */"","* @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)",84,0.24,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/DefaultDOMHandlerImpl.java
"/*FB50..FDFF;*/","/*FE20..FE2F;*/ "Combining Half Marks",",6526,0.5172413793103449,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19","None",None,None,None
"// eContainer = newContainer; // eContainerFeatureID = newContainerFeatureID;","@Override",217,0.5106382978723404,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EObjectImpl.java
"// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19","None",None,None,None
"// When setting the resource to null we assume that detach has already been called in the resource implementation //","if (resource != null)",952,0.9895833333333334,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/BasicEObjectImpl.java
"// Fill 10 of value (byte) -19","Arrays.fill(CHARS, 1611, 1619, (byte) -87 ); // Fill 8 of value (byte) -87",3678,0.5517241379310345,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Stop listening to the old one. //","if (currentViewer != null)",972,0.9642857142857143,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreEditor.java
""/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getInfo(org.eclipse.emf.ecore.ENamedElement)   */"","* @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)",84,0.234375,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/DefaultDOMHandlerImpl.java
"// Ignore the further-most javadoc //","selection = contents;",505,0.967741935483871,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/JPatternDictionary.java
"// Create annotations // http://www.eclipse.org/emf/2002/Ecore","// http:///org/eclipse/emf/ecore/util/ExtendedMetaData",520,0.4935064935064935,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EcorePackageImpl.java
"/*FF00..FFEF;*/","//missing Specials add manually",6532,0.5084745762711864,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Get what's left of the segments after trimming the prefix.","String[] tailSegments = getTailSegments(oldPrefix);",2719,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"/*1D400..1D7FF;*/","/*20000..2A6D6;*/ "CJK Unified Ideographs Extension B",",6539,0.5,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// added since this encoding only differs w.r.t. presentation","fIANA2JavaMap.put("ISO-IR-138",      "ISO8859_8");",1201,0.6973684210526315,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33","None",None,None,None
"// <p>A valid opaque part must be non-null and non-empty. It may contain // any allowed URI characters, but its first character may not be // <code>/</code>","//return value != null && value.length() != 0 &&",1120,0.631578947368421,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Start listening to the new one. //","if (viewer != null)",979,0.9655172413793104,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreEditor.java
"// Add ASCII Letters and ASCII Hex Numbers","for (int i = 'A'; i <= 'F'; ++i) {",1568,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Create the source and target JDOMs. //","sourceProperties = createPropertiesForURI(arguments[0]);",267,0.9696969696969697,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/properties/PropertyMerger.java
""/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */"","public class FeatureMapEntryItemProvider",43,0.10161662817551963,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.change.edit/src/org/eclipse/emf/ecore/change/provider/FeatureMapEntryItemProvider.java
"//ADD THOSE MANUALLY //F0000..FFFFD; "Private Use", //100000..10FFFD; "Private Use" //FFF0..FFFD; "Specials",","static final String blockRanges =",6546,0.3076923076923077,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.","if (colonIdx == uriSpecLen - 1 || uriSpec.charAt(colonIdx+1) == '#') {",1910,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Create a pattern dictionary for each. //","sourcePatternDictionary = new JPatternDictionary(sourceCompilationUnit, getControlModel());",1213,0.9714285714285714,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/JMerger.java
"// note: segments.length > 0 -> hierarchical","return new URI(true, scheme, authority, device, absolutePath,",2657,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Compute the offset in the sequence of bit patterns for this feature ID // and then get the bit pattern at that index. //","int offset = eDerivedStructuralFeatureID >>> 5;",1694,0.7547169811320755,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/BasicEObjectImpl.java
"// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC","if (m_path.length() == 0 && m_scheme == null &&",1968,0.2534435261707989,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"//  We expect this failure when running stand-alone //","if (EMFPlugin.IS_ECLIPSE_RUNNING)",653,0.9772727272727273,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/JControlModel.java
"// use a stack to accumulate segments","// (i.e. skip trailing separator and anything following it), and of",2014,0.7294117647058823,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Compute the index within that bit pattern for this feature ID // and fetch that bit at that index. //","int bitIndex = eDerivedStructuralFeatureID & 31;",1700,0.7737226277372263,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/BasicEObjectImpl.java
"// Initialize classes and features; add operations and parameters //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$","initEClass(eAttributeEClass, EAttribute.class, "EAttribute", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);",2132,0.6368715083798883,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EcorePackageImpl.java
"// For isSet, we only need to check the bit and return -1 when the bit is 0. //","return bit - 1;",1710,0.9833333333333333,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/BasicEObjectImpl.java
"// If the value index set, there's no index to return. //","return -1;",1719,0.9777777777777777,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/BasicEObjectImpl.java
"// Empty statement.","}",2262,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"//return value != null && value.length() != 0 && //  value.charAt(0) != SEGMENT_SEPARATOR && //  validate(value, URIC_HI, URIC_LO, true, true);","* Returns <code>true</code> if the specified <code>value</code> would be",1124,0.49382716049382713,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// This just notifies those things that are affected by the selection. //","public void selectionChanged(SelectionChangedEvent event)",546,0.9833333333333333,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping.ui/src/org/eclipse/emf/mapping/presentation/MappingEditor.java
"// no validation needed since all components are from existing URIs","return new URI(true, base.scheme(), newAuthority, newDevice,",1990,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// If the result is not a proxy, cache it. //","EPackage result = getEPackageGen();",714,0.9705882352941176,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EClassifierImpl.java
"// Server based authority.","if (m_host != null) {",2467,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// can check against path characters because the set // is the same except for '/' which we've already excluded.","else if (!isPathCharacter(testChar)) {",2294,0.6423357664233577,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Initialize all the fields from the command parameter. //","this.owner = owner;",164,0.9795918367346939,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/RemoveCommand.java
"// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.","if (port < -1 || port > 65535) {",2236,0.34545454545454546,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
""/*   * (non-Javadoc)   *    * @see org.eclipse.jface.window.Window#close()   */"","* @see org.eclipse.emf.mapping.action.AddRootTopAction#getTopsToAdd()",46,0.35443037974683544,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping.ecore2ecore.editor/src/org/eclipse/emf/mapping/ecore2ecore/action/AddInputRootAction.java
"// IPv6 addresses are 128-bit, so there can be at most eight sections.","if (numDigits > 0 && ++counter[0] > 8) {",3238,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
""/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */"","private static class EclipseHelper",1485,0.8,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/generator/AbstractGeneratorAdapter.java
"//return value != null && validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);","}",1228,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
""/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */"","* @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)",84,0.14150943396226415,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/DefaultDOMHandlerImpl.java
"// Count just the bits up to this one. // Note that shifting 32 bits is a no op. //","int result = eVirtualBitCount(bitIndex == 0 ? 0 : bits << 32 - bitIndex);",1737,0.6382978723404256,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/BasicEObjectImpl.java
"// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.","else if (!isHex(testChar)) {",3248,0.6979166666666666,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Determine the index for the feature and return the value at that index, if an index is assigned. //","int index = eVirtualIndex(eDerivedStructuralFeatureID, EVIRTUAL_GET);",1912,0.9878048780487805,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/BasicEObjectImpl.java
"// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87","None",None,None,None
"// Determine if an index is assigned. //","return eVirtualIndex(eDerivedStructuralFeatureID, EVIRTUAL_IS_SET) >= 0;",1925,0.96875,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/BasicEObjectImpl.java
"// Determine the index. //","int index = eVirtualIndex(eDerivedStructuralFeatureID, EVIRTUAL_SET);",1939,0.9523809523809523,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/BasicEObjectImpl.java
""/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */"","public class FeatureMapEntryItemProvider",43,0.09777777777777778,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.change.edit/src/org/eclipse/emf/ecore/change/provider/FeatureMapEntryItemProvider.java
"// If it's newly allocated, add a new value, and indicate there was no previous value. //","eAddVirtualValue(~index, value);",1944,0.9861111111111112,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/BasicEObjectImpl.java
""/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#getChildren()   */"","* @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)",84,0.2608695652173913,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/DefaultDOMHandlerImpl.java
"// Don't use 'cotinue' for this loop. // single-range | from-to-range | subtraction","if (type == T_CHAR && this.chardata == ']' && !firstloop)",7724,0.7207207207207207,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.","CHARS[9] = 35;",3548,0.6666666666666666,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Forward the interned value. //","basicSetInstanceTypeName(instanceClassName);",308,0.9629629629629629,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EClassifierImpl.java
"// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //","Command addCommand = AddCommand.create(domain, owner, feature, domain.getClipboard());",232,0.7373737373737373,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/PasteFromClipboardCommand.java
"// If it's a parameterized type... //","int index = newInstanceTypeName.indexOf('<');",571,0.9666666666666667,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EClassifierImpl.java
"// both prefix (if any) a localpart must be valid NCName","if (prefix.length() > 0 && !XMLChar.isValidNCName(prefix))",46,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/QName.java
"// The instance class name is the erasure. //","String newInstanceClassName = newInstanceTypeName.substring(0, index);",576,0.9722222222222222,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EClassifierImpl.java
"// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33","None",None,None,None
"// If the name isn't a qualified name and isn't a primitive type, it's assumed to denote some arbitrary type parameter. //","if (newInstanceTypeName.indexOf('.') == -1 &&",580,0.99,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EClassifierImpl.java
"// Fill 68 of value (byte) 33","CHARS[8486] = -19;",4135,0.5476190476190477,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Be sure to pick up any trailing [] brackets. //","newInstanceClassName += newInstanceTypeName.substring(end + 1);",598,0.9743589743589743,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EClassifierImpl.java
"// If the bundle can't be found the normal way, try to find it as the base URL. // If that also doesn't work, rethrow the original exception. //","InputStream inputStream =  new URL(getBaseURL().toString() + "plugin.properties").openStream();",400,0.6966292134831461,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/DelegatingResourceLocator.java
"// Is the first character a special character, i.e., something other than '@'? //","char firstCharacter = uriFragmentSegment.charAt(0);",374,0.9850746268656716,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EModelElementImpl.java
"// note: isRelative() -> hierarchical","String newAuthority = authority;",1947,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Returns null if the specified value is null or would be a valid path // segment array of a URI; otherwise, the value of the first invalid // segment.","private static String firstInvalidSegment(String[] value)",1248,0.6333333333333333,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33","None",None,None,None
"// Is it the start of a source URI of an annotation? //","if (firstCharacter == '%')",379,0.9761904761904762,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EModelElementImpl.java
"// Recompute the read only state. //","if (editingDomain.getResourceToReadOnlyMap() != null)",586,0.9655172413793104,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreEditor.java
"//return value == null || validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);","}",1143,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Refresh any actions that may become enabled or disabled. //","setSelection(getSelection());",592,0.9803921568627451,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreEditor.java
"// Go through class super types to catch constraints from other packages","for (GenClass genClass : getGenClasses())",2510,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenPackageImpl.java
"// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19","None",None,None,None
"// Empty.","}",90,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33","None",None,None,None
"// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null","return absolutePath || (authority == null && device == null);",1384,0.775,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19","None",None,None,None
"// if the node is less than 1 line long, but its contents is replaced by multiple lines, // comment out each line in it","if (firstLine == lastLine && getAllTrackedContentsMap().containsKey(node))",717,0.8554216867469879,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJCompilationUnit.java
"// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19","None",None,None,None
"// Find the closing '%' //","int index = uriFragmentSegment.lastIndexOf("%");",383,0.95,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EModelElementImpl.java
""/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.BasicExtendedMetaData#isFeatureKindSpecific()   */"","String OPTION_EXTENDED_META_DATA = "EXTENDED_META_DATA";",147,0.7019867549668874,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/XMLResource.java
"// cause a syntax error","}",1154,0.8085106382978723,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenDataTypeImpl.java
"// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19","None",None,None,None
"// Decode all encoded characters. //","String source = URI.decode(uriFragmentSegment.substring(1, index));",388,0.9666666666666667,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EModelElementImpl.java
"// If that fails, determine the URL for the class itself. // The URL will be of one of the following forms, // so there are a few good places to consider looking for the plugin.properties. // // For a plugin.xml with runtime="common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="runtime/common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/runtime/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is jarred: // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is not jarred. // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/org/eclipse/emf/common/CommonPlugin.class // // Running in PDE with bin on classpath: // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/bin/org/eclipse/emf/common/CommonPlugin.class //","String className = theClass.getName();",117,0.08809746954076851,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/DelegatingResourceLocator.java
"// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87","None",None,None,None
"// Check for a count, i.e., a '.' followed by a number. //","int count = 0;",392,0.9777777777777777,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EModelElementImpl.java
"// Look for trailing count. //","int index = uriFragmentSegment.lastIndexOf(".");",425,0.9583333333333334,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EModelElementImpl.java
"// Look for a matching named element. //","for (Object object : eContents())",446,0.96875,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EModelElementImpl.java
"// return eContainerFeatureID;","@Override",211,0.9629629629629629,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EObjectImpl.java
"// Find the uppermost class loader in the hierarchy that can load the class. //","ClassLoader result = getContextClassLoader();",319,0.984375,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EPackageRegistryImpl.java
"// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87","None",None,None,None
"// JControlModel.class is used with classNames that were not found //","classNameToClassMap.put(className, JControlModel.class);",660,0.9827586206896551,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/JControlModel.java
"// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87","None",None,None,None
"// Register with the upper most class loader that's able to load the class. //","return delegateRegistry(result).put(key, value);",348,0.9841269841269841,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EPackageRegistryImpl.java
"// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19","None",None,None,None
"// This let's us test whether the string exists as a file. // If not, we try as a URI. //","URI uri;",181,0.8103448275862069,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/plugin/EcorePlugin.java
"// ...or if it's a wildcard or group feature.  Also, make it FeatureMap-typed. //","int kind = ExtendedMetaData.INSTANCE.getFeatureKind(eReference);",2235,0.9848484848484849,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseEcoreBuilder.java
"// First try to see if this class has an eInstance  //","String location = element.getAttribute(attributeName);",212,0.975609756097561,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/plugin/RegistryReader.java
"// Try and get the resource selection to determine a current directory for the file dialog. //","if (selection != null && !selection.isEmpty())",301,0.987012987012987,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/DynamicModelWizard.java
"// Remember the file. //","final IFile modelFile = getModelFile();",120,0.9473684210526315,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/DynamicModelWizard.java
"// Do the work within an operation. //","WorkspaceModifyOperation operation =",124,0.9666666666666667,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/DynamicModelWizard.java
"// no authority: use base's","newAuthority = base.authority();",1959,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Create a resource set //","ResourceSet resourceSet = new ResourceSetImpl();",134,0.9523809523809523,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/DynamicModelWizard.java
""/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getNamespace(org.eclipse.emf.ecore.EPackage)   */"","* @see org.eclipse.emf.mapping.action.AddRootTopAction#getTopsToAdd()",46,0.21875,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping.ecore2ecore.editor/src/org/eclipse/emf/mapping/ecore2ecore/action/AddInputRootAction.java
"// Get the URI of the model file. //","URI fileURI = URI.createPlatformResourceURI(modelFile.getFullPath().toString(), true);",139,0.9629629629629629,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/DynamicModelWizard.java
"// Returns true if the given value is an archive scheme, as defined by // the org.eclipse.emf.common.util.URI.archiveSchemes system property. // By default, "jar", "zip", and "archive" are considered archives.","return value != null && archiveSchemes.contains(value.toLowerCase());",1541,0.4789915966386555,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// If the feature is a bidirectional reference with a multiplicity-many reverse, a composite reverse, // or a multiplicity-1 reverse that is already set (on value), then we'll switch things around and  // execute this command a little differently, because otherwise it's not undoable. //","@Override",74,0.09448818897637795,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore.ui/src/org/eclipse/emf/codegen/ecore/genmodel/provider/GenBaseItemProvider.java
"// Add the initial model object to the contents. //","EObject rootObject = createInitialModel();",147,0.975609756097561,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/DynamicModelWizard.java
"// If a sibling has been specified, add the best index possible to each CommandParameter. //","if (sibling != null)",773,0.9868421052631579,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"// Save the contents of the resource to the file system. //","Map<Object, Object> options = new HashMap<Object, Object>();",155,0.9787234042553191,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/DynamicModelWizard.java
"// There are attributes to handle.","}",559,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/util/XMLTypeResourceImpl.java
"// Make sure the file ends in ".ecore". //","String requiredExt = EcoreEditorPlugin.INSTANCE.getString("_UI_DynamicInstanceFilenameExtension");",245,0.9696969696969697,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/DynamicModelWizard.java
"// genPackage can be a broken proxy","{",2936,0.7631578947368421,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenModelImpl.java
"// Create a page, set the title, and the initial model file name. //","newFileCreationPage = new DynamicModelWizardNewFileCreationPage("Whatever", selection);",291,0.9814814814814815,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/DynamicModelWizard.java
"// We never directly set a multiplicity-many feature to a list directly.  Instead, we remove the old values // values, move the values that remain, and insert the new values.  If all old values are removed, we'll still // set it to an empty list, or unset it, as appropriate.  //","@Override",74,0.10084033613445378,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore.ui/src/org/eclipse/emf/codegen/ecore/genmodel/provider/GenBaseItemProvider.java
"// Get the resource... //","Object selectedElement = selection.iterator().next();",305,0.95,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/DynamicModelWizard.java
"// This gives us a directory... //","if (selectedResource instanceof IFolder || selectedResource instanceof IProject)",318,0.9629629629629629,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/DynamicModelWizard.java
"// Set this for the container. //","newFileCreationPage.setContainerFullPath(selectedResource.getFullPath());",322,0.9615384615384616,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/DynamicModelWizard.java
"// if the relative path is empty or ends in an empty segment, a parent  // reference, or a self reference, add a trailing separator to a // non-empty path","if (sp > 0 &&  (segmentCount == 0 ||",2027,0.6222222222222222,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// This returns a name like employeeNumber formatted like 'Employee Number' // This returns the same as getCapName unless it starts with "is" in which case the "is" is stripped  // This returns the name to be used in accessor method names; it's the same as getCapName, unless this is the key or value of a map entry, for which "Typed" is prepended // This returns the name of the get array-based accessor method for the list feature. // This returns the name of the get accessor method for the feature, i.e., either "is" or "get" is prefixed to getAccessorName","None",None,None,None
"// For a many-to-many association, the command can only be undoable if the value or owner is last in its // respective list, since the undo will include an inverse add.  So, if the value is last, but the owner is // not, we create an undoable compound command that removes from the opposite end and then inserts the new // value. //","EList<?> list = (EList<?>)((EObject)owner).eGet(eReference);",200,0.480225988700565,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/SetCommand.java
"// eVirtualIndexBits[offset] = newIndexBits;","throw new UnsupportedOperationException();",1653,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/BasicEObjectImpl.java
"// If there is no list to add to, no collection or an empty collection from which to add, or the index is out of range... //","if (ownerList == null ||",281,0.9896907216494846,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/AddCommand.java
"// eVirtualValues = newValues;","throw new UnsupportedOperationException();",1773,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/BasicEObjectImpl.java
"// This is package,  // so check the package information if this is in cat file. // If it is, then load the .cat file into the tree thereby traversing it; // otherwise, just traverse the tree. //","RoseNode loadingNode = tree.findNodeWithKey(RoseStrings.IS_LOADED);",94,0.18497109826589594,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/UnitTreeBuilder.java
"// no device: use base's","newDevice = base.device();",1964,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //","commandStack.addCommandStackListener",783,0.9893617021276596,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreEditor.java
"// Setting at an index. Make sure the index is valid, the type is valid, and the value isn't already in a // unique feature. Record the old value. //","if (index >= 0 && index < ownerList.size() && eType.isInstance(value) &&",517,0.8235294117647058,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/SetCommand.java
"// since base must be hierarchical, and since a non-hierarchical URI // must have both scheme and opaque part, the complete absolute URI is // needed to resolve to a non-hierarchical URI","if (!isHierarchical()) return this;",2128,0.5446009389671361,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Make sure it's okay. //","if (theSelection != null && !theSelection.isEmpty())",839,0.95,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreEditor.java
"// If the other end is a many, then we should remove the owner from the old value's opposite feature so that undo will put it back. //","if (oldValue instanceof Collection)",620,0.9905660377358491,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/SetCommand.java
"// Look for a likely plugin name. //","index = encodedPath.indexOf("/org.");",977,0.9642857142857143,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/Generator.java
"// Create type parameters","addETypeParameter(eeListEDataType, "E");",2103,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EcorePackageImpl.java
"//if found "no data" just return null","b1 = base64Alphabet[d1];",309,0.8493150684931506,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// If it's a platform plugin URI, include it in the map. //","URI genModelLocation = entry.getValue();",630,0.9782608695652174,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Keep track of all the entry features that are already in the feature map and that will be added, excluding // XML text, CDATA, and comments (if we're in a mixed type). //","documentRoot = ExtendedMetaData.INSTANCE.getDocumentRoot(eClass.getEPackage()) == eClass;",304,0.777292576419214,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/AddCommand.java
"// else keep authority, device, path, and query","// always keep fragment, even if null, and use scheme from base;",1987,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Determine the values to be added and add them at the right position. //","List<Object> addedValues = new BasicEList.FastCompare<Object>(values);",155,0.9830508474576272,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/SetCommand.java
"// note: it's okay for two URIs to share a segments array, since // neither will ever modify it","if (authority == null)",1954,0.8062015503875969,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Find the fragment root so that we can generate to the right location (by default). //","IPath targetFragmentRoot = project.getFullPath();",510,0.9859154929577465,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
""/*   * Returns the base portion of the dynamic template path.   */"","private List<String> getBaseTemplatePath()",474,0.94,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/generator/AbstractGeneratorAdapter.java
""/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */"","* @see org.eclipse.emf.mapping.action.AddRootTopAction#getTopsToAdd()",46,0.25925925925925924,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping.ecore2ecore.editor/src/org/eclipse/emf/mapping/ecore2ecore/action/AddInputRootAction.java
"// Remember it. //","currentViewer = viewer;",986,0.9285714285714286,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreEditor.java
"// Either delegate the call or return nothing. //","structuredItemContentProvider != null ?",435,0.975,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/AdapterFactoryItemDelegator.java
"// Now we could check that the adapter implements interface ITableItemFontProvider. //","if (tableItemFontProvider  != null)",294,0.9864864864864865,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/AdapterFactoryItemDelegator.java
"// It's okay for there not be a precompiled template, so fail quietly.","}",519,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/generator/AbstractGeneratorAdapter.java
"// We don't need to encode here because the only platform resource URIs in the map are for projects // whose names are the same as corresponding plug-in IDs, and hence never need to be encoded // (see EcorePlugin.computePlatformResourceToPlatformPluginMap()). //","resourceSet.getURIConverter().getURIMap().remove(URI.createPlatformResourceURI(getModelProjectName() + "/", false));",654,0.5328947368421053,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer/src/org/eclipse/emf/importer/ModelImporter.java
"// There must be at least one match. //","if (result.length() == 0)",718,0.9666666666666667,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/JMerger.java
""/*     * (non-Javadoc) Method declared on Dialog.     */"","* @see org.eclipse.emf.mapping.action.AddRootTopAction#getTopsToAdd()",46,0.49122807017543857,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping.ecore2ecore.editor/src/org/eclipse/emf/mapping/ecore2ecore/action/AddInputRootAction.java
"// GenTypeParameter","None",None,None,None
"// This implements the following order of preference: //   1. full refresh and update //   2. full refresh (add update if necessary) //   3. refresh element with update //   4. refresh element (if necessary) //   5. update element //","if (n1.getElement() == null && n1.isLabelUpdate())",372,0.39826839826839827,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/provider/AdapterFactoryContentProvider.java
"// GenTypedElement","None",None,None,None
"// The try/catch provides backwards compatibility with the old resource // key, "_UI_CreateChild_label", and should be removed at the next // release, when we can expect users to regenerate. //","// release, when we can expect users to do a regen.",1643,0.5486725663716814,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"// EATM Color startColor = display.getSystemColor(SWT.COLOR_LIST_SELECTION);","Color startColor = display.getSystemColor(SWT.COLOR_LIST_BACKGROUND);",782,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/celleditor/AdapterFactoryTableTreeEditor.java
"//GenRuntimeVersion","None",None,None,None
"// These will be the children belonging to this feature. //","Collection<Object> childrenOfThisFeature = new ArrayList<Object>();",1224,0.9791666666666666,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"//GenModelPackage","None",None,None,None
"// There is no executable command, so we'd better nix the whole deal. //","event.detail = DND.DROP_NONE;",333,0.9827586206896551,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/dnd/EditingDomainViewerDropAdapter.java
"// this returns either "attribute", "attribute list", "reference", or "reference list"","boolean isReferenceType();",384,0.8685714285714285,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/GenFeature.java
"// Do the encoding. //","commandCreationRecord.encode(createEncoder());",100,0.9411764705882353,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/command/PersistentCommandStack.java
"// Get the target object from the item widget and the mouse location in it. //","Object target = extractDropTarget(event.item);",273,0.9838709677419355,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/dnd/EditingDomainViewerDropAdapter.java
"// add variable fragment to new declaration","ListRewrite newListRewrite = rewriter.getListRewrite(newDeclaration, FieldDeclaration.FRAGMENTS_PROPERTY);",512,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJField.java
"// Determine if we can create a valid command at the current location. //","boolean valid = false;",278,0.9830508474576272,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/dnd/EditingDomainViewerDropAdapter.java
"// Load the resource through the editing domain. //","resource = editingDomain.getResourceSet().getResource(resourceURI, true);",1067,0.9761904761904762,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreEditor.java
""/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getType(org.eclipse.emf.ecore.EPackage,   *      java.lang.String)   */"","* @see org.eclipse.emf.mapping.action.AddRootTopAction#getTopsToAdd()",46,0.19858156028368795,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping.ecore2ecore.editor/src/org/eclipse/emf/mapping/ecore2ecore/action/AddInputRootAction.java
""/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */"","public class FeatureMapEntryItemProvider",43,0.17959183673469387,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.change.edit/src/org/eclipse/emf/ecore/change/provider/FeatureMapEntryItemProvider.java
"// Otherwise, the source should be available now as event.data, and we // can create the command. //","source = extractDragSource(event.data);",220,0.8309859154929577,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/dnd/EditingDomainViewerDropAdapter.java
"// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //","* This keeps track of the factory used to generate the adapters.",45,0.3609022556390977,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/AdapterFactoryItemDelegator.java
""/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */"","public class FeatureMapEntryItemProvider",43,0.09865470852017937,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.change.edit/src/org/eclipse/emf/ecore/change/provider/FeatureMapEntryItemProvider.java
"//GenModelFactory","None",None,None,None
"// current document reference: keep no path or query","newAbsolutePath = false;",2159,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Ignore if there is not substantial change. //","Object oldValue = sourceGetMethod.invoke(targetNode, NO_ARGUMENTS);",744,0.9743589743589743,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/JMerger.java
"// lower all except the last upper case character if there are // more than one upper case characters in the beginning. // e.g. XSDElementContent -> xsdElementContent // However if the whole string is upper case, the whole string // is turned into lower case. // e.g. CPU -> cpu","if (name.length() == 0)",411,0.36428571428571427,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/util/CodeGenUtil.java
"// Look for each unwrapped object as a value of a wrapper, replacing it with the first one found. //","for (ListIterator<Object> i = result.listIterator(); i.hasNext(); )",2948,0.9875,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"// GenAnnotation","None",None,None,None
"// It must be an unsettable feature to be empty and considered set. //","copyList.clear();",232,0.9821428571428571,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/InitializeCopyCommand.java
"// matching authorities and no device or path removal","newAuthority = null;",2142,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// always keep fragment, even if null, and use scheme from base; // no validation needed since all components are from existing URIs","return new URI(true, base.scheme(), newAuthority, newDevice,",1989,0.6503067484662577,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Check to see if a container is being put into a contained object. //","containment |= feature instanceof EReference && ((EReference)feature).isContainment();",372,0.9821428571428571,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/AddCommand.java
"//(new AddCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));","(new AddCommand(domain, mapping, MappingPackage.eINSTANCE.getMapping_Nested(), siblingsToReparent));",166,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/command/AddMappingCommand.java
"// // Static initialization //","static {",932,0.9166666666666666,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"/* Trick to import java.util.* without warnings */","stringBuffer.append(TEXT_1);",200,0.4174757281553398,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/templates/edit/ItemProviderAdapterFactory.java
"// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //","None",None,None,None
"// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //","if (!result && operation != DROP_COPY && operation != DROP_LINK && (operations & DROP_COPY) != 0)",431,0.9902912621359223,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/DragAndDropCommand.java
""/*     * The type string must be qualified by its package uri, e.g. DTD.xmi:DTDElement.     * The package uri is used to look up the package by calling RefRegister.getPackage(uri).     */"","topToBottomTypeTable.put(topType, bottomType);",237,0.6267281105990783,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/domain/PluginAdapterFactoryMappingDomain.java
"// This will be the default return value. //","boolean result = false;",369,0.9714285714285714,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/DragAndDropCommand.java
""/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootBottomAction#getBottomsToAdd()   */"","* @see org.eclipse.emf.mapping.action.AddRootTopAction#getTopsToAdd()",46,0.25925925925925924,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping.ecore2ecore.editor/src/org/eclipse/emf/mapping/ecore2ecore/action/AddInputRootAction.java
"// Try again. //","reset();",435,0.9166666666666666,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/DragAndDropCommand.java
"// Otherwise, we could check that the adapter implements interface IItemColorProvider. //","IItemColorProvider itemColorProvider = (IItemColorProvider)adapterFactory.adapt(object, IItemColorProvider.class);",339,0.987012987012987,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/AdapterFactoryItemDelegator.java
"// Now we could check that the adapter implements interface ITableItemColorProvider. //","if (tableItemColorProvider  != null)",331,0.9866666666666667,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/AdapterFactoryItemDelegator.java
"// This turns a featureless set command into an operation to create a mapping. // This is invoked during drag and drop. //","if (commandClass == SetCommand.class &&",453,0.7878787878787878,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/domain/AdapterFactoryMappingDomain.java
"//GenEnumImpl","None",None,None,None
"// We've switch the operation! //","operation = DROP_COPY;",442,0.9629629629629629,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/DragAndDropCommand.java
"// Select the new file resource in the current view. //","IWorkbenchWindow workbenchWindow = workbench.getActiveWorkbenchWindow();",175,0.9772727272727273,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/DynamicModelWizard.java
"// If the type isn't Object, we need to cast. If it's a primitive, we need to unbox. //","if (includeCast ? !isObjectType() : isPrimitiveType())",1178,0.9852941176470589,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenDataTypeImpl.java
"// use a stack to accumulate segments of base, except for the last // (i.e. skip trailing separator and anything following it), and of // relative path","for (int i = 0; i < baseSegmentCount - 1; i++)",2014,0.6033519553072626,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Now we want to find all the other objects with this same parent. // So we can collection siblings together and give the parent control over their removal. //","List<Object> siblings = new ArrayList<Object>();",495,0.5837837837837838,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/domain/AdapterFactoryEditingDomain.java
"// We can't have a null name, in case we're using EMOF serialization. //","None",None,None,None
"// Determine the object's parent. //","Object parent = getParent(object);",489,0.9666666666666667,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/domain/AdapterFactoryEditingDomain.java
"// If it's an interface, then it will be treated as an EClass //","if ((type.getFlags() & Flags.AccInterface) != 0 || "class".equals(kind))",998,0.98,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// this returns either "EAttribute" or "EReference"","String getImportedMetaType();",382,0.8181818181818182,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/GenFeature.java
"// Continue to compute the offset.","}",1723,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/BasicEObjectImpl.java
"// Defer the handling of the opposite. //","if (opposite != null)",1558,0.9696969696969697,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// this guard is for extra security, but should not be necessary","if (editingDomain != null && command != null)",237,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/action/StaticSelectionCommandAction.java
"// Do this first for better error message during setEParameterProperties. //","if (parent instanceof EOperation)",421,0.9846153846153847,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseEcoreBuilder.java
"// set properties","astCompilationUnit.setProperty(ASTJCompilationUnit.NAME_PROPERTY, name);",292,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTFacadeHelper.java
"// Index counters into indices1, indices2, and indices.  //","int i1 = 0;",403,0.9795918367346939,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/RemoveCommand.java
"// Just remember it; it's encoded later during execution, which is more efficient. //","CommandCreationRecord commandCreationRecord = new CommandCreationRecord(commandClass, commandParameter);",69,0.9859154929577465,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/command/PersistentCommandStack.java
"// Remove objects from the owner list by index, starting from the end. //","for (i = indices.length - 1; i >= 0; i--)",322,0.9830508474576272,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/RemoveCommand.java
"//GenModelFactoryImpl","None",None,None,None
"// We don't want to insert an object before or after itself... //","if (collection.contains(owner))",630,0.9807692307692307,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/DragAndDropCommand.java
"// add IANA to Java encoding mappings.","fIANA2JavaMap.put("BIG5",            "Big5");",937,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Create a code formatter for this compilation unit, if needed","//",1001,0.9906542056074766,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/generator/AbstractGeneratorAdapter.java
"// This is the feedback we use to indicate drop on; it will only be used if the command is executable. //","feedback = FEEDBACK_SELECT;",665,0.9879518072289156,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/DragAndDropCommand.java
"// Get the resource parent, if its a file. //","IResource selectedResource = (IResource)selectedElement;",310,0.9714285714285714,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/DynamicModelWizard.java
"// We'd like the collection of replacements selected after this replace completes. //","affectedObjects = collection;",280,0.9861111111111112,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/ReplaceCommand.java
"// Repeatedly select the lower index and corresponding object, and advance past the selected pair. //","while (o1 != null && o2 != null)",417,0.9882352941176471,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/RemoveCommand.java
"// Wrap any new children and add them to the map. Remove each current child from the set of old children. //","for (Object child : delegateChildren)",207,0.9883720930232558,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/DelegatingWrapperItemProvider.java
"// Ignore this soft dependency when it's not satisfied.","}",3060,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenPackageImpl.java
"// Simply remove the object from the owner list. //","ownerList.remove(value);",272,0.975609756097561,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/ReplaceCommand.java
"// Make up a unique new name here. //","String defaultModelBaseFilename = eClass.getName();",326,0.9642857142857143,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/DynamicModelWizard.java
"// Prepare for CreateChild item addition or removal. //","createChildMenuManager = new MenuManager(EcoreEditorPlugin.getPlugin().getString("_UI_CreateChild_menu_item"));",432,0.9782608695652174,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreActionBarContributor.java
"// Check all the siblings to see which if any should now be nested under this new mapping. // The are accumulated into a list so that they can be removed as a single command with a single notification. //","Collection<Mapping> siblingsToReparent = new ArrayList<Mapping>();",138,0.6134453781512605,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/command/AddMappingCommand.java
"// J9 2.2 has problems assigning null to a Class variable. //","Object result = eType.getInstanceClass();",1103,0.9795918367346939,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenBaseImpl.java
"// always returns original value","return getASTNode().isConstructor();",84,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJMethod.java
"// Use the original to do the add, but only if it's of the same type as the copy. // This ensures that if there is conversion being done as part of the copy, // as would be the case for a cross domain copy in the mapping framework, // that we do actually use the converted instance. //","if (original.size() == copy.size())",159,0.43448275862068964,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/PasteFromClipboardCommand.java
"// add added super interfaces to the array","superInterfaces = combineArrayAndList(superInterfaces, addedSuperInterfaces);",84,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJEnum.java
"// Special case for a reference to Ecore to ensure that flag settings are respected and are set only for Ecore itself. //","if (EcorePackage.eNS_URI.equals(ePackage.getNsURI()))",648,0.9897959183673469,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer/src/org/eclipse/emf/importer/ModelImporterApplication.java
"// not supported in JDOM","}",125,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/jdom/JDOMJMethod.java
"// only 1 fragment left - revert the changes","revertPrepareSplit();",518,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJField.java
"// We'll assume that all the CreateCopyCommand's and InitializeCopyCommand's can execute. //","result = true;",188,0.9875,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/CopyCommand.java
"// split is performed","splitPerformed = true;",522,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJField.java
"// For RemoveCommand, we will find the owner by calling EditingDomain.getParent() on the object(s) being removed. //","CompoundCommand removeCommand = new CompoundCommand(CompoundCommand.MERGE_COMMAND_ALL);",473,0.98989898989899,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/domain/AdapterFactoryEditingDomain.java
"// not supported in JDOM","}",125,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/jdom/JDOMJMethod.java
"// setResourceFactoryRegister(new ExtensibleContextResourceFactoryRegister()); //EATM setResourceFactoryRegister(new ContextResourceFactoryRegister());","public EditingDomain getEditingDomain()",294,0.6846846846846847,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/domain/AdapterFactoryEditingDomain.java
"// name already contains ".*" - unset on demand property","setNodeProperty(getASTNode(), false, ImportDeclaration.ON_DEMAND_PROPERTY);",78,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJImport.java
"// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33","None",None,None,None
"// Three arguments are expected: the .xml getControlModel() URI, the source java URI, and the target java URI. //","String contents = execute(new BasicMonitor(), (String[])object);",1176,0.9893617021276596,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/JMerger.java
"// For lists, maps, and feature maps, the default is many-valued, which can be overridden by an upper-bound declaration. //","if (isListType(type) && (dataType == null || modelType != null && !isListType(modelType)))",1729,0.9902912621359223,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// If there is no Ecore representation or it's invalid, e.g., when - is used to omit a specification, then just use the Java representation. //","if (ecoreEGenericType == null || ecoreEGenericType.getEClassifier() == null)",2325,0.9914529914529915,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Containers are transient by default unless explicitly annotated otherwise. //","if (eOpposite.isContainment() && !transientEReferenceWithOpposite.contains(eReference))",447,0.9855072463768116,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Consider each GenModel location URI for each required plugin. //","for (URI uri : allPluginsWithGenModels.get(pluginID))",650,0.9821428571428571,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Prepare for CreateSibling item addition or removal. //","createSiblingMenuManager = new MenuManager(EcoreEditorPlugin.getPlugin().getString("_UI_CreateSibling_menu_item"));",437,0.9791666666666666,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreActionBarContributor.java
"// Get extra icon and bounds for first column of ExtendedTableTreeItem. //","Image extraImage = null;",614,0.9838709677419355,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/celleditor/AdapterFactoryTableTreeEditor.java
"// Force an update because Eclipse hides empty menus now. //","submenuManager.addMenuListener",442,0.9795918367346939,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreActionBarContributor.java
"// If the notification is an IViewerNotification, it specifies how ViewerRefresh should behave.  Otherwise fall // back to NotifyChangedToViewerRefresh, which determines how to refresh the viewer directly from the model // notification. //","if (notification instanceof IViewerNotification)",258,0.6357615894039735,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/provider/AdapterFactoryContentProvider.java
"// Remove any menu items for old selection. //","if (createChildMenuManager != null)",523,0.972972972972973,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreActionBarContributor.java
"// A SetCommand needs to go through SetCommand.create() to ensure it can execute and undo. //","if (commandClass == SetCommand.class)",452,0.987012987012987,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/DelegatingWrapperItemProvider.java
"// Query the new selection for appropriate new child/sibling descriptors //","Collection<?> newChildDescriptors = null;",534,0.984375,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreActionBarContributor.java
"// Generate actions for selection; populate and redraw the menus. //","createChildActions = generateCreateChildActions(newChildDescriptors, selection);",550,0.9824561403508771,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreActionBarContributor.java
"// Draw ellipses, offset if down. //","else if (hasLaunched)",698,0.9655172413793104,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/celleditor/AdapterFactoryTableTreeEditor.java
"// Empty extension to limit the effect of suppressing the deprecation warning.","}",1017,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/Generator.java
""/*  protected Command createSetCommand(EditingDomain domain, Object owner, Object feature, Object value)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, SetCommand.class, new CommandParameter(owner, feature, value));  }  protected Command createCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)  {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createCreateCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CreateCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createInitializeCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, InitializeCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createRemoveCommand(EditingDomain domain, Object owner, Object feature, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, RemoveCommand.class, new CommandParameter(owner, feature, collection));  }  protected Command createReplaceCommand(EditingDomain domain, Object owner, Object feature, Object value, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, collection));  }  protected Command createAddCommand(EditingDomain domain, Object owner, Object feature, Collection collection, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, collection, index));  }  protected Command createMoveCommand(EditingDomain domain, Object owner, Object feature, Object value, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, index));  }  protected Command createDragAndDropCommand    (EditingDomain domain, Object owner, float location, int operations, int operation, Collection collection)  {    DragAndDropCommand.Detail detail = new DragAndDropCommand.Detail(location, operations, operation);    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, DragAndDropCommand.class, new CommandParameter(owner, detail, collection));  }*/"","int position,",184,0.009832036050798854,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// Iterate over all the plugin IDs to determine the dependency closure. // The list grows as the plugins are visited. //","for (int i = 0; i < allReferencedPluginIDs.size(); ++i)",595,0.7547169811320755,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Look into SubContributionItems //","IContributionItem contributionItem = items[i];",679,0.967741935483871,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreActionBarContributor.java
"// else keep device, path, and query","}",1985,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// If it's really a contained child, return the feature for it. //","return eObject.eContainingFeature();",406,0.9811320754716981,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.edit/src/org/eclipse/emf/ecore/provider/EGenericTypeItemProvider.java
"// We'll need to keep track of the information we use to create the // command, so that we can recreate it in drop.","dragAndDropCommandInformation = new DragAndDropCommandInformation(domain, target, location, event.operations, originalOperation, source);",286,0.7397260273972602,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/dnd/EditingDomainViewerDropAdapter.java
"// Changes to the parameters should also update the label. //","case EcorePackage.EOPERATION__EGENERIC_TYPE:",301,0.98,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.edit/src/org/eclipse/emf/ecore/provider/EOperationItemProvider.java
"// Returns true if the non-relative path includes segments that would be // collapsed when resolving; false otherwise.  If preserveRootParents is // true, collapsible segments include any empty segments, except for the // last segment, as well as and parent and self references.  If // preserveRootsParents is false, parent references are not collapsible if // they are the first segment or preceded only by other parent // references.","private boolean hasCollapsableSegments(boolean preserveRootParents)",2198,0.2857142857142857,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"//The shared instance.","private static EMFAntPlugin plugin;",27,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ant/src/org/eclipse/emf/ant/EMFAntPlugin.java
"// Ignore the unset notification for an isMany feature; the value is boolean in this case. //","if (feature.isMany())",2525,0.9868421052631579,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"// If necessary, get a command that replaces unwrapped values by their wrappers in the result and affected objects. //","return wrapCommand(result, object, commandClass, commandParameter, oldCommandParameter);",1007,0.9897959183673469,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"// InputStream contents = new ByteArrayInputStream(bytes);","String redirection = getGenModel().getRedirection();",736,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenBaseImpl.java
"// Now we could check that the adapter implements interface ITableItemLabelProvider. //","if (tableItemLabelProvider != null)",212,0.9866666666666667,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/AdapterFactoryItemDelegator.java
"// If we have children to remove for this feature, create a command for it. //","if (!childrenOfThisFeature.isEmpty())",1242,0.9838709677419355,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"// Create helpers to cache and supply information for unique naming","switchHelper = new SwitchHelper();",2930,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenPackageImpl.java
"//GenAnnotationImpl","None",None,None,None
"// create OK and Cancel buttons by default","okButton = createButton(parent, IDialogConstants.OK_ID,",152,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/provider/InputDialog.java
"// Set the error message text // See https://bugs.eclipse.org/bugs/show_bug.cgi?id=66292","setErrorMessage(errorMessage);",200,0.46153846153846156,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/provider/InputDialog.java
"// Walk the fields. //","boolean hasEnumLiteral = false;",923,0.9411764705882353,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// index of first segment that is different between endPath and startPath","int diff = 0;",2251,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// If the local transfer supports this data type, switch to that data type //","None",None,None,None
"// Create the options model. //","controlModel =  new JControlModel();",1203,0.96,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/JMerger.java
"// drop last segment from base, as in resolving","int startCount = startPath.length > 0 ? startPath.length - 1 : 0;",2247,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// treat an empty base path as the root absolute path","String[] startPath = base.collapseSegments(preserveRootParents);",2243,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Create enums","spaceTypeEEnum = createEEnum(SPACE_TYPE);",322,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/namespace/impl/XMLNamespacePackageImpl.java
"// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //","editorActionDelegate.selectionChanged(this, selection);",107,0.8857142857142857,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/action/DelegatingCommandAction.java
"//(eType instanceof EDataType)","if (primitiveAsObject && isPrimitiveType(eType))",1297,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenBaseImpl.java
"//GenModelPackageImpl","None",None,None,None
"// Determine the required plugins. //","URI manifestURI = URI.createURI(referencedProject.getFullPath() + "/META-INF/MANIFEST.MF");",568,0.967741935483871,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// In column 0, the drop-down is indented past the collapse/expand icon. //","if (currentColumn == 0)",304,0.9838709677419355,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/celleditor/AdapterFactoryTableTreeEditor.java
"// Does nothing","}",383,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenBaseImpl.java
"// user rejects a relative path: keep absolute or no path","}",2154,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Draw the icons. //","if (image != null) drawImage(event.gc, image, imageBounds);",634,0.9375,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/celleditor/AdapterFactoryTableTreeEditor.java
"// I assume that the editorInput is a file object. //","modelFile = (IFileEditorInput)getEditorInput();",1287,0.9761904761904762,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping.ui/src/org/eclipse/emf/mapping/presentation/MappingEditor.java
"// matching devices and no path removal","newDevice = null;",2147,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Clear the import manager","setImportManager(null);",780,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenBaseImpl.java
"// order genPackages by putting firstGenPackage (if non-null) first","List<GenPackage> orderedGenPackages = genPackages;",1404,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenBaseImpl.java
"// Remember the viewer and listen to SWT.DragDetect to alert the start of the drag operation. //","this.viewer = viewer;",60,0.9873417721518988,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/dnd/ViewerDragAdapter.java
"//GenFeatureImpl","None",None,None,None
""/*        text = new Text(composite, SWT.SINGLE | SWT.BORDER);        text.setLayoutData(new GridData(GridData.GRAB_HORIZONTAL                | GridData.HORIZONTAL_ALIGN_FILL));*/"","text = createText(composite);",185,0.4919786096256685,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/provider/InputDialog.java
"// If the value is null, the key is a referenced object","@Override",3166,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenBaseImpl.java
"// keep query and select relative or absolute path based on length","String[] rel = findRelativePath(base, preserveRootParents);",2177,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
""/*   * Set from {@link #isChildren children} if unset, and return value.   */"","public boolean isCreateChild()",367,0.95,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenFeatureImpl.java
"// Handle the creation of the model from the modelFile. //","handleCreation();",1291,0.9787234042553191,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping.ui/src/org/eclipse/emf/mapping/presentation/MappingEditor.java
""/*   * For debugging purposes.  May be removed in the future.   */"","protected void printExportData(ExportData exportData)",1029,0.9387755102040817,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.exporter/src/org/eclipse/emf/exporter/ModelExporter.java
"// Go through class super types to catch any from other packages","for (GenClass genClass : getGenClasses())",2440,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenPackageImpl.java
"// For the control case, we need a dialog to ask for the URI and obtain the resource, then we create the command. //","@Override",119,0.9891304347826086,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/action/ControlAction.java
"// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html","fIANA2JavaMap.put("IBM-1047",    "Cp1047");",1231,0.48520710059171596,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// If we aren't getting the domain from the workbench part... // This happens when this action is used for a global popup action. // We try to get the editing domain from one of the objects in the selection. // //DMS editingDomain == null) ?","new AdapterFactoryEditingDomain(adapterFactory, commandStack)",818,0.13333333333333333,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore.ui/src/org/eclipse/emf/codegen/ecore/genmodel/presentation/GenModelEditor.java
"// scan feature lists for those with multiple elements and return them","List<GenFeature> result = new UniqueEList<GenFeature>(childrenFeatures.size());",1948,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenClassImpl.java
"// Nothing more to do and we don't want to do the default stuff below. //","return;",293,0.9824561403508771,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/action/CommandAction.java
"//GenTypedElementImpl","None",None,None,None
"//data type","if (genFeature.isUnique())",2921,0.9523809523809523,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenClassImpl.java
"// else keep shorter absolute path","}",2185,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// If we aren't doing an operation... //","if (eTypedElement == null)",1519,0.96875,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// EObject is handled by default case","if (!genClass.isEObject() && add(genClass))",2430,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenPackageImpl.java
"// Clean up the command if there is one.  If we need it again in drop, // we'll recreate it from dragAndDropCommandInformation. //","if (command != null)",156,0.6708074534161491,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/dnd/EditingDomainViewerDropAdapter.java
"// Changes to parameter types should also update the operation's label. //","case EcorePackage.EPARAMETER__ETYPE:",123,0.9838709677419355,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.edit/src/org/eclipse/emf/ecore/provider/EParameterItemProvider.java
"// Convert to an EReference. //","if ("reference".equals(stereoTypeValue))",533,0.96,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseEcoreBuilder.java
"// escaped unicode form","String num = Integer.toHexString(c);",351,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/Literals.java
"// If we've found thing with type parameters, search them for a match.","//",2511,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Filter out types that aren't permitted. //","Collection<Object> result = new ArrayList<Object>(super.getChoiceOfValues(object));",241,0.972972972972973,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.edit/src/org/eclipse/emf/ecore/provider/EGenericTypeItemProvider.java
"// We need the wrapper, not the item provider, to handle a DragAndDropCommand; the move, add, remove, etc. commands // that implement it will have their values unwrapped as usual. //","if (commandClass == DragAndDropCommand.class)",2671,0.7791164658634538,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"// Restore the persistent command stack, if need be. //","mappingDomain.getCommandStack().execute(RestoreInitialStateCommand.create(mappingDomain));",1295,0.9777777777777777,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping.ui/src/org/eclipse/emf/mapping/presentation/MappingEditor.java
"// Create a generic super type with an EClass as the classifier for each super interface in the @model representation //","List<EGenericType> ecoreEGenericSuperTypes = null;",1042,0.98989898989899,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// An operation is declared via the kind property or, for backwards compatibility, by specifying parameters // (though attribute or reference kind takes precedence). //","boolean declaredEOperation =",1414,0.7796610169491526,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// No index specified when removing all elements. //","if (index == Notification.NO_INDEX) index = 0;",2602,0.9767441860465116,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"// Check if the name is qualified //","String baseName = typeName;",2529,0.9642857142857143,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Avoid allowing choices that will lead to duplicates. //","for (EGenericType eGenericSuperType : ((EClass)container).getEGenericSuperTypes())",289,0.9791666666666666,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.edit/src/org/eclipse/emf/ecore/provider/EGenericTypeItemProvider.java
"// return getPresentationPackageName() + "." + getEditorPluginClassName();","}",3361,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenPackageImpl.java
"// // EMF.Edit generation //","boolean hasEditSupport();",2248,0.9090909090909091,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/GenModel.java
"// Find the modeled package for the import and look up the name there. //","EPackage otherEPackage = packageNameToEPackageMap.get(packageName);",2563,0.9827586206896551,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"//  Avoid allowing a choice that will lead to duplicates. //","if (eGenericType.eContainmentFeature() == EcorePackage.Literals.EOPERATION__EGENERIC_EXCEPTIONS)",302,0.9791666666666666,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.edit/src/org/eclipse/emf/ecore/provider/EGenericTypeItemProvider.java
"// Just to be helpful, we'll recognize a type of org.eclipse.emf.ecore.util.FeatureMap and convert it to EFeatureMapEntry. // This way a dataType need not be specified. But, we won't do this if recordDemandCreateEDataType is false, so we don't // change the instanceClass of a new EDataType that's implicitly being defined for FeatureMap. //","if (eGenericType == null &&",2659,0.5390428211586902,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Ensure that there are enough type arguments to match the number of type parameters. //","int typeParameterCount = value == null ? 0 : ((EClassifier)value).getETypeParameters().size();",344,0.9863013698630136,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.edit/src/org/eclipse/emf/ecore/provider/EGenericTypeItemProvider.java
"// Wrappers from the old command parameter must be considered in order for cut and paste to work. //","Collection<? extends IWrapperItemProvider> oldWrappers;",2741,0.9876543209876543,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"// You cannot add any children for a type parameter. //","return null;",422,0.9772727272727273,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.edit/src/org/eclipse/emf/ecore/provider/EGenericTypeItemProvider.java
"// Look for the sibling value or an equivalent in the new child's feature. If it is found, the child should // immediately follow it. //","for (Object v  : (Collection<?>)eObject.eGet(childFeature))",823,0.8787878787878788,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"// <clinit>()","//",1366,0.96,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Otherwise you can't make it a child. //","return null;",439,0.9696969696969697,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.edit/src/org/eclipse/emf/ecore/provider/EGenericTypeItemProvider.java
"// Let them choose type parameters as well. //","for (EObject eObject = (EObject)object; eObject != null; eObject = eObject.eContainer())",307,0.972972972972973,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.edit/src/org/eclipse/emf/ecore/provider/ETypedElementItemProvider.java
"//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$","None",None,None,None
"//TBD","//",3332,0.12195121951219512,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenPackageImpl.java
"// If it is a list type value... //","if (feature.isMany())",1218,0.9615384615384616,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"//GenPackageImpl","None",None,None,None
"//   protected JETEmitter extendedItemProviderEmitter = null;","/**",3546,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenModelImpl.java
"// Iterate over all the child references to factor each child to the right reference. //","for (EReference eReference : getChildrenReferences(object))",551,0.9861111111111112,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"// Don't care about plugin class; we can generate a model without one.","}",2732,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenModelImpl.java
"//subcommands.appendAndExecute(new RemoveCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), nestedMappings)); //subcommands.appendAndExecute(new AddCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), nestedMappings));","subcommands.appendAndExecute(new RemoveCommand(domain, mapping, MappingPackage.eINSTANCE.getMapping_Nested(), nestedMappings));",152,0.6511627906976745,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/command/RemoveMappingCommand.java
"// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return value;","* <!-- begin-user-doc -->",141,0.11267605633802817,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EEnumLiteralImpl.java
"//GenModelImpl","None",None,None,None
"// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //","IItemLabelProvider itemLabelProvider = (IItemLabelProvider)adapterFactory.adapt(object, IItemLabelProvider.class);",220,0.987012987012987,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/AdapterFactoryItemDelegator.java
"// 6 is the size of (value","processValueToTheEnd(currentLine, lineCounter);",176,0.47619047619047616,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/parser/RoseLexer.java
"// Do not allow an existing MANIFEST.MF to be overwritten, as the tests project is originally generated from scratch. //","None",None,None,None
"// user demands a relative path or the absolute path is longer","newAbsolutePath = false;",2181,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// It's definitely a package if expected constants eNAME, eNS_PREFIX, or eNS_URI appear. //","for (JNode node : type.getChildren())",1171,0.987012987012987,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// bottom-label-case","IConfigurationElement bottomLabelCaseAll[] = d.getChildren("bottom-label-case");",185,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/domain/PluginAdapterFactoryMappingDomain.java
"// This ensures that the CreateCopyCommand will be executed by StrictCompoundCommand.prepare(). //","None",None,None,None
"// Do not allow an existing build.properties to be overwritten, as the tests project is originally generated from scratch. //","None",None,None,None
"// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87","None",None,None,None
"// Handle eOpposite specially. //","@Override",389,0.9642857142857143,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.edit/src/org/eclipse/emf/ecore/provider/EReferenceItemProvider.java
"// If this owned object is equal to one from the collection... //","if (collection.contains(ownedObject) && !contains(identityIndices, index))",303,0.9807692307692307,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/RemoveCommand.java
"// If there is more than one exact match, we must get an index number; //","int index = 0;",250,0.9824561403508771,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/command/PersistentCommandStack.java
"// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87","None",None,None,None
"// Filter out classes that aren't permitted. //","Collection<?> result = super.getChoiceOfValues(object);",163,0.9743589743589743,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.edit/src/org/eclipse/emf/ecore/provider/EClassItemProvider.java
"//GenModelValidator","None",None,None,None
"// Read all the values into an array. //","None",None,None,None
"// This can't execute if there is no owner list  // or the owner list doesn't contain the value being replaced or  // there are not replacements. //","if (ownerList == null || !ownerList.contains(value) || collection == null || collection.isEmpty())",231,0.4840764331210191,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/ReplaceCommand.java
""/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getOutputEPackage()   */"","* @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)",84,0.26548672566371684,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/DefaultDOMHandlerImpl.java
"//GenModelSwitch","None",None,None,None
"// Now we'll do recursive MatchMapping. // (We need to iterate over a copy, since we modify the underlying list in the loop.)","for (Command command : new ArrayList<Command>(commandList))",101,0.49635036496350365,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/command/NameMatchMappingCommand.java
"// This guard is needed to ensure that clear doesn't make the resource become loaded. //","if (!getContents().isEmpty())",1528,0.9861111111111112,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/resource/impl/ResourceImpl.java
"// This is done to ensure that this new copy is treated as an output by the domain. // The CreateMappingCommand will rely on this setting. //","MappedObjectState mappedObjectState = mappingRoot.getMappedObjectState(copy);",95,0.7292817679558011,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/command/CreateCopyOverrideCommand.java
"// If we haven't yet encrypted or decrypted, generate a key. This key will  // only be used for encryption. Decryption keys are always derived from // the header of the input stream itself.","if (key == null)",154,0.5648148148148148,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/resource/impl/AESCipherImpl.java
"// colorMap.put(CLR_GRAD_START, clr1);","colorMap.put(CLR_GRAD_START, clr4);",750,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common.ui/src/org/eclipse/emf/common/ui/ViewerPane.java
"// write the header to the output stream. this has the format  // (delimeters are not written): // PBE IV|ENCRYPTION IV|ENCRYPTED KEY LENGTH|ENCRYPTED KEY","outputStream.write(pbeIV);",172,0.5555555555555556,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/resource/impl/AESCipherImpl.java
"// We'd like the collection of things added to be selected after this command completes. //","affectedObjects = collection;",469,0.9866666666666667,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/RemoveCommand.java
"// Iterate over the children to find the owner. //","Collection<?> children = getChildren(parent);",388,0.975,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/DragAndDropCommand.java
"// Handle the same document proxies, which may have problems resulting from the // other end of a bidirectional reference being handled as an IDREF rather than as a proxy. // When we are done with these, we know that funny proxies are now resolved as if they were handled as IDREFs. //","for (Iterator<InternalEObject> i = sameDocumentProxies.iterator(); i.hasNext(); )",1032,0.44666666666666666,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// Merges this URI's relative path with the base non-relative path.  If // base has no path, treat it as the root absolute path, unless this has // no path either.","private String[] mergePath(URI base, boolean preserveRootParents)",1995,0.6178010471204188,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Make up a unique new name here. // //$NON-NLS-1$","String defaultModelBaseFilename = eClass.getName();",326,0.782608695652174,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/DynamicModelWizard.java
"//removeCommand = RemoveCommand.create(domain, mappingRoot, mappingRoot.ePackageMapping().getMapping_Nested(), mappingRoot.getNested());","mappingRoot.isTopToBottom() ?",63,0.16783216783216784,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping.ui/src/org/eclipse/emf/mapping/action/AddRootBottomAction.java
"// We don't want to move insert an object before or after itself... //","if (collection.contains(owner))",473,0.9821428571428571,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/DragAndDropCommand.java
"// The CipherOutputStream shoudln't close the underlying stream //","outputStream = new FilterOutputStream(outputStream)",184,0.9824561403508771,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/resource/impl/AESCipherImpl.java
"// return getProviderPackageName() + "." + getEditPluginClassName();","return getGenModel().getQualifiedEditPluginClassName();",3343,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenPackageImpl.java
""/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */"","* @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)",84,0.18292682926829268,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/DefaultDOMHandlerImpl.java
"// an absolute URI needs no resolving","if (!isRelative()) return this;",1944,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// note: these assertions imply that neither this nor the base URI has a // relative path; thus, both have either an absolute path or no path","for (int i = 0; i < baseSegmentCount - 1; i++)",2016,0.21705426356589147,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
""/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */"","* @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)",84,0.14150943396226415,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/DefaultDOMHandlerImpl.java
"// Simply add the collection to the list. //","if (index == CommandParameter.NO_INDEX)",399,0.9714285714285714,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/AddCommand.java
"// note: device != null -> hierarchical","return device != null;",1373,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// <p>A valid fragment may be null or contain any allowed URI characters.","//return value == null || validate(value, URIC_HI, URIC_LO, true, true);",1287,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
""/*   * Returns the dynamic template path, an ordered list of URIs corresponding to locations under which to find   * templates.   */"","private String[] getTemplatePath()",436,0.9137055837563451,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/generator/AbstractGeneratorAdapter.java
""/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */"","* @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)",84,0.2564102564102564,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/DefaultDOMHandlerImpl.java
"// Ignore the exception and return false.","}",1167,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// note: query != null -> hierarchical","return query != null;",1433,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"//return value == null || validate(value, URIC_HI, URIC_LO, true, true);","}",1274,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
""/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */"","public class FeatureMapEntryItemProvider",43,0.10138248847926268,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.change.edit/src/org/eclipse/emf/ecore/change/provider/FeatureMapEntryItemProvider.java
"//datatype","if (genFeature.isUnique())",2921,0.9523809523809523,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenClassImpl.java
""/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */"","public class FeatureMapEntryItemProvider",43,0.1004566210045662,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.change.edit/src/org/eclipse/emf/ecore/change/provider/FeatureMapEntryItemProvider.java
""/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */"","public class FeatureMapEntryItemProvider",43,0.10232558139534884,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.change.edit/src/org/eclipse/emf/ecore/change/provider/FeatureMapEntryItemProvider.java
""/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EClassifier)   */"","* @see org.eclipse.emf.mapping.action.AddRootTopAction#getTopsToAdd()",46,0.2222222222222222,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping.ecore2ecore.editor/src/org/eclipse/emf/mapping/ecore2ecore/action/AddInputRootAction.java
"// We do not want to diagnose any error that have already been diagnosed by a super type. //","for (EClass eSuperType : eClass.getEAllSuperTypes())",1051,0.9863013698630136,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// Creates the model from the editor input //","createModel();",1152,0.9722222222222222,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreEditor.java
""/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */"","public class FeatureMapEntryItemProvider",43,0.09777777777777778,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.change.edit/src/org/eclipse/emf/ecore/change/provider/FeatureMapEntryItemProvider.java
"// Tests the non-null string value to see if it contains only ASCII // characters in the set represented by the specified 128-bit bitmask, // as well as, optionally, non-ASCII characters 0xA0 and above, and, // also optionally, escape sequences of % followed by two hex digits. // This method is used for the new, strict URI validation that is not // not currently in place.","private static boolean validate(String value, long highBitmask, long lowBitmask,",1303,0.3021978021978022,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// If the workbench part changes... //","if (this.workbenchPart != workbenchPart)",167,0.967741935483871,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/action/CommandAction.java
"/* backward compatibility with old generated overrides */","eSettingDelegate(eFeature).dynamicGet(this, eSettings(), dynamicFeatureID, resolve, coreType);",1026,0.8130081300813008,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/BasicEObjectImpl.java
"// For a many-to-1, we use SetCommand.create() to create the command to remove the opposite reference; // a RemoveCommand on its opposite will actually result. //","compound.append(SetCommand.create(domain, value, eOtherEnd, null));",333,0.7767857142857143,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/SetCommand.java
"// add all converted fields after the last final field  // that is used in initializers of the converted fields","for (ASTJNode<?> nodeToInsert : convertedEnumConstants)",424,0.6617647058823529,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTNodeConverter.java
""/*   * Char buffer for HTML data   */"","protected CharArrayWriter writer;",165,0.88,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETParser.java
"// if endPath is shorter than startPath, the last segment of endPath may // not be compared: because startPath has been collapsed and had its // last segment removed, all preceding segments can be considered non- // empty and followed by a separator, while the last segment of endPath // will either be non-empty and not followed by a separator, or just empty","for (int count = startCount < endCount ? startCount : endCount - 1;",2254,0.33613445378151263,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Ignore because we'll rethrow the original exception eventually.","}",836,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETEmitter.java
"// path form demands an absolute path: keep it and query","}",2173,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Continue processing dynamically as normal.","}",619,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETEmitter.java
"// Iterate over all the operations but skip all the operations in the first super. //","List<EOperation> eOperations = eAllOperations;",988,0.9855072463768116,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// For feature maps, test that the entry feature is a valid type, that the entry value is an instance of it, // that there is not already something in a document root, and that there is not already something in a // single-valued entry feature. //","if (validator != null)",340,0.6041666666666666,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/AddCommand.java
"// pure obfuscated genius!","while (++current.cursor < len && (ch = current.stream[current.cursor]) != startTagInitialChar)",291,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETReader.java
"// Match close.","reader.skipSpaces();",429,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETParser.java
"// Take care of the quoting here.","if (ch == '\\')",478,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETReader.java
"// skip empty segments and self references; push everything else","stack[sp++] = segment;",2067,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// For a 1-to-many association, doing the set as a remove and add from the other end will make it undoable. // In particular, if there is an existing non-null value, we first need to remove it from the other end, so // that it will be reinserted at the correct index on undo.  //","Object oldValue = ((EObject)owner).eGet(eReference);",229,0.5594855305466238,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/SetCommand.java
"// Close NCSA like attributes "->"","try",623,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETReader.java
""/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getFeatureKind(org.eclipse.emf.ecore.EStructuralFeature)   */"","* @see org.eclipse.emf.mapping.action.AddRootTopAction#getTopsToAdd()",46,0.2,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping.ecore2ecore.editor/src/org/eclipse/emf/mapping/ecore2ecore/action/AddInputRootAction.java
"// super is called on converted node","super.visit(target);",122,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/JMerger.java
"// Convert the selection to a collection of the selected objects. //","List<?> list = ((IStructuredSelection)selection).toList();",229,0.9821428571428571,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/action/CommandAction.java
"// assume length will grow by 10% (average line length is 20 characters)","StringBuilder sb = new StringBuilder(text.length() + text.length() / 10);",922,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJCompilationUnit.java
"// Ignore the version","}",332,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETCompiler.java
"// Reached EOF:","//",588,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETReader.java
"// Close variable like attributes "%>"","try",640,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETReader.java
"// XMLesque Close tags","//",564,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETReader.java
"// Command line execution methods","/**",1167,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/JMerger.java
"// Compute a map of resource location URIs to logical namespace URIs // so that cross references will be resolved via package registry when deserialized.  //","final Map<URI, URI> uriMap = new HashMap<URI, URI>();",293,0.6063829787234043,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/generator/GenPackageGeneratorAdapter.java
"// For a many-to-1 or 1-to-1 association, if the opposite reference on the new value is already set to // something, we need a compound command that first explicitly removes that reference, so that it will be // restored in the undo. //","if (value instanceof EObject && ((EObject)value).eGet(eOtherEnd) != null)",316,0.60431654676259,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/SetCommand.java
"/////////////////////////////////  PUSH  /////////////////////////////////////","class Information",1203,0.4742268041237113,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/templates/model/PackageClass.java
"// check whether the character is in the range 0x30 ~ 0x39","public static final boolean isDigit(char ch) {",4490,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"/////////////////////////////////  SWEEP  /////////////////////////////////////","class Information",1203,0.46938775510204084,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/templates/model/PackageClass.java
""/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#getChildren()   */"","* @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)",84,0.2777777777777778,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/DefaultDOMHandlerImpl.java
"/////////////////////////////////  PULL  /////////////////////////////////////","class Information",1203,0.4742268041237113,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/templates/model/PackageClass.java
"// The referencedEPackages list is used to track the packages for // which is necessary to create the stub GenModel.  So if the ePackage // is referenced by an existing GenPackage, it doesn't need to be added to // referencedEPackages.","for (GenPackage genPackage : getModelImporter().getReferencedGenPackages())",525,0.44,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer/src/org/eclipse/emf/importer/ModelImporterApplication.java
""/*    // PULL Name    //    targetPackage.setName(sourcePackage.getName());*/"","if (getGenModel().isCreationCommands() && getGenModel().isCreationIcons())",2426,0.2894736842105263,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenClassImpl.java
"// If we're not setting a new resource, attach it to the old container's resource.","if (resource == null)",967,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/BasicEObjectImpl.java
"// apply target parent pattern first","if (getSourcePatternDictionary().isMarkedUp(sourceMarkup, node)",1097,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/JMerger.java
"// Include each required plugin of the starting project and the exported ones of all the required projects. //","ManifestElement element = elements[j];",578,0.989010989010989,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// do not crash when control model is not set","return getControlModel() == null ?",450,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/FacadeHelper.java
"/////////////////////////////////  CLONE AND MAP  /////////////////////////////////////","class Information",1203,0.4423076923076923,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/templates/model/PackageClass.java
""/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EStructuralFeature)   */"","* @see org.eclipse.emf.mapping.action.AddRootTopAction#getTopsToAdd()",46,0.21052631578947367,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping.ecore2ecore.editor/src/org/eclipse/emf/mapping/ecore2ecore/action/AddInputRootAction.java
"/////////////////////////////////  SORT  /////////////////////////////////////","class Information",1203,0.4742268041237113,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/templates/model/PackageClass.java
"// We will create an EAttribute, EReference, or an EOperation. //","ETypedElement eTypedElement = null;",1407,0.9814814814814815,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Read value until delimiter is found:","do",474,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETReader.java
"// Check whether there are parameters; the special attribute and reference rules only apply for the case of no arguments. //","if (parameterNames.length == 0 &&",1421,0.9902912621359223,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// System.err.println("Warning: Cannot clone '" + sourceNode.getContents() + "'");","(">   " + eStructuralFeature.getEContainingClass().getName() + "." + eStructuralFeature.getName() +",4086,0.391304347826087,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// redo the markup since nodes changed now","targetPatternDictionary.start(target);",110,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/JMerger.java
"// use new node from now on","target = newTarget;",107,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/JMerger.java
"// Look through the imports of the containing compilation unit. //","JCompilationUnit compilationUnit = getJCompilationUnit(eModelElement);",2536,0.9818181818181818,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"//purpose: using charset from 'targetFile' to encode in-memory  //         'newContents' object into bytes //modifer: Wu Zhi Qiang //date:    Aug 25, 2004 //action:  first get the charset from 'targetFile', then use it  //         to encode the 'newContents' object into bytes","String encoding = getEncoding(targetFile);",725,0.4059040590405904,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenBaseImpl.java
"// Ignore the exception.","}",112,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/JControlModel.java
"/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////","class Information",1203,0.4144144144144144,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/templates/model/PackageClass.java
"// For any entry that doesn't correspond to a plugin in the running JVM, compute a URL for the classes. //","urls.add(new URL("platform:/resource" + jetEmitterClasspathEntry.getPath() + "/"));",808,0.9882352941176471,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETEmitter.java
"// We don't want keyType and valueType on a map type specification in a package interface. // But, we also use qualified model information when defining a feature with suppressed get accessor // on the interface, and we do want to include these properties in that case. //","String mapModelInfo = getMapModelInfo(qualified, (!qualified || isSuppressedGetVisibility()) && !isContainer());",1593,0.5,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenFeatureImpl.java
"// Ignore CHAR tokens. // ** // **","None",None,None,None
"// Back up over the whitespace.","}",649,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/JMerger.java
"// target method is NOT addSuperInterface","else",830,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/JMerger.java
"// by default nodes are marked up","boolean markedUp = true;",1087,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/JMerger.java
"// if the parent is not in target, there is no point on checking the child","// by default nodes are marked up",1085,0.8251748251748252,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/JMerger.java
"// ;DEVANAGARI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;BENGALI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GURMUKHI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GUJARATI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;ORIYA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TAMIL SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TELUGU SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;KANNADA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;MALAYALAM SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;THAI CHARACTER PHINTHU;Mn;9;ON;;;;;N;THAI VOWEL SIGN PHINTHU;;;; //;TIBETAN MARK HALANTA;Mn;9;ON;;;;;N;TIBETAN VIRAMA;;;;","None",None,None,None
"// If the flag will straddle two fields, bump it to the next one. //","None",None,None,None
"// Fill 2 of value (byte) -87","Arrays.fill(CHARS, 722, 768, (byte) 33 ); // Fill 46 of value (byte) 33",3603,0.5542168674698795,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Update the containing map, if necessary. //","None",None,None,None
"// We expect there to be at least one archive path. //","ZipEntry outputZipEntry;",382,0.9761904761904762,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/archive/ArchiveURLConnection.java
"// Characters to use in escaping.","private static final char ESCAPE = '%';",231,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// If there is a provider base class from outside this class that has already been generated, get the create // child references from it. We'll check for any type-compatible classes introduced in this package. //","if (base == null || base.getGenPackage() == getGenPackage() ||",1904,0.6691729323308271,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenClassImpl.java
"// Private constructor for use of static factory methods.","private URI(boolean hierarchical, String scheme, String authority,",976,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
""/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */"","* @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)",84,0.1986754966887417,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/DefaultDOMHandlerImpl.java
"// for all nodes but some use default extended range","if (!NODE_TYPES_WITH_SPECIAL_RANGE.contains(node.getNodeType()))",675,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/CommentAwareSourceRangeComputer.java
"//iri = iri || containsNonASCII(authority);","}",999,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// if there are multiple variables in the same field declaration, create declaration with only 1 variable","if (originalFieldDeclaration.fragments().size() > 1)",543,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTFacadeHelper.java
"// Private constructor for use of platform factory methods.","private static URI createPlatformURI(String unrootedBase, String rootedBase, String pathName, boolean encode)",960,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"//iri = iri || containsNonASCII(query);","}",1009,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Debugging method: converts the given long to a string of binary digits.","/*",371,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// replace or append","if (matcher.find())",281,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJCompilationUnit.java
"// Returns the upper half bitmask for the given ACSII character.","private static long highBitmask(char c)",306,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// skip whitespace, up to the end of the line","while (i <= endOfLine && Character.isWhitespace(charContent[i]))",1237,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJCompilationUnit.java
"// && uri.charAt(i) == FRAGMENT_SEPARATOR (implied)","{",772,0.8363636363636363,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// enable tracking for nodes that have string content","AbstractRewriter contentsReplacer = null;",301,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJCompilationUnit.java
"// apply header","if (headerString != null)",375,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJCompilationUnit.java
"// enable tracking for commented out nodes","AbstractRewriter commenter = null;",308,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJCompilationUnit.java
"// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87","None",None,None,None
"// Returns the lower half bitmask for the given ASCII character.","private static long lowBitmask(char c)",300,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// return the line number of the start of the node","return doc.getLineOfOffset(nodePosition.getStartPosition());",798,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJCompilationUnit.java
"//MappingPackageImpl","None",None,None,None
"// revert all current edits for this node","for (TextEdit edit : textEditsToRevert)",732,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJCompilationUnit.java
"// this line has been commented out, return next line number","return doc.getLineOfOffset(lineBreakEdit.getOffset()) + 1;",793,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJCompilationUnit.java
"// Find the appropriate parent mapping, which at the very least, should be the mapping root itself. //","Mapping parentMapping = domain.getMappingRoot().getParentMapping(mapping.getMappedObjects());",125,0.9880952380952381,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/command/AddMappingCommand.java
"// if there is anything after the node on the same line, insert line break","addLineBreakAfterNode(existingEdits, nodePosition, node);",724,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJCompilationUnit.java
"// Separators for parsing a URI string.","private static final char SCHEME_SEPARATOR = ':';",218,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// comment out all lines of the node itself, from firstLine to last line","int lastLine = doc.getLineOfOffset(nodePosition.getStartPosition() + nodePosition.getLength());",713,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJCompilationUnit.java
"// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //","if (originatingInput == null)",84,0.6694560669456067,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/command/AddOverrideCommand.java
"// next position is checked as well","currentPos = ++i;",937,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJCompilationUnit.java
"// We can't blindly cache the genModel, since we need to support moving the GenPackage to another container, // but the cast is expensive, so we'd like to do it no more than absolutely necessary. //","if (eContainerFeatureID == GenModelPackage.GEN_PACKAGE__GEN_MODEL)",1143,0.7165354330708661,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenPackageImpl.java
"// handle the case when there is a replace edit that covers these lines","TextEdit causeEdit = e.getChild();",831,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJCompilationUnit.java
"// If it's the selection viewer, then we want it to select the same selection as this selection. //","if (currentViewerPane.getViewer() == selectionViewer)",1606,0.9875,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping.ecore2xml.ui/src/org/eclipse/emf/mapping/ecore2xml/presentation/Ecore2XMLEditor.java
"// if there is any content after the node on the same line, insert line break (to prevent commenting out extra content)","else if (!isWhitespace(endPos, lineInfo.getOffset() + lineInfo.getLength()))",1070,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJCompilationUnit.java
"// skip all lines that replace edit covers","i = doc.getLineOfOffset(newReplaceEdit.getOffset() + newReplaceEdit.getLength());",836,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJCompilationUnit.java
"// should not happen, re-throw exception","throw e;",841,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJCompilationUnit.java
"// make sure that dummy edit is not in the tree","try",903,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJCompilationUnit.java
"// char at currentPos is copied as well","sb.append(textContent, lastPos, currentPos - lastPos + 1);",948,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJCompilationUnit.java
"// It belongs to this package if the delegate feature is from this package, // or the class is from this package and either there is no delegate feature or the delegate feature is from some used package. //","if (childCreationData.delegatedFeature != null && childCreationData.delegatedFeature.getGenPackage() == this ||",4301,0.5391304347826087,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenPackageImpl.java
"// lastPos, currentPos points at the next chars that will be copied later","lastPos = ++currentPos;",951,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJCompilationUnit.java
"// if there is anything before the node on the same line, create line break and comment out the first line of the node","if (!isWhitespace(lineInfo.getOffset(), startPos))",1039,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJCompilationUnit.java
"// copy last piece if any","if (currentPos < textContent.length)",956,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJCompilationUnit.java
"// Set URIs of EPackage-containing resources: output resource to desired target URI, and others to package // namespace URIs (so cross-references will be resolved via package registry when deserialized).  //","for (Iterator i = set.getResources().iterator(); i.hasNext(); )",3174,0.6791044776119403,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenPackageImpl.java
"// if comma is on a line by itself, comment it out but do not insert the line break","int line = getDocument().getLineOfOffset(commaPosition);",1204,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJCompilationUnit.java
""/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */"","* @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)",84,0.1282051282051282,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/DefaultDOMHandlerImpl.java
"// if previous node is not commented out, but all the following nodes are, comment out a comma (constant separator)","ASTJNode<?> astjNode = (ASTJNode<?>)getFacadeHelper().convertToNode(enumConstant);",1178,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJCompilationUnit.java
"// We need to filer out duplicates in the unlikely event that we have two // features with the same class-qualified name. We'll only generate one property // string in that case and let the user add the second one manually, if necessary. //","Set<String> noDupSet = new HashSet<String>();",8220,0.4609375,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenModelImpl.java
"// if previous node is not commented out, but all following are","if (!commentedOutPositions.containsKey(previousNode) && commentedOutPositions.keySet().containsAll(followingConstants))",1189,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJCompilationUnit.java
"// Since we will do the processing recursively, we need to ensure we don't stack overflow if there is a circular super type. //","if (INSTANCE.validateEClass_NoCircularSuperTypes(eClass, null, null))",3265,0.9902912621359223,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19","None",None,None,None
"// delete variable fragment from old declaration","removeNodeFromListProperty(originalFieldDeclaration, variableDeclarationFragment, FieldDeclaration.FRAGMENTS_PROPERTY);",509,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJField.java
"// cat(unit) file referenced by mdl file","String quid = modelTree.getRoseId();",167,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseUtil.java
"// Ignore features from the first super type. //","if (i >= start)",785,0.9743589743589743,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"//volatile","if (genFeature.isResolveProxies() && !genFeature.isListType()) {",2337,0.7692307692307693,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/templates/model/Class.java
"//listRewrite.remove((ASTNode)modifier, null);","// call workaround",97,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJMember.java
"// Uses a cache to speed up creation of a URI from a string.  The cache // is consulted to see if the URI, less any fragment, has already been // created.  If needed, the fragment is re-appended to the cached URI, // which is considerably more efficient than creating the whole URI from // scratch.  If the URI wasn't found in the cache, it is created using // parseIntoURI() and then cached.  This method should always be used // by string-parsing factory methods, instead of parseIntoURI() directly.","* This method was included in the public API by mistake.",643,0.23655913978494625,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19","None",None,None,None
"// super.collectNewChildDescriptors(newChildDescriptors, object);","newChildDescriptors.add",235,0.9838709677419355,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping.ecore2xml.ui/src/org/eclipse/emf/mapping/ecore2xml/provider/XMLMapItemProvider.java
"// this could be method body, for example","NODE_TYPES_WITH_SPECIAL_RANGE.add(ASTNode.BLOCK);",79,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/CommentAwareSourceRangeComputer.java
"// A primitive type can only be used as the generic type of a typed element. //","String instanceClassName = eClassifier.getInstanceClassName();",2913,0.9838709677419355,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// range to look for comments","int rangeStartPos = compilationUnit.getExtendedStartPosition(node) + compilationUnit.getExtendedLength(node);",179,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/CommentAwareSourceRangeComputer.java
"// Discard the old editing domain. //","editingDomain = null;",171,0.9666666666666667,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/action/CommandAction.java
"// Skip an archive accessor to be handled by delegation to the scheme in nested URL. //","archiveSeparator = urlString.indexOf("!/", archiveSeparator + 2);",179,0.9857142857142858,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/archive/ArchiveURLConnection.java
"// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','","int index = 0;",2247,0.5333333333333333,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// return eProperties;","@Override",193,0.9473684210526315,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EObjectImpl.java
"// set javadoc","if (originalFieldDeclaration.getJavadoc() != null)",462,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJField.java
"// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?","fJava2IANAMap.put("ISO8859_1",    "ISO-8859-1");",1290,0.5849056603773585,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Returns the int value of the given hex digit.","private static int valueOf(char hexDigit)",3089,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// the for loop's condition finds the separator","}",515,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/util/CodeGenUtil.java
"// Parse to count the archive paths that must will be delegated to the nested URL based on the number of schemes at the start. //","for (int i = start, end = specification.indexOf('/', start) - 1; (i = specification.indexOf(':', i)) < end; ++i)",108,0.9902912621359223,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/archive/Handler.java
"// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87","None",None,None,None
"// Assume that we aren't running.","}",74,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/EMFPlugin.java
"// assume that the node is being moved (to allow insertion after)","node.setRemovedASTNode(astNodeToBeRemoved);",638,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJNode.java
"//MappingPackage ePackage = ((MappingRoot)object).ePackageMapping();","MappingPackage ePackage = MappingPackage.eINSTANCE;",79,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/provider/MappingRootItemProvider.java
"// And even if it is contained, it must not be a forward reference. // eTypeParameterIndex == index is allowed when the type parameter is  // the type argument of the bound, though //","List<?> typeParameters = (List<?>)scope.eGet(eTypeParameter.eContainmentFeature());",2733,0.5320197044334976,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// remove all existing modifiers","@SuppressWarnings("unchecked")",87,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJMember.java
"// append extra dimensions if any","for (int i = 0; i < parameter.getExtraDimensions(); i++)",191,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJMethod.java
"// create new modifiers and add to rewrite","@SuppressWarnings("unchecked")",104,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJMember.java
"// We can also optimize single valued reverse.  //","else if (hasNavigableInverse() && !hasManyInverse())",478,0.975,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/DelegatingEcoreEList.java
""/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */"","public class FeatureMapEntryItemProvider",43,0.19213973799126638,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.change.edit/src/org/eclipse/emf/ecore/change/provider/FeatureMapEntryItemProvider.java
"// Create a proxy in the correct way and pop it. //","InternalEObject proxy =",2728,0.9743589743589743,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// null -> relative URI reference","private final String authority;",143,0.691358024691358,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// If eCore, set the ENamedElement name //","if (object instanceof ENamedElement)",357,0.9705882352941176,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/domain/AdapterFactoryMappingDomain.java
"//If it was not a warning or an diagnostic then return the diagnostic image","return getErrorImage();",350,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common.ui/src/org/eclipse/emf/common/ui/dialogs/DiagnosticDialog.java
"// Maintain a list of classifiers for looking up conflicts. //","ArrayList<EClassifier> superTypes = new ArrayList<EClassifier>();",1216,0.9803921568627451,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"//Only one example per wizard","break;",152,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common.ui/src/org/eclipse/emf/common/ui/wizard/ExampleInstallerWizard.java
"//Ecore2XMLFactory","None",None,None,None
"// XMLMap","None",None,None,None
"// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)","if (parameter.isVarargs())",197,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJMethod.java
"//XMLInfoImpl","None",None,None,None
"// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33","None",None,None,None
"// AnyType","None",None,None,None
"// No image is a good default. //","Object result = null;",253,0.96,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/AdapterFactoryItemDelegator.java
"// Applicable only to a hierarchical URI.","private final String device;",151,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Apply a redirection pattern, if specified. //","String redirection = getGenerator().getOptions().redirectionPattern;",658,0.975,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/generator/AbstractGeneratorAdapter.java
"// create new node and replace it all by original contents","{",503,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTFacadeHelper.java
"// make all enum constants to be on separate lines","javaCoreOptions.put(DefaultCodeFormatterConstants.FORMATTER_ALIGNMENT_FOR_ENUM_CONSTANTS, DefaultCodeFormatterConstants.createAlignmentValue(true, DefaultCodeFormatterConstants.WRAP_ONE_PER_LINE, DefaultCodeFormatterConstants.INDENT_DEFAULT));",437,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTFacadeHelper.java
"// Avoid unnecessary out.write("") statements...","{",462,0.822429906542056,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETParser.java
"// set comment and initializer as strings","newField.setComment(originalField.getComment());",566,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTFacadeHelper.java
""/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */"","* @see org.eclipse.emf.mapping.action.AddRootTopAction#getTopsToAdd()",46,0.1761006289308176,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping.ecore2ecore.editor/src/org/eclipse/emf/mapping/ecore2ecore/action/AddInputRootAction.java
"// set annotation contents","Iterator<JNode> originalChildrenIterator = originalField.getChildren().iterator();",570,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTFacadeHelper.java
"// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )","else if (authority.length() < 1 ||",2740,0.7592592592592593,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
""/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLLoad#load(org.eclipse.emf.ecore.xmi.XMLResource, org.w3c.dom.Node, java.util.Map)   */"","* @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)",84,0.20408163265306123,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/DefaultDOMHandlerImpl.java
"// update the wrapped object map","if (parent.remove(astjNode))",732,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTFacadeHelper.java
""/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#getContext(org.eclipse.emf.codegen.merge.java.facade.JNode)   */"","* @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)",84,0.19607843137254902,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/DefaultDOMHandlerImpl.java
"// skip nodes in hierarchy that can not be converted to JNode (i.e. VariableDeclarationFragment)","do",601,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTFacadeHelper.java
"// If there is no root object, we're dealing with an EAttribute feature instead of an EReference feature. // So create an instance of simple any type and prepare it to handle the text content. //","SimpleAnyType simpleAnyType = (SimpleAnyType)EcoreUtil.create(anySimpleType);",1398,0.7096774193548387,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// get rewriter","ASTRewrite rewriter = null;",623,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTFacadeHelper.java
"// path - everything up to query string or fragment","if (start < end) {",2324,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// insert new declaration before this one","listRewrite = rewriter.getListRewrite(originalFieldDeclaration.getParent(), (ChildListPropertyDescriptor)originalFieldDeclaration.getLocationInParent());",502,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJField.java
"// if there is an element with end position <= rangeEndPos","if (commentIndex > 0)",255,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/CommentAwareSourceRangeComputer.java
""/*   * Computes the default path for the given GenModel. This was previously the implementation of getTemplatePath().   */"","private String[] getDefaultTemplatePath(GenModel genModel)",230,0.97,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/generator/GenModelGeneratorAdapterFactory.java
"// extend range backward","int extendedStartPosition = computeStartOfPrecedingComments(node);",629,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/CommentAwareSourceRangeComputer.java
"// We can't want to do encoding of platform resource URIs by default yet.    //","private static final boolean ENCODE_PLATFORM_RESOURCE_URIS =",271,0.9836065573770492,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// create map of field names to fields","for (JNode child : typeChildren)",163,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTNodeConverter.java
"// Create the output stream to the temporary file and the input stream for the delegate URL. //","tempOutputStream = new FileOutputStream(tempFile);",352,0.987012987012987,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/archive/ArchiveURLConnection.java
"//boolean iri = false;","if (hierarchical)",982,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// extend to include the comment at the same line as the position","// if there is nothing between the position and the comment",545,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/CommentAwareSourceRangeComputer.java
"// else - there is a comment that ends exactly at rangeEndPos","else",266,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/CommentAwareSourceRangeComputer.java
"// handle field declarations separately","if (node instanceof ASTJField)",497,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTFacadeHelper.java
"// the previous element must have end position <= rangeEndPos","commentIndex--;",258,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/CommentAwareSourceRangeComputer.java
"//last 2 bits should be zero","return null;",342,0.7540983606557377,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// else - there is a comment that starts exactly at rangeStartPos","else",306,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/CommentAwareSourceRangeComputer.java
"// && commandParameter instanceof MappingCommandParameter)","{",144,0.7297297297297297,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/provider/MappingRootItemProvider.java
"// extend range forward","int extendedEndPosition = computeEndOfTrailingComments(node);",632,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/CommentAwareSourceRangeComputer.java
"// increments the position to add the white spaces","}",651,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/CommentAwareSourceRangeComputer.java
"// add trailing whitespace","extendedEndPosition = addWhitespaceAfterPosition(extendedEndPosition);",635,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/CommentAwareSourceRangeComputer.java
"// set source","char[] contentAsCharArray = contents.toCharArray();",261,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTFacadeHelper.java
"//Create a label if there are no children to force a smaller layout","Composite dialogComposite = (Composite)dialogArea;",327,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common.ui/src/org/eclipse/emf/common/ui/dialogs/DiagnosticDialog.java
"// Returning null here causes RemoveCommand.create(domain, mappedObjectItemProvider) to be delegated //  to MappedObjectItemProvider.createCommand() and there we return a command to remove mappedObject instead. // // return null;","* This adds a listener.",300,0.10328638497652583,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.change.edit/src/org/eclipse/emf/ecore/change/provider/ChangeItemProviderAdapterFactory.java
"// mark the node as moved if node has been removed","ASTNode removedASTNode = newNode.getRemovedASTNode();",461,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJNode.java
"// enable commenting out","if (isCommentedOut)",446,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJNode.java
"// Initialization is deferred until adapters are attached to all the objects of interest and we're // about to ask them to generate. //","if (initializeNeeded)",595,0.8512820512820513,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/generator/Generator.java
"// Counter for the number of 16-bit sections read in the address.","int [] counter = new int[1];",3162,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// disable commenting out","if (isCommentedOut)",422,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJNode.java
"// Determine the inverse map from plugin IDs to their registered GenModel locations. //","Map<String, List<URI>> allPluginsWithGenModels = new HashMap<String, List<URI>>();",625,0.9863013698630136,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// A cache of URIs, keyed by the strings from which they were created. // The fragment of any URI is removed before caching it here, to minimize // the size of the cache in the usual case where most URIs only differ by // the fragment.","private static final URICache uriCache = new URICache();",157,0.4634146341463415,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// mark the node to be removed","nodeToBeRemoved(astNodeToBeRemoved);",635,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJNode.java
"// We'll rethrow the original exception, not this one.","}",411,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/DelegatingResourceLocator.java
"// if are dealing with original, not cloned node","if (astNodeToBeRemoved.getParent() != null && astNodeToBeRemoved.getLocationInParent() != null)",632,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJNode.java
"// CellEditor.setValue() calls isCorrect() to validate the value that is about to be set. We are doing conversion // between the value and a corresponding string, and we would usually like to validate the string. Because // setValue() is final, we cannot do that conversion there, so we need to record what we're trying to validate and // work around the problem in isCorrect(). //","protected boolean validateAsValue = true;",231,0.4648910411622276,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/provider/PropertyDescriptor.java
"// stringValue not null, nodeValue is null","{",856,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJNode.java
""/*   * If this is an {@link #isIRI IRI}, converts it to a strict ASCII URI,   * using the procedure described in Section 3.1 of the   * <a href=""http://www.w3.org/International/iri-edit/draft-duerst-iri-09.txt"">IRI   * Draft RFC</a>.  Otherwise, this URI, itself, is returned.   *   * This unused code is included for possible future use...   */"","public boolean isIRI()",3111,0.2882882882882883,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// insert new values","for (String value : values)",734,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJNode.java
"// convert only fields of the same type as parent","ASTJNode<?> parent = field.getParent();",244,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTNodeConverter.java
"// move all children to the enum, converting some fields to constants","for (JNode child : typeChildren)",200,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTNodeConverter.java
"// set the type to create","field.setNodeProperty(",504,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTNodeConverter.java
"// include line comments following end of the nodes into the range","int extendedLength = extendedEndPos - extendedStartPos;",706,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/CommentAwareSourceRangeComputer.java
"// move annotations","moveChildren(field, enumConstant);",263,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTNodeConverter.java
"// set arguments and body","setEnumConstantArgumentsAndBody(enumConstant, field);",260,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTNodeConverter.java
"// update the wrapped object","if (parent.remove(astjNode))",732,0.9411764705882353,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTFacadeHelper.java
"// unable to set arguments or body","return;",283,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTNodeConverter.java
"// check if there is just whitespace between position and start of the comment","if (isWhitespace(position, commentStartPos))",554,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/CommentAwareSourceRangeComputer.java
"// create field declaration with 1 variable declaration fragment","VariableDeclarationFragment variableDeclarationFragment = ast.newVariableDeclarationFragment();",461,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTNodeConverter.java
"//DEBUG //System.err.println("isRegisterNonXS: "+name);","(">   " + eStructuralFeature.getEContainingClass().getName() + "." + eStructuralFeature.getName() +",4086,0.5070422535211268,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// Record the part. //","this.workbenchPart = workbenchPart;",187,0.9411764705882353,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/action/CommandAction.java
"// replace type by enum","replaceNode(astjEnum, type);",440,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTNodeConverter.java
"// insert nodeToInsert after targetNode","type.insertSibling(lastFinalFieldUsed, nodeToInsert, false);",434,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTNodeConverter.java
"// convert enum constants and add to list of converted constants","if (originalNode instanceof ASTJEnumConstant)",410,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTNodeConverter.java
"// move the node","astjEnum.remove(originalNode);",418,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTNodeConverter.java
"// set initializer","if (variableDeclarationFragment.getInitializer() != null)",469,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJField.java
"// set arguments","setEnumConstantArgumentsAndBody(enumConstant, field);",260,0.8,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTNodeConverter.java
"// set the whole initializer","field.setNodeProperty(field.getVariableDeclarationFragment(), classInstanceCreation, VariableDeclarationFragment.INITIALIZER_PROPERTY);",556,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTNodeConverter.java
"// set the body","if (body != null && body.length() > 0)",546,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTNodeConverter.java
"// update last field that is used","if (lastFinalFieldUsed != null)",524,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTNodeConverter.java
"// set the arguments to the constructor","field.setListNodeProperty(classInstanceCreation, arguments, ClassInstanceCreation.ARGUMENTS_PROPERTY, ASTNode.SIMPLE_NAME);",542,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTNodeConverter.java
"// perform split if there is more than 1 fragment","if (fragments.size() > 1)",457,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJField.java
"// return the whole declaration contents (not just variableDeclarationFragment)","return getFacadeHelper().toString(originalFieldDeclaration);",199,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJField.java
"// set rewritten node to be the original","setASTNode(originalFieldDeclaration);",427,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJField.java
"// Not overlapped // src1: o-----o // src2:         o-----o // res:  empty // Reuse src2","// Reuse sub",4452,0.2894736842105263,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// check number of fragments","ListRewrite listRewrite = rewriter.getListRewrite(originalFieldDeclaration, FieldDeclaration.FRAGMENTS_PROPERTY);",359,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJField.java
""/* * This class provides encode/decode for RFC 2045 Base64 as * defined by RFC 2045, N. Freed and N. Borenstein. * RFC 2045: Multipurpose Internet Mail Extensions (MIME) * Part One: Format of Internet Message Bodies. Reference * 1996 Available at: http://www.ietf.org/rfc/rfc2045.txt * This class is used by XML Schema binary format validation * * This implementation does not encode/decode streaming * data. You need the data that you will encode/decode * already on a byte array. * * @author Jeffrey Rodriguez * @author Sandy Gao */"","public static final class  Base64 {",99,0.19678714859437751,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// create a copy of declaration","FieldDeclaration newDeclaration = (FieldDeclaration)ASTNode.copySubtree(originalFieldDeclaration.getAST(), originalFieldDeclaration);",368,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJField.java
"// set annotations contents","@SuppressWarnings("unchecked")",483,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJField.java
"// Create a temporary file where the existing contents of the archive can be written  // before the new contents are added. //","final File tempFile = File.createTempFile("Archive", "zip");",341,0.8092485549132948,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/archive/ArchiveURLConnection.java
"// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();","(">   " + eStructuralFeature.getEContainingClass().getName() + "." + eStructuralFeature.getName() +",4086,0.3302752293577982,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// Ensure correct indentation for a top level attribute. // // elementNames.add("mark");","++depth;",678,0.768,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLString.java
"// New Template Container Label","Label templateContainerLabel = new Label(containerGroup, SWT.CHECK);",74,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ui/src/org/eclipse/emf/codegen/presentation/JETPropertyPage.java
"// container specification group","Composite containerGroup = new Composite(parent, SWT.NONE);",67,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ui/src/org/eclipse/emf/codegen/presentation/JETPropertyPage.java
""/*   * @since 2.4   */"","None",None,None,None
"// xmlns="" declaration // Example #1: <a><q-name>q</q-name><b xmlns="abc"/></a> // Example #2: <a xmlns="abc"><b xmlns=""/><c xmlns="abc2"/></a> // Example #3: <a xmlns:a="abc"><b xmlns:a="abc2"/></a>","seenEmptyStringMapping = true;",1395,0.2079207920792079,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHelperImpl.java
""/*     *  Convert element values:     *  & to &amp;     *  < to &lt;     *  "" to &quot;     *  \n to line separator     *  \r should be escaped to &xD;     */"","public String convertText(String input)",3372,0.36666666666666664,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLSaveImpl.java
"// will point at the character after 0 to 3 octal digits","for (j = i + 1; j < len && j - i < 4; j++)",307,0.9473684210526315,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/util/CodeGenUtil.java
""/*   * Create an XML processor that is aware of XML Schema specified.   * @param schemaURIs - a URI {@link org.eclipse.common.util.URI} which point to an XML Schema   */"","public XMLProcessor(URI schemaURI) throws SAXException",116,0.5549738219895288,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/util/XMLProcessor.java
"// Return the original URI.","}",223,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/CommonPlugin.java
"// Just print an error message.","}",488,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/EMFPlugin.java
"// Title.","titleLabel = new CLabel(control, SWT.SHADOW_NONE);",348,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common.ui/src/org/eclipse/emf/common/ui/ViewerPane.java
"// Ignore the exception and return the original URI.","}",182,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/CommonPlugin.java
"// Assume the class is not available.","}",115,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/CommonPlugin.java
"// Just return the default.","}",146,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/CommonPlugin.java
"// do not insert line break if there is only whitespace after comma","if (!isWhitespace(i + 1, endOfLine))",1253,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJCompilationUnit.java
"// This is just a marker interface.","}",255,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/command/AbstractCommand.java
"// This case happens when the IDE is brought up with the editor already open //","if (contentOutlineViewer != null && contentOutlineViewer.getInput() == null)",1659,0.9841269841269841,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping.ui/src/org/eclipse/emf/mapping/presentation/MappingEditor.java
"// For an archive URI, check for the path in the archive. //","if (URI.isArchiveScheme(uri.scheme()))",435,0.9787234042553191,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/EMFPlugin.java
"// Continue processing if the file doesn't exist so that we try create a new empty one.","}",361,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/archive/ArchiveURLConnection.java
"// set lexical handler","if (Boolean.TRUE.equals(options.get(XMLResource.OPTION_USE_LEXICAL_HANDLER)))",172,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLLoadImpl.java
"// If we didn't find the path in the usual place nor in the archive... //","if (manifestURL == null)",458,0.9824561403508771,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/EMFPlugin.java
"// The loop resolves the cross references by visiting them.","}",309,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// If they don't have the same class, they can't be equal. //","EClass eClass = eObject1.eClass();",2148,0.9791666666666666,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// This may be called directly on an EObject for the case of a containment. //","if (object instanceof FeatureMap.Entry)",2227,0.9838709677419355,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/BasicFeatureMap.java
"// Assume that it's not available.","}",92,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/EMFPlugin.java
"// Preload.","getSystemColor(SWT.COLOR_WIDGET_FOREGROUND);",758,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common.ui/src/org/eclipse/emf/common/ui/ViewerPane.java
"// No new methods.","}",317,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EContentsEList.java
"// Listen to title changes. // getViewPart().addPropertyListener(this);","// Action bar.",394,0.5227272727272727,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common.ui/src/org/eclipse/emf/common/ui/ViewerPane.java
"//ListChangeImpl","None",None,None,None
"// Wrap the current input as a zip stream, and record it for loop-based recursion. //","ZipInputStream zipInputStream = inputStream == null ? null : new ZipInputStream(inputStream);",399,0.9855072463768116,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/archive/ArchiveURLConnection.java
"// return getPrefixedName("EditPlugin");","return getGenModel().getEditPluginClassName();",3337,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenPackageImpl.java
"//ChangePackage","None",None,None,None
"// If the generic type is a different wildcard, it doesn't match. //","if (eGenericType.getEClassifier() == null && eGenericType.getETypeParameter() == null)",3559,0.9818181818181818,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// turn the password into an AES key","encryptedKeyBytes = transformWithPassword(key.getEncoded(), pbeIV, password, Cipher.ENCRYPT_MODE);",168,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/resource/impl/AESCipherImpl.java
"//   public String getExtendedItemProviderClassName() //   { //     return getPrefixedName("ItemProviderAdapter"); //   }","public String getItemProviderAdapterFactoryClassName()",3250,0.6442953020134228,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenPackageImpl.java
"// process documentation info and create eEnumLiteral for each line //","List<EEnumLiteral> eLiterals = eEnum.getELiterals();",891,0.9830508474576272,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseEcoreBuilder.java
"// EAnnotation","None",None,None,None
"// Create a new or replaced entry and continue processing the remaining archives. //","outputZipEntry = new ZipEntry(entry);",463,0.9857142857142858,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/archive/ArchiveURLConnection.java
"//getList(entry).clear();","}",981,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EStoreEObjectImpl.java
"// Subclasses MUST override this function","protected EClass eStaticClass()",1510,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/BasicEObjectImpl.java
"// return eVirtualIndexBits[offset];","throw new UnsupportedOperationException();",1641,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/BasicEObjectImpl.java
"// return minimumCapacity;","return minimumCapacity + (minimumCapacity >> 3) + 2;",1809,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/BasicEObjectImpl.java
"// return eVirtualValues;","throw new UnsupportedOperationException();",1763,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/BasicEObjectImpl.java
""/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource#load(org.w3c.dom.Node, java.util.Map)   */"","* @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)",84,0.26548672566371684,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/DefaultDOMHandlerImpl.java
"// Continue and return null.","}",467,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EClassifierImpl.java
"//ChangePackageImpl","None",None,None,None
"// Ignore exceptions.","}",198,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/resource/impl/ArchiveURIHandlerImpl.java
"//ChangeFactoryImpl","None",None,None,None
"// Ensure that cached ePackage is forgotten.","ePackage = null;",728,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EClassifierImpl.java
"//EAnnotationImpl","None",None,None,None
"// ListChange","None",None,None,None
"// If the attribute is set, record it's old value. //","if (owner.eIsSet(feature))",529,0.9761904761904762,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/SetCommand.java
"// Force this to be initialized as well.","getEExceptions();",710,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EOperationImpl.java
"// Ignore the exception since we will throw one when all else fails.","}",303,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/DelegatingResourceLocator.java
"//EcoreValidator","None",None,None,None
"// If we didn't detach it from an old resource already, detach it from the old container's resource. //","else if (oldResource == null)",972,0.9880952380952381,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/BasicEObjectImpl.java
"// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33","None",None,None,None
"//EOperation","None",None,None,None
"// Create a page for the parent tree view. //","ViewerPane viewerPane =",1175,0.9714285714285714,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping.ecore2xml.ui/src/org/eclipse/emf/mapping/ecore2xml/presentation/Ecore2XMLEditor.java
"// Check to make sure that every object in the collection has an ancestor that is contained in this mapping. //","for (Iterator<List<?>> treePaths = allTreePaths.iterator(); treePaths.hasNext(); )",463,0.9888888888888889,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/impl/MappingRootImpl.java
"// generate the key","PBEKeySpec pbeKeySpec = new PBEKeySpec(password.toCharArray());",109,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/resource/impl/AESCipherImpl.java
"// Record them as generic streams to record state during the loop that emulates recursion. //","OutputStream outputStream = tempOutputStream;",364,0.987012987012987,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/archive/ArchiveURLConnection.java
"// If we can open  an input stream, then the path is there, and we have a good URL. //","String manifestURI = uri.appendSegments(relativePath).toString();",441,0.9846153846153847,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/EMFPlugin.java
"// Continue and try to close.","}",1304,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/resource/impl/ResourceImpl.java
""/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */"","public class FeatureMapEntryItemProvider",43,0.17670682730923695,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.change.edit/src/org/eclipse/emf/ecore/change/provider/FeatureMapEntryItemProvider.java
""/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */"","* @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)",84,0.18072289156626506,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/DefaultDOMHandlerImpl.java
"// Decrypt the key bytes","byte[] decryptedKeyBytes = transformWithPassword(encryptedKeyBytes, pbeIV, password, Cipher.DECRYPT_MODE);",210,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/resource/impl/AESCipherImpl.java
"// now create the encryption cipher","Cipher cipher = Cipher.getInstance(ENCRYPTION_ALGORITHM);",180,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/resource/impl/AESCipherImpl.java
""/* (non-Javadoc)   * @see org.eclipse.emf.mapping.MappingRoot#canCreateMapping(java.util.Collection, java.util.Collection, org.eclipse.emf.mapping.Mapping)   */"","* @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)",84,0.18072289156626506,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/DefaultDOMHandlerImpl.java
""// Read the header of the encrypted file.				"","byte[] pbeIV = readBytes(PBE_IV_LENGTH, in);",204,0.918918918918919,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/resource/impl/AESCipherImpl.java
""/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */"","public class FeatureMapEntryItemProvider",43,0.18565400843881857,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.change.edit/src/org/eclipse/emf/ecore/change/provider/FeatureMapEntryItemProvider.java
"// add leading hanging comments to the previous node, // hence, only comments immediately preceding the node will be in the range for removal","ASTNode keyNode = getPreviousNode(node);",506,0.5521472392638037,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/CommentAwareSourceRangeComputer.java
"// just make a copy of the base if spec is empty","if (uriSpecLen == 0) {",1879,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// generate the IV for encryption","encryptionIV = randomBytes(ENCRYPTION_IV_LENGTH);",165,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/resource/impl/AESCipherImpl.java
""/*    * @see org.eclipse.emf.ecore.InternalEObject#eSetProxyURI(org.eclipse.emf.common.util.URI)   */"","@Override",170,0.967032967032967,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EObjectImpl.java
"// this is the key we will use to encrypt the data","key = generateKey(getKeysize());",159,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/resource/impl/AESCipherImpl.java
""/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */"","public class FeatureMapEntryItemProvider",43,0.1896551724137931,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.change.edit/src/org/eclipse/emf/ecore/change/provider/FeatureMapEntryItemProvider.java
"// Create a title bar.","createTitleBar();",176,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common.ui/src/org/eclipse/emf/common/ui/ViewerPane.java
""/* (non-Javadoc)   * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction, org.eclipse.jface.viewers.ISelection)   */"","* @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)",84,0.1910828025477707,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/DefaultDOMHandlerImpl.java
"// now create the decrypt cipher","Cipher cipher = Cipher.getInstance(ENCRYPTION_ALGORITHM);",225,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/resource/impl/AESCipherImpl.java
"// Only do this once.","if (titleLabel == null)",345,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common.ui/src/org/eclipse/emf/common/ui/ViewerPane.java
"// If we haven't yet generated a key, just use this one","if (this.key == null)",216,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/resource/impl/AESCipherImpl.java
"// ECLIPSE-DEPEND-BEGIN","if (workspaceRoot != null)",334,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/resource/impl/URIConverterImpl.java
""/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#init(org.eclipse.ui.IWorkbenchWindow)   */"","* @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)",84,0.2459016393442623,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/DefaultDOMHandlerImpl.java
"// Ignore the bound if the value is too big.","}",721,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EObjectValidator.java
"// ECLIPSE-DEPEND-END","{",340,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/resource/impl/URIConverterImpl.java
""/*    * @see org.eclipse.emf.ecore.EObject#eIsProxy()   */"","* @generated",2948,0.8,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/EcorePackage.java
""/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#createCompilationUnit(java.lang.String, java.lang.String)   */"","* @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)",84,0.2,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/DefaultDOMHandlerImpl.java
"// Invoke generator adapters for each object. //","for (int i = 0; i < data.length && canContinue(result); i++)",613,0.975,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/generator/Generator.java
""/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode)   */"","* @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)",84,0.1507537688442211,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/DefaultDOMHandlerImpl.java
""/*     * (non-Javadoc)     *      * @see org.eclipse.jface.dialogs.Dialog#createButtonsForButtonBar(org.eclipse.swt.widgets.Composite)     */"","* @see org.eclipse.emf.mapping.action.AddRootTopAction#getTopsToAdd()",46,0.21052631578947367,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping.ecore2ecore.editor/src/org/eclipse/emf/mapping/ecore2ecore/action/AddInputRootAction.java
"// Ignore it if it isn't a class. Not being a class is diagnosed for the generic type itself. //","EClassifier eClassifier = eGenericSuperType.getEClassifier();",1225,0.9868421052631579,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// Ensure that the class loader for this class will be used downstream. //","}.validate(eDataType, value, diagnostics, context);",921,0.9833333333333333,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EObjectValidator.java
"// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments","if (((index+1) < uriSpecLen) &&",1920,0.26804123711340205,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Don't bother complaining about things with no name, // since there are constraints for that problem. //","keys.add(null);",774,0.6814814814814815,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
""/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */"","* @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)",84,0.13274336283185842,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/DefaultDOMHandlerImpl.java
"//EcoreSwitch","None",None,None,None
"// A document root can have multiple ID attributes because there can be multiple global element or attribute declarations of type ID  // and these will be the ID in the complex types that reference them, // i.e., they aren't really the ID of the document root. //","if (eIDAttribute != null && !ExtendedMetaData.INSTANCE.isDocumentRoot(eClass))",695,0.6809815950920245,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// For performance, skip matching all the features of the first super type. //","int start = 0;",755,0.984375,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// Action bar.","actionBar = new ToolBar(control, SWT.FLAT | SWT.WRAP);",397,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common.ui/src/org/eclipse/emf/common/ui/ViewerPane.java
"// note that the copied tree should not be modified by wrapped ASTJField // // the copied tree will have source ranges for all nodes in the source file, // hence, the get methods in the new ASTJField will not return the right contents","FieldDeclaration newFieldDeclaration =",548,0.47808764940239046,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTFacadeHelper.java
"// Checks whether the string contains any more segments after the one that // starts at position i.","private static boolean segmentsRemain(String uri, int i)",781,0.8611111111111112,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
""/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#add(org.eclipse.emf.ecore.ENamedElement, org.eclipse.emf.ecore.xmi.XMLResource.XMLInfo)   */"","* @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)",84,0.17647058823529413,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/DefaultDOMHandlerImpl.java
""/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */"","* @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)",84,0.19230769230769232,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/DefaultDOMHandlerImpl.java
"// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6","String path = "";",2017,0.8727272727272727,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Create the key from the key bytes","Key key = new SecretKeySpec(decryptedKeyBytes, ENCRYPTION_KEY_ALGORITHM);",213,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/resource/impl/AESCipherImpl.java
""/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */"","public class FeatureMapEntryItemProvider",43,0.17670682730923695,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.change.edit/src/org/eclipse/emf/ecore/change/provider/FeatureMapEntryItemProvider.java
"// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);","public EStructuralFeature.Setting setting(EStructuralFeature feature)",1102,0.738255033557047,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/FeatureMapUtil.java
"// This must have no fewer segments than the prefix.  Since the prefix // is not the root absolute path, its last segment is empty; all others // must match.","int i = 0;",2772,0.6195652173913043,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// create new field and replace it all by original contents","{",581,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTFacadeHelper.java
"// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19","None",None,None,None
"// If this is a hierarchical URI reference and prefix is a prefix of it, // returns the portion of the path remaining after that prefix has been // trimmed; null otherwise.","private String[] getTailSegments(URI prefix)",2747,0.5829145728643216,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Encodes a complete URI, optionally leaving % characters unescaped when // beginning a valid three-character escape sequence.  We can either treat // the first or # as a fragment separator, or encode them all.","private static String encodeURI(String uri, boolean ignoreEscaped, int fragmentLocationStyle)",2879,0.5271966527196653,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Returns the character encoded by % followed by the two given hex digits, // which is always 0xFF or less, so can safely be casted to a byte.  If // either character is not a hex digit, a bogus result will be returned.","private static char unescape(char highHexDigit, char lowHexDigit)",3081,0.5210084033613446,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done","if (m_scheme == null) {",1990,0.5420560747663551,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas","else if (!isURICharacter(testChar)) {",2378,0.3602941176470588,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Returns the shortest relative path between the the non-relative path of // the given base and this absolute path.  If the base has no path, it is // treated as the root absolute path.","private String[] findRelativePath(URI base, boolean preserveRootParents)",2227,0.5887850467289719,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Validates all of the URI components.  Factory methods should call this // before using the constructor, though they must ensure that the // inter-component requirements described in their own Javadocs are all // satisfied, themselves.  If a new URI is being constructed out of // an existing URI, this need not be called.  Instead, just the new // components may be validated individually.","private static void validateURI(boolean hierarchical, String scheme,",1035,0.3152454780361757,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// There is no match if the types are different // and they don't each specify the same non-null instance class name. //","if (eType != otherEType)",907,0.5588235294117647,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// Interpret it as part of the name. //","name = uriFragmentSegment;",438,0.9666666666666667,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EModelElementImpl.java
"// The string must contain inappropriate whitespace, so find the index for the first difference. //","int i = 0;",1461,0.9879518072289156,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// When used as a generic super type, there must be a classifier that refers to a class. //","if (!(eGenericType.getEClassifier() instanceof EClass))",2777,0.9861111111111112,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// Don't complain about the literals if they are the same as the names and the names collide. //","String name = eEnumLiteral.getName();",1657,0.987012987012987,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
""/* * EncodingMap is a convenience class which handles conversions between  * IANA encoding names and Java encoding names, and vice versa. The * encoding names used in XML instance documents <strong>must</strong> * be the IANA encoding names specified or one of the aliases for those names * which IANA defines. * <p> * <TABLE BORDER=""0"" WIDTH=""100%""> *  <TR> *      <TD WIDTH=""33%""> *          <P ALIGN=""CENTER""><B>Common Name</B> *      </TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER""><B>Use this name in XML files</B> *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER""><B>Name Type</B> *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER""><B>Xerces converts to this Java Encoder Name</B> *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">8 bit Unicode</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">UTF-8 *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">IANA *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">UTF8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">ISO Latin 1</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ISO-8859-1 *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">MIME *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">ISO-8859-1 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">ISO Latin 2</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ISO-8859-2 *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">MIME *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">ISO-8859-2 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">ISO Latin 3</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ISO-8859-3 *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">MIME *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">ISO-8859-3 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">ISO Latin 4</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ISO-8859-4 *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">MIME *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">ISO-8859-4 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">ISO Latin Cyrillic</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ISO-8859-5 *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">MIME *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">ISO-8859-5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">ISO Latin Arabic</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ISO-8859-6 *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">MIME *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">ISO-8859-6 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">ISO Latin Greek</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ISO-8859-7 *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">MIME *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">ISO-8859-7 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">ISO Latin Hebrew</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ISO-8859-8 *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">MIME *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">ISO-8859-8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">ISO Latin 5</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ISO-8859-9 *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">MIME *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">ISO-8859-9 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">EBCDIC: US</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ebcdic-cp-us *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">IANA *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">EBCDIC: Canada</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ebcdic-cp-ca *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">IANA *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">EBCDIC: Netherlands</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ebcdic-cp-nl *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">IANA *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">EBCDIC: Denmark</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ebcdic-cp-dk *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">IANA *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">EBCDIC: Norway</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ebcdic-cp-no *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">IANA *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">EBCDIC: Finland</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ebcdic-cp-fi *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">IANA *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">EBCDIC: Sweden</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ebcdic-cp-se *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">IANA *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">EBCDIC: Italy</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ebcdic-cp-it *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">IANA *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">cp280 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">EBCDIC: Spain, Latin America</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ebcdic-cp-es *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">IANA *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">cp284 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">EBCDIC: Great Britain</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ebcdic-cp-gb *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">IANA *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">cp285 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">EBCDIC: France</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ebcdic-cp-fr *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">IANA *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">cp297 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">EBCDIC: Arabic</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ebcdic-cp-ar1 *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">IANA *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">cp420 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">EBCDIC: Hebrew</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ebcdic-cp-he *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">IANA *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">cp424 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">EBCDIC: Switzerland</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ebcdic-cp-ch *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">IANA *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">cp500 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">EBCDIC: Roece</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ebcdic-cp-roece *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">IANA *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">EBCDIC: Yugoslavia</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ebcdic-cp-yu *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">IANA *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">EBCDIC: Iceland</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ebcdic-cp-is *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">IANA *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">cp871 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">EBCDIC: Urdu</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">ebcdic-cp-ar2 *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">IANA *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">cp918 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">Chinese for PRC, mixed 1/2 byte</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">gb2312 *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">MIME *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">GB2312 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">Extended Unix Code, packed for Japanese</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">euc-jp *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">MIME *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">eucjis *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">Japanese: iso-2022-jp</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">iso-2020-jp *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">MIME *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">JIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">Japanese: Shift JIS</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">Shift_JIS *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">MIME *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">SJIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">Chinese: Big5</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">Big5 *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">MIME *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">Big5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">Extended Unix Code, packed for Korean</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">euc-kr *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">MIME *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">iso2022kr *      </TD> *  </TR> *  <TR> *      <TD WIDTH=""33%"">Cyrillic</TD> *      <TD WIDTH=""15%""> *          <P ALIGN=""CENTER"">koi8-r *      </TD> *      <TD WIDTH=""12%""> *          <P ALIGN=""CENTER"">MIME *      </TD> *      <TD WIDTH=""31%""> *          <P ALIGN=""CENTER"">koi8-r *      </TD> *  </TR> * </TABLE> *  * @author TAMURA Kent, IBM * @author Andy Clark, IBM */"","* <TABLE BORDER="0" WIDTH="100%">",473,0.015715573876078835,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Can't have both a classifier and a type parameter. //","if (diagnostics == null)",2706,0.9777777777777777,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// Add Userinfo Characters","fgLookupTable[';'] |= USERINFO_CHARACTERS;",1610,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// The type parameter must be in scope and must not be a forward reference. //","if (diagnostics == null)",2752,0.9838709677419355,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// Ignore trailing whitespace","}",4291,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// Incorrect number of type arguments. //","if (diagnostics == null)",3113,0.9705882352941176,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// Have no arguments when they are allowed is only a warning. //","if (diagnostics == null)",3089,0.9803921568627451,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// Can't have both an upper and lower bound. //","if (eLowerBound != null && eUpperBound != null)",2968,0.972972972972973,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
""/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getClassifier(java.lang.String, java.lang.String)   */"","* @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)",84,0.22727272727272727,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/DefaultDOMHandlerImpl.java
"// Wildcards are only allowed in type arguments. //","if (eClassifier == null && eTypeParameter == null)",2830,0.9761904761904762,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
""/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeature(org.eclipse.emf.ecore.EClass, java.lang.String, java.lang.String)   */"","* @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)",84,0.189873417721519,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/DefaultDOMHandlerImpl.java
"// Can't have type arguments unless there is a classifier //","if (diagnostics == null)",3060,0.9795918367346939,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// Can't have a classifier or a type parameter as well as bounds. //","if (eGenericType.getEClassifier() != null || eGenericType.getETypeParameter() != null)",2991,0.9814814814814815,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// Can only have bounds when used as a type argument. //","if (diagnostics == null)",3016,0.9772727272727273,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// remove/add the action bar from the view so to avoid // having an empty action bar participating in the view's // layout calculation (and maybe causing an empty bar to appear)","if (newCount < 1)",266,0.4631578947368421,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common.ui/src/org/eclipse/emf/common/ui/ViewerPane.java
"//MappingPackage ePackage = ((ComplexTypeConverter)msg.getNotifier()).ePackageMapping();","if (msg.getFeature() == ePackage.getComplexTypeConverter_In2out() || msg.getFeature() == ePackage.getComplexTypeConverter_Out2in())",118,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/provider/ComplexTypeConverterItemProvider.java
"// We test their relationship either via them both being classes... //","if (eBoundEClassifier instanceof EClass && eClassifier instanceof EClass)",3259,0.9827586206896551,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// When the pane or any child gains focus, notify the workbench.","control.addListener(SWT.Activate, this);",184,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common.ui/src/org/eclipse/emf/common/ui/ViewerPane.java
"// If the are the same then it is bounded properly... //","if (eBoundEClassifier != eClassifier)",3255,0.9772727272727273,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// namespace context","public void setAnySimpleType(EClass type)",1583,0.972972972972973,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHelperImpl.java
"// This is for the topDown feature. //","itemPropertyDescriptors.add",86,0.9666666666666667,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/provider/MappingRootItemProvider.java
"// The arguments, type parameters, lower bounds and upper bounds must be equal type arguments. //","return",3682,0.9876543209876543,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// Set up the substitutions of any type parameters this class has with respect to the type arguments for them. //","Map<? extends ETypeParameter, ? extends EGenericType> localSubstitutions = substitutions;",3273,0.9891304347826086,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// Ignore leading whitespace","}",4281,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// Determine if there is a bounding generic super type. //","for (EGenericType eGenericSuperType : eClass.getEGenericSuperTypes())",3269,0.9787234042553191,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// If there is a upper bound, the bound must bound it. //","EGenericType eUpperBound = eGenericType.getEUpperBound();",3353,0.9772727272727273,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// Create a new array. //","result = new String [unsortedList.size()];",138,0.9473684210526315,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common.ui/src/org/eclipse/emf/common/ui/celleditor/ExtendedComboBoxCellEditor.java
"// Test if there are type parameters that might require substitution. //","EList<ETypeParameter> eTypeParameters = eClass.getETypeParameters();",3277,0.9833333333333333,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// new declaration will not have fragments until performSplit() is called","newDeclaration.fragments().clear();",391,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJField.java
"// If there is a type parameter, one of its bounds must be bounded by the bound. //","boolean result = false;",3337,0.9846153846153847,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// add leading comments","ASTNode prevNode = getPreviousNode(node);",756,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/CommentAwareSourceRangeComputer.java
"// If the generic type is a wildcard, it can't be bounded by another wildcard. //","if (eGenericType.getETypeParameter() == null && eGenericType.getEClassifier() == null)",3433,0.9846153846153847,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// Failing all those cases, there must be an lower bound that bounds it. //","EGenericType eLowerBound = eGenericType.getELowerBound();",3362,0.9833333333333333,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// If there is an lower bound, the type argument must bound it. //","return isBounded(eBoundELowerBound, eGenericType, substitutions);",3449,0.9807692307692307,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// starting traverse file and build unit tree and table info","unitTreeBuilder.traverse(qualifier, modelTree, unitTree);",161,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseUtil.java
"// If one is null (but the other is not) then they can't be equal. //","else if (eClassifier1 != null || eClassifier2 != null)",3661,0.9811320754716981,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// If they both aren't null... //","if (eClassifier1 != null && eClassifier2 != null)",3644,0.9615384615384616,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// create OK and Details buttons","createButton(parent, IDialogConstants.OK_ID, IDialogConstants.OK_LABEL, true);",278,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common.ui/src/org/eclipse/emf/common/ui/dialogs/DiagnosticDialog.java
"// If they are the same classifier, they are of course equal. //","if (eClassifier != eBoundEClassifier)",3502,0.9803921568627451,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// If one is null (but the other is not) then they are not equal. //","else if (eGenericType1 == null || eGenericType2 == null)",3625,0.9807692307692307,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// If they are the same instance they are equal. //","if (eGenericType1 == eGenericType2)",3619,0.975,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// Go through the commands of the list. //","ListIterator<Command> commands = commandList.listIterator();",152,0.9696969696969697,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/command/StrictCompoundCommand.java
"// Index should be -1.","for (int i = 0; i < size; ++i)",2142,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/BasicFeatureMap.java
"// Define a class loader that looks up classes using the URLs or the parent class loader, // and failing those, tries to look up the class in each bundle in the running JVM. //","URLClassLoader theClassLoader =",813,0.6790697674418604,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETEmitter.java
"//EcoreAdapterFactory","None",None,None,None
"// add the key/value pairs to the output string","for (String key : tree.values())",543,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLResourceImpl.java
""/*    public List subList(int from, int to)    {      return featureMap.subList(getEStructuralFeature(), from, to);    }*/"","@SuppressWarnings("unchecked")",669,0.49230769230769234,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/FeatureMapUtil.java
"// For the extended meta data to be created. //","ExtendedMetaData.INSTANCE.getName(eStructuralFeature);",1696,0.972972972972973,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/FeatureMapUtil.java
"// Reverse the test. //","return isMatching(eBoundELowerBound, eGenericType, substitutions);",3579,0.9444444444444444,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// Iterate over the mappings in the tree. //","OuterLoop: for (TreeIterator<Mapping> mappings = treeIterator(); mappings.hasNext(); )",457,0.9714285714285714,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/impl/MappingRootImpl.java
"// --entryCursor;","default:",419,0.9333333333333333,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/FeatureMapUtil.java
"// Don't cache this one as it will cause leaks because to dynamic demand created document roots and demand created EClasses. //","return new BasicValidator(containingClass, eStructuralFeature);",1685,0.9904761904761905,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/FeatureMapUtil.java
""/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */"","public class FeatureMapEntryItemProvider",43,0.1888412017167382,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.change.edit/src/org/eclipse/emf/ecore/change/provider/FeatureMapEntryItemProvider.java
"// reset text edits; since this node is processed successfully, there is no need to revert these changes","textEditsToRevert.clear();",727,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJCompilationUnit.java
"// EEnumImpl overrides this to do nothing. // The only case that is special is when a more specific instance of AbstractEnumerator is generated/reused. //","if (isGenerated)",137,0.43373493975903615,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EDataTypeImpl.java
"// This forces the feature ids to be assigned. //","inverseEReference.getEContainingClass().getFeatureCount();",656,0.9743589743589743,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreEList.java
"// Interprets escaped characters within the string according to Java // literal rules, with two exceptions: an unescaped " does not terminate // the string, and a \ not followed by b, t, n, f, r, ", ', u, or an octal // digit is taken literally, not as an error","public static String parseString(String s)",280,0.43703703703703706,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/util/CodeGenUtil.java
"// We can use == for EObjects and EnumLiterals. //","return (kind & (IS_EOBJECT | IS_ENUM)) == 0;",727,0.975,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/DelegatingEcoreEList.java
"// A standalone base is a valid URI according to spec","if (colonIdx == 0 || (p_base == null && fragmentIdx != 0)) {",1901,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// This is needed for internal bootstrapping of EGenericType's default value for eRawType. // It's simply not available before Ecore is constructed so we make it available and then patch what's missing. //","EGenericTypeImpl.eJavaObject = EcorePackage.Literals.EJAVA_OBJECT;",526,0.6215139442231076,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EcorePackageImpl.java
"// replace some arguments by another field names (constants)","for (int i = 0; i < arguments.length; i++)",514,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTNodeConverter.java
"//  Public","/**",1443,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Continue with the unresolved URI.","}",212,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/CommonPlugin.java
"// all implementations of Java 1.5 should support AES","throw new RuntimeException(ex);",74,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/resource/impl/AESCipherImpl.java
"// for enum constants, insert line break after the comma if there is anything after the comma","if (node.getNodeType() == ASTNode.ENUM_CONSTANT_DECLARATION)",1064,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJCompilationUnit.java
"//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$","None",None,None,None
"// insert new line at the end of previous constant","int commaPosition = nodePosition.getStartPosition() - 1;",1192,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJCompilationUnit.java
"// if needed, comment out a comma of the previous enum constant","if (node.getNodeType() == ASTNode.ENUM_CONSTANT_DECLARATION)",1029,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJCompilationUnit.java
"// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.","for (int i = 0; i < addrLength; i++) {",3090,0.289544235924933,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// create map of public static final field initializers to fields","int i = 0;",360,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTNodeConverter.java
"// This should be the same as the logic in ResourceImpl.getEObject(String). //","String fragment = uri.fragment();",248,0.9848484848484849,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/ECrossReferenceAdapter.java
"// query - starts with ? and up to fragment or end","if (testChar == '?') {",2393,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// if there is a comment with start position > rangeStartPos","if (commentIndex < commentArray.length)",297,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/CommentAwareSourceRangeComputer.java
"// Prepare for CreateChild item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$","createChildMenuManager = new MenuManager(EcoreEditorPlugin.getPlugin().getString("_UI_CreateChild_menu_item"));",432,0.7627118644067796,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreActionBarContributor.java
"// Iterate over the owner list twice, first matching objects from the collection by identity (==), then matching // objects by value equality (.equals()). The positions of matched objects in the owner list are recorded, and // the objects are stored in the same order. The lists are then merged to form a final, in-order list of objects // and corresponding indices in ownerList. This is very important for undo to interpret the indices correctly. // Also, this yields exactly one object removed for each object in the collection, with preference given to // identity over value equality. //","List<Object> identity = new ArrayList<Object>(collection.size());",256,0.3231292517006803,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/RemoveCommand.java
"// The next line leaves objectsBeforeApply with all the objects that were // added during the last recording.","objectsBeforeApply.removeAll(objectsAfterApply);",411,0.8051948051948052,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.change/src/org/eclipse/emf/ecore/change/impl/ChangeDescriptionImpl.java
"// Closing the detail area","diagnosticComposite.dispose();",422,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common.ui/src/org/eclipse/emf/common/ui/dialogs/DiagnosticDialog.java
"// Define gradient (blue to widget background color)","Color clr1 = disp.getSystemColor(SWT.COLOR_TITLE_BACKGROUND);",737,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common.ui/src/org/eclipse/emf/common/ui/ViewerPane.java
"//lastCursor = -1; //prepared = 0;","return false;",369,0.6511627906976745,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/FeatureMapUtil.java
"// callers that plan to use this name without appending a suffix should call f.safeName(f.getName()) to make sure its not a keyword // this is a safe guaranteed uncapitalized form of the name // the safe name and cast to EObject, if necessary.","None",None,None,None
"// Create the editing domain with a special command stack. //","editingDomain = new AdapterFactoryEditingDomain(adapterFactory, commandStack, new HashMap<Resource, Boolean>());",813,0.98,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreEditor.java
"// Validate now since the call we make after will skip validating.","++modCount;",1521,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/BasicFeatureMap.java
"// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //","for (ListIterator<E> i = delegateListIterator(); i.hasNext(); )",784,0.5967741935483871,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/notify/impl/DelegatingNotifyingListImpl.java
"// for field declarations use variable declaration fragments instead","if (declaration instanceof FieldDeclaration)",178,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJAbstractType.java
"// convert only public static final fields","int flags = field.getFlags();",237,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTNodeConverter.java
"// The container class must be null for the open content features of the document root // to ensure that they are looked up in the actual eClass()  // rather than assumed to be a feature with a feature ID relative to the actual class. // Otherwise, it's good to have this optimization. //","Class<?> containerClass = ExtendedMetaData.INSTANCE.getDocumentRoot(this) == eClass ? null : eClass.getInstanceClass();",1659,0.46557377049180326,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EPackageImpl.java
"// If the plugin.properties isn't within the root of the archive, // create a new URI for the folder location of the archive, // so we can look in the folder that contains it. //","uri = URI.createURI(uri.authority()).trimSegments(1);",451,0.5,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/EMFPlugin.java
"// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext.","if (data == null)",1368,0.6721991701244814,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// For demand created created packages we allow the list of classifiers to grow  // so this should handle those additional instances. //","int originalMapSize = nameToClassifierMap.size();",2156,0.7374301675977654,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/BasicExtendedMetaData.java
"// Ensure that this is a touch notification so to resource aren't marked as dirty. //","ENotificationImpl notification =",891,0.9855072463768116,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/impl/MappingRootImpl.java
"// menuManager.insertBefore("additions", new Separator("schema-actions")); // menuManager.insertAfter("schema-actions", generateSchemaAction);","menuManager.insertBefore("edit", new Separator("open-actions"));",826,0.6859903381642513,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore.ui/src/org/eclipse/emf/codegen/ecore/genmodel/presentation/GenModelActionBarContributor.java
""/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/"","* This adds a listener.",300,0.25,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.change.edit/src/org/eclipse/emf/ecore/change/provider/ChangeItemProviderAdapterFactory.java
"// Undo the preparation for next and continue.","if (values == null)",590,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EContentsEList.java
"// If we can't create one, too bad.","}",242,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/StringSegment.java
"//  /** //   * Simpler implementation that sets the range of any node to be the node and all preceding comments //   */ //  public SourceRange computeSourceRange(ASTNode node) //  { //    SourceRange range = new SourceRange(node.getStartPosition(), node.getLength()); // //    range = extendRangeBackward(findLeadingComment(node, getPreviousNode(node), false), range); // //    return range; //  }","static Hashtable<String, String> nonxs = null;",6812,0.07017543859649122,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Handle the last byte at the end. //","buffer[21] = BASE64_DIGITS[(uuid[15] >> 2) & 0x3F];",3570,0.9655172413793104,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// create JNode and set properties","ASTJCompilationUnit compilationUnit = (ASTJCompilationUnit)convertToNode(astCompilationUnit);",295,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTFacadeHelper.java
"// If the first object is null, the second object must be null. //","if (eObject1 == null)",2100,0.9807692307692307,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"//   // Suppress default constructor for noninstantiability. //   private EcoreUtil() //   { //   }","* Returns the specified notifier's existing adapter of the specified type.",72,0.8,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
""/*  List theList = new java.util.ArrayList();  protected List delegateList()  {    return theList;  }*/"","public Wrapper getWrapper()",63,0.6016260162601627,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/DelegatingFeatureMap.java
"// Method created to increase the performance of regular expressions // by reducing the length of the string that is matched. //","private int getStartIndex(String string)",639,0.7108433734939759,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/JMerger.java
"// Failure to resolve is ignored.","}",229,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// Depending on the action and the current state, we'll toggle the state. // i.e., for unset, we need to turn it off if it's on,  // and for set we need to turn it on if it's off. //","if (bit == action)",1728,0.6009852216748769,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/BasicEObjectImpl.java
"// Skip the dummy null object and test again. //","next();",1389,0.9736842105263158,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// If we are on the special resource set iterator, and there isn't really a next object at this point... //","if (iterator == resourceSetIterator && !resourceSetIterator.reallyHasNext())",1385,0.9883720930232558,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// Finds the next occurrence of one of the characters in the set represented // by the given bitmask in the given string, beginning at index i. The index // of the first found character, or s.length() if there is none, is // returned.  Before searching, i is limited to the range [0, s.length()]. //","private static int find(String s, int i, long highBitmask, long lowBitmask)",789,0.41042345276872966,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Then eObject2 must be that previous match. //","return eObject1MappedValue == eObject2;",2120,0.9743589743589743,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// Create move commands for all the objects in the collection. //","CompoundCommand compoundCommand = new CompoundCommand();",486,0.9811320754716981,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/DragAndDropCommand.java
"// We know the first object isn't null, so if the second one is, it can't be equal. //","if (eObject2 == null)",2107,0.9850746268656716,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// Some character classes, as defined in RFC 2396's BNF for URI. // These are 128-bit bitmasks, stored as two longs, where the Nth bit is set // iff the ASCII character with value N is included in the set.  These are // created with the highBitmask() and lowBitmask() methods defined below, // and a character is tested against them using matches(). //","private static final long ALPHA_HI = highBitmask('a', 'z') | highBitmask('A', 'Z');",236,0.30994152046783624,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// If eObject1 and eObject2 are the same instance... //","if (eObject1 == eObject2)",2137,0.9777777777777777,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// Look for the first non-XMI element. //","None",None,None,None
"// Check all the values. //","for (int i = 0, size = eClass.getFeatureCount(); i < size; ++i)",2162,0.9523809523809523,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// Assume from now on that they match. //","put(eObject1, eObject2);",2156,0.96875,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// Match them and return true. //","put(eObject1, eObject2);",2141,0.9615384615384616,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// If they don't have the same size, the feature maps aren't equal. //","int size = featureMap1.size();",2300,0.9821428571428571,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// Value used to suppress visibility. //","static final String TRUE = "true";",3435,0.9696969696969697,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// The values must be Java equal. //","return value1.equals(value2);",2287,0.9642857142857143,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// If this is a feature map... //","if (FeatureMapUtil.isFeatureMap(attribute))",2275,0.96,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// If the first value is null, the second value must be null. //","if (value1 == null)",2261,0.98,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// Neither eObject1 nor eObject2 have been compared yet.","// If eObject1 and eObject2 are the same instance...",2135,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// Since the first value isn't null, if the second one is, they aren't equal. //","if (value2 == null)",2268,0.984375,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// If it is in a resource, form the URI relative to that resource. //","Resource resource = eObject.eResource();",2819,0.9814814814814815,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// There is no reason they aren't equals. //","return true;",2329,0.9714285714285714,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// Compare entries in order. //","for (int i = 0; i < size; i++)",2308,0.96,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// If the values aren't Java equal, the feature maps aren't equal. //","return value1 == null ? value2 == null : value1.equals(value2);",2349,0.9821428571428571,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// EqualityHelper","/**",2355,0.9696969696969697,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// clockseq_hi","uuid[8] = (byte)(((clockSequence >> 8) & 0x3F) | 0x80);",3719,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// The node identifier is already in network byte order,  // so there is no need to do any byte order reversing. //","for (int i = 0; i < 6; ++i)",3700,0.6762589928057554,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// Set the most significant bit of the first octet to 1 so as to distinguish it from IEEE node addresses //","nodeAddress[0] |= (byte)0x80;",3696,0.9882352941176471,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// If it's a proxy, use that. //","URI proxyURI = ((InternalEObject)eObject).eProxyURI();",2810,0.9583333333333334,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// We just woke up.","}",3767,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// Wait so that the clock can catch up and the time adjustment won't overflow.","try",3760,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// time_hi //","None",None,None,None
"// time_mid //","None",None,None,None
"// Ignore if we can't freeze.","}",3840,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// This case can only happen if we are reset to a mark and we've got lots of XMLNS attributes to write. //","int counter = 0;",191,0.9879518072289156,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/StringSegment.java
"// throws SAXException","{",734,0.46511627906976744,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// This is the cheapest and most common case. //","if (cursor.size < segmentCapacity)",158,0.9736842105263158,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/StringSegment.java
"//fall through...","case Node.ATTRIBUTE_NODE:",144,0.896551724137931,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/DefaultDOMHandlerImpl.java
"// If there is a temporary file... //","if (temporaryFile != null)",132,0.9655172413793104,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/StringSegment.java
"// System.err.println("add = ["+newString+"]");","(">   " + eStructuralFeature.getEContainingClass().getName() + "." + eStructuralFeature.getName() +",4086,0.5806451612903226,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// Deresolve all the URI against the current base URI. //","Map<String, String> result = new LinkedHashMap<String, String>();",155,0.9782608695652174,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/ResourceEntityHandlerImpl.java
""/*   * Javadoc copied from interface   */"","public String getID(EObject eObject)",372,0.9,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLResourceImpl.java
"// external schema locations should only be processed once, i.e. in the subsequent parse // there is no need to process those again.","externalURIToLocations = null;",622,0.8108108108108109,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// EMOF.isReadOnly = !Ecore.changeable","}",65,0.47619047619047616,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/EMOFHelperImpl.java
"// SAXXMIHandler","None",None,None,None
"// Ecore.changeable = !EMOF.isReadOnly","}",78,0.45751633986928103,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/EMOFHelperImpl.java
"// Ignore whatever was set before. //","if (objectsWithGenericTypeList.add(object))",104,0.9666666666666667,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/EMOFHelperImpl.java
"// handler.ignorableWhitespace(ch, start, length);","}",138,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/SAXWrapper.java
"// Try to resolve the proxy locally. //","EObject resolvedEObject = xmlResource.getEObject(proxy.eProxyURI().fragment());",1050,0.967741935483871,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// If we are pessimistic, then we need to undo all the commands that we have executed so far. //","if (isPessimistic)",221,0.9868421052631579,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/command/StrictCompoundCommand.java
"// And find the one that holds this proxy. //","EReference oppositeEReference = eReference.getEOpposite();",1045,0.9714285714285714,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// // Implement EntityResolver methods //","@Override",793,0.9411764705882353,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// // Implement DTDHandler methods //","public void startDTD(String name, String publicId, String systemId)",768,0.9333333333333333,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// // Overwrite DefaultHandler methods //","@Override",656,0.9411764705882353,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// If the resolved object doesn't contain a reference to the proxy holder as it should. //","if (eReference.isMany() ?",1087,0.9863013698630136,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// We won't need to process this again later. //","if (!isEndDocument)",1055,0.9736842105263158,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// Compute the holder of the proxy //","EObject proxyHolder = (EObject)(eReference.isMany() ? ((List<?>)proxy.eGet(eReference)).get(0) : proxy.eGet(eReference));",1062,0.9655172413793104,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// Move the resolved object to the right place, remove the proxy, and we're done. //","int proxyIndex = holderContents.basicIndexOf(proxy);",1078,0.9852941176470589,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// EATM temporary for debug purposes only. //","Collection<EPackage> demandedPackages = EcoreUtil.copyAll(extendedMetaData.demandedPackages());",1225,0.972972972972973,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// The proxy needs to be replaced in a way that updates both ends of the reference. //","if (oppositeEReference.isMany())",1093,0.9852941176470589,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// // Implement LexicalHandler methods //","public void startEntity(java.lang.String name)",715,0.9411764705882353,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// At least set the references that we were able to resolve, if any. //","setFeatureValues(ref);",1175,0.9821428571428571,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// We won't need to process this again later.","//",1055,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// Set up a deferred extent so the document root we create definitely will not be added to the resource. //","List<EObject> oldDeferredExtent = deferredExtent;",1363,0.9883720930232558,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// EATM Demand create metadata.","result = extendedMetaData.demandFeature(uri, name, isElement);",2966,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// check for simple feature","if (extendedMetaData != null && newObject != null)",1313,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// Process the new root object if any. //","EObject peekObject = objects.peek();",1383,0.96875,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// Remove the document root's information from the top of the stacks. //","objects.remove(0);",1377,0.9830508474576272,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// If externalSchemaLocations are specified, process these ones as well","try",1689,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// Place the time into the byte array in network byte order. //","for (int i = 0; i < 4; ++i)",3803,0.98,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// time_low //","None",None,None,None
"// If the command is executable, record and execute it. //","if (command != null)",76,0.9787234042553191,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/command/BasicCommandStack.java
"// The new root object is the actual new object since all sign of the document root will now have disappeared. //","newObject = peekObject;",1426,0.989010989010989,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// Handle namespaces","int index = attrib.indexOf(':', 0);",1618,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// This check is redundant -- see handleFeature method (EL)","/*if (extendedMetaData != null && !((EReference)feature).isContainment())",2011,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// Ignore a whitespace only text entry at the beginning. //","if (entry.getEStructuralFeature() !=  XMLTypePackage.Literals.XML_TYPE_DOCUMENT_ROOT__TEXT ||",1472,0.9791666666666666,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// Try to get a general-content feature. // Use a pattern that's not possible any other way. //","if (xmlMap != null && (feature = getFeature(peekObject, null, "", true)) != null)",1820,0.6071428571428571,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// This handles the case of a substitution group. //","if (xmlMap != null)",1853,0.9761904761904762,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// This is for the case for a local unqualified element that has been bound. //","if (eFactory == null)",1828,0.9841269841269841,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// We use null here instead of "" because an attribute without a prefix is considered to have the null target namespace...","String prefix = null;",2672,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// This only works for old globally registered things.","for (Map.Entry<String, Object> entry : packageRegistry.entrySet())",2445,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// Ignore it if we can't find it since we'll fail anyway.","}",2482,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// extend the array, if necessary","if (currentContext + 1 == context.length)",1481,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHelperImpl.java
"// Ignore since we expect this to fail because of early termination // and if there is some other kind of failure, then we'll simply not be able to match the content type.","finally",192,0.5743589743589743,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLContentHandlerImpl.java
"// Entry entry = new Entry(eObject, CONTAINING_FEATURE); // return (EStructuralFeature)map.get(entry);","public EObject create(EClass eClass)",1057,0.6993006993006993,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EStoreEObjectImpl.java
"// Index of writing point // Index of processing point","None",None,None,None
"// class AttributesProxy","} // XMLLoad",777,0.9777777777777777,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLLoadImpl.java
"// use the pool to retrieve the parser","parser = pool.get(parserFeatures, parserProperties, Boolean.TRUE.equals(options.get(XMLResource.OPTION_USE_LEXICAL_HANDLER)));",138,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLLoadImpl.java
"// traverse element node","String namespaceURI = element.getNamespaceURI();",511,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLLoadImpl.java
"// record duplicate declaration for a given prefix (#3)","addNSDeclaration(prefix, uri);",1418,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHelperImpl.java
"// release parser back to the pool","if (pool != null)",183,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLLoadImpl.java
"// record namespaces in scope //","for (Node parent = element.getParentNode();  parent != null && parent.getNodeType() != Node.DOCUMENT_NODE;  parent = parent.getParentNode())",474,0.9615384615384616,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLLoadImpl.java
"// Don't read encoding - rely on XML parser to provide one via Locator2","try",221,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLLoadImpl.java
"// Create an simple any type wrapper for the attribute value and use that with the EReference. //","SimpleAnyType simpleAnyType = (SimpleAnyType)EcoreUtil.create(anySimpleType);",1099,0.9873417721518988,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHelperImpl.java
"// true if seen xmlns="" declaration","protected boolean seenEmptyStringMapping;",89,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHelperImpl.java
"// handler.resolveEntity(publicId, systemId);","return null;",156,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/SAXWrapper.java
"// XMLLoad","None",None,None,None
"// SAXXMLHandler","None",None,None,None
"// If we are substituting an EAttribute for an EReference... //","EClassifier eType = feature.getEType();",1094,0.9807692307692307,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHelperImpl.java
"// Once we see a lookup of an element in the null namespace, we should behave as if there has been an explicit xmlns="" //","if (isElement && namespaceURI == null)",958,0.9896907216494846,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHelperImpl.java
"// There really must be a package. //","EPackage ePackage;",396,0.9655172413793104,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHelperImpl.java
"// for any content prefix to URI mapping could be in namespace context","nsPrefix = namespaceSupport.getPrefix(nsURI);",582,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHelperImpl.java
"// Sort and eliminate duplicates caused by having both a regular package and a demanded package for the same nsURI. //","for (EPackage ePackage : packages.keySet())",1047,0.9896907216494846,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHelperImpl.java
"// recording a first declaration for a given prefix","prefixesToURIs.put(prefix, uri);",1424,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHelperImpl.java
"// Make sure that the list will appear to be set to be empty. //","if (list.isEmpty())",1132,0.9795918367346939,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHelperImpl.java
"// record default ns declaration as duplicate if seen QName (#1) or seen xmlns="" (#2)","addNSDeclaration(prefix, uri);",1411,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHelperImpl.java
"// since xmlns="" is default declaration, remove ""->empty_URI mapping","prefixesToURIs.removeKey(prefix);",1403,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHelperImpl.java
"// push context","context[++currentContext] = namespaceSize;",1489,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHelperImpl.java
"// resize array, if needed","if (namespaceSize == namespace.length)",1526,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHelperImpl.java
"// find uri in current context","for (int i = namespaceSize; i > 0; i -= 2)",1557,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHelperImpl.java
"// bind prefix to uri in current context","namespace[namespaceSize++] = prefix;",1534,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHelperImpl.java
"// prefix not found","return null;",1551,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHelperImpl.java
"// set parser features and properties","if (features != null)",140,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLParserPoolImpl.java
"// uri not found","return null;",1569,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHelperImpl.java
"// caching turned on by the user","if (lookup.isEmpty())",550,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLSaveImpl.java
"// DOM serialization","if (handler instanceof DefaultDOMHandlerImpl)",492,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLSaveImpl.java
"// Look for a matching element in the specified packages if there are any. //","if (ePackages != null)",92,0.9838709677419355,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/ElementHandlerImpl.java
"// Look for a substitution group feature in the classifier's containing package. //","result = getSubstitutionGroup(extendedMetaData, eClassifier.getEPackage(), eContainingClass, eStructuralFeature, eClassifier);",164,0.9857142857142858,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/ElementHandlerImpl.java
"// set serialization options","if (!toDOM)",391,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLSaveImpl.java
"// XMIHandler","None",None,None,None
"// Look for a substitution group feature in the additional packages. //","if (ePackages != null)",173,0.9830508474576272,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/ElementHandlerImpl.java
"// Process the super types if that's been specified. //","if (considerSubtypes)",187,0.9777777777777777,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/ElementHandlerImpl.java
"// Entities aren't supported for DOM.","}",961,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLSaveImpl.java
"// If there is no field, then we can't do this.","}",801,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLSaveImpl.java
"// value[outputPos];","switch (ch)",3233,0.5757575757575758,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLSaveImpl.java
"// Process XML attributes","LOOP:",1224,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLSaveImpl.java
"// Since the cycle is detected by checking if we hit "this" again, after many iterations we'll call this method recursively  // in case we started with something that wasn't part of a cycle but later traversed up to a cycle. //","if (++count > 100000)",928,0.7152777777777778,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/BasicEObjectImpl.java
"// this is a root element","currentNode = document.createElementNS(nameInfo.getNamespaceURI(), nameInfo.getQualifiedName());",1130,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLSaveImpl.java
"// for performance reasons saveNil and saveElement are not used","if (!toDOM)",1735,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLSaveImpl.java
"// Process XML elements","for (int i = 0; i < elementCount; i++ )",1464,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLSaveImpl.java
"// Every codepoint is supported!","value[outputPos++] = high;",3326,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLSaveImpl.java
"// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:","if (ch <= mappableLimit)",3352,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLSaveImpl.java
"// We will use an xmi:Extension element for these","return info;",123,0.5985401459854015,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/EMOFResourceFactoryImpl.java
"// ownedProperty???","xmlMap.add(EcorePackage.eINSTANCE.getEClass_EOperations(), createXMLInfo("ownedOperation"));",89,0.26666666666666666,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/EMOFResourceFactoryImpl.java
"// First try to see if this package's implementation class has an eInstance. //","Field field = ePackage.getClass().getField("eINSTANCE");",792,0.9846153846153847,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLSaveImpl.java
"// Go back and add all the XMLNS stuff. //","doc.resetToMark(mark);",594,0.96875,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLSaveImpl.java
"// The helper part assumes that the summary is likely based on the helper and will change when the helper is set. //","if (note.getFeature() == MappingPackage.eINSTANCE.getMapping_Inputs() ||",1159,0.989247311827957,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping.ui/src/org/eclipse/emf/mapping/presentation/MappingEditor.java
"// create dummy documentElement","currentNode = document.createElementNS(XMIResource.XMI_URI, XMI_TAG_NS);",106,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMISaveImpl.java
"// Avoid a function call... //","if (lineWidth != Integer.MAX_VALUE)",644,0.9583333333333334,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLString.java
"// write doctype","if (saveDoctype)",289,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLString.java
""/*     *  Convert:     *  \n to line separator     */"","*  \r should be escaped to &xD;",3376,0.7058823529411765,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLSaveImpl.java
"// Assume the class isn't available.","}",58,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/util/DefaultEcoreBuilder.java
"//System.err.println("Do sorting: "+this.ranges.length);","(">   " + eStructuralFeature.getEContainingClass().getName() + "." + eStructuralFeature.getName() +",4086,0.5,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// boolean not","xmlMap.add(EcorePackage.eINSTANCE.getEStructuralFeature_DefaultValueLiteral(), createXMLInfo("default"));",63,0.19672131147540983,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/EMOFResourceFactoryImpl.java
"// register default options","loadOptions.put(XMLResource.OPTION_EXTENDED_META_DATA, extendedMetaData);",106,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/util/XMLProcessor.java
"// no property // no property","None",None,None,None
"// EAnnotations denoting specific EMOF elements are serialized as their EMOF elements.  // Other EAnnotations are serialized as xmi:Extensions. //","None",None,None,None
"// xmi:id // xmi:XMI // xmi:type // xmi:version // xmlns:xmi","None",None,None,None
"// Token.CLOSURE","if (child.getMinLength() == 0)",1359,0.8333333333333334,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"//XMLNamespaceFactory","None",None,None,None
"// convert the target node to a compatible node //","if (sourceAbstractType != null && !areCompatible(sourceAbstractType, targetAbstractType))",100,0.975,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/JMerger.java
"//XMLTypePackage","None",None,None,None
"// SimpleAnyType","None",None,None,None
"// ret.next is null.","break;",1329,0.8095238095238095,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Don't create anything.","}",2233,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/impl/XMLTypePackageImpl.java
"//XMLTypeFactoryImpl","None",None,None,None
"// do not validate on load. Check validity using Diagnostician.","return createName(initialValue);",2465,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/impl/XMLTypeFactoryImpl.java
"//XMLTypePackageImpl","None",None,None,None
"// Other escaped character.","buffer.append('\\');",637,0.8888888888888888,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"//System.err.println("Starts at "+index);","(">   " + eStructuralFeature.getEContainingClass().getName() + "." + eStructuralFeature.getName() +",4086,0.631578947368421,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"//DocumentRootImpl","None",None,None,None
"// Skips characters between '#' and a line end.","None",None,None,None
"// Skips a white space.","if (ch == '\t' || ch == '\n' || ch == '\f' || ch == '\r' || ch == ' ')",617,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// switch anchor type","op = op.next;",1857,0.972972972972973,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"//System.err.println("DEBUG: matchEnd="+matchEnd);","(">   " + eStructuralFeature.getEContainingClass().getName() + "." + eStructuralFeature.getName() +",4086,0.5373134328358209,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"//System.err.println("Non-match in fixed-string search.");","(">   " + eStructuralFeature.getEContainingClass().getName() + "." + eStructuralFeature.getName() +",4086,0.4931506849315068,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// Internal use only. // The @ always matches line beginnings.","if (!(offset == con.start",1787,0.7906976744186046,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
""/*           * Optimization against the first character.           */"","else if (this.firstChar != null) {",1588,0.926829268292683,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);","(">   " + eStructuralFeature.getEContainingClass().getName() + "." + eStructuralFeature.getName() +",4086,0.41379310344827586,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"//case 0x0b:  ret = "\\v";  break;","default:",4787,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// for CLOSURE, QUESTION","throw new RuntimeException("Internal Error: type="+this.type);",4084,0.7636363636363637,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Op.CHAR","this.fixedString = REUtil.decomposeToSurrogates(this.operations.getData());",3640,0.29508196721311475,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
""/**   * Performs escape encoding on the given string so that it can be represented using 1-byte characters.   * Any characters higher than 0xFF are replaced with an escape of the form \\uXXXX, where XXXX is the   * four-digit hex representation of the Unicode code point.   */"","public static String unicodeEscapeEncode(String unicode)",841,0.5501618122977346,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/util/CodeGenUtil.java
"//+this.fixedString","+"/"+REUtil.createOptionString(this.fixedStringOptions));",3664,0.9047619047619048,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// This pattern has a fixed string of which length is more than one.","if (this.fixedString != null) {",3658,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// ModifierOp","int getData() {                             // CharOp  for CHAR, BACKREFERENCE, CAPTURE, ANCHOR,",4087,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
""/*    public ParseException(String mes) {        this(mes, -1);    }    */"","public ParseException(String mes, int location) {",3950,0.7619047619047619,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"//System.err.println("Creates UnionOp");","(">   " + eStructuralFeature.getEContainingClass().getName() + "." + eStructuralFeature.getName() +",4086,0.631578947368421,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// Legacy word characters","if (ch == '_')  return true;",3923,0.5057471264367817,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// RANGE, NRANGE","throw new RuntimeException("Internal Error: type="+this.type);",4094,0.5714285714285714,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Not overlapped // src: o-----o // sub:         o-----o // res: o-----o // Reuse sub","result[wp++] = this.ranges[src++];",4436,0.33766233766233766,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"/*0B80..0BFF;*/","/*0C00..0C7F;*/ "Telugu",",6468,0.7894736842105263,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// This is the page for the table viewer. //","ViewerPane viewerPane =",1265,0.9705882352941176,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping.ecore2xml.ui/src/org/eclipse/emf/mapping/ecore2xml/presentation/Ecore2XMLEditor.java
"//System.err.println("Token#substractRanges(): Entry: "+this.ranges.length+", "+tok.ranges.length);","(">   " + eStructuralFeature.getEContainingClass().getName() + "." + eStructuralFeature.getName() +",4086,0.3157894736842105,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// Overlapped // src1:    o--------o // src2:  o----o // src2:      o----o // src2:          o----o // src2:  o------------o","if (src2begin <= src2begin && src1end <= src2end) {",4531,0.32075471698113206,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// src:    o--------o // sub:  o----o // res:       o-----o // Reuse src(=res)","// Reuse sub",4438,0.37142857142857144,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"//System.err.println("Token#addRange(): "+start+" "+end);","(">   " + eStructuralFeature.getEContainingClass().getName() + "." + eStructuralFeature.getName() +",4086,0.4931506849315068,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// src:    o--------o // sub:          o----o // res:    o-----o // Reuse sub","result[wp++] = this.ranges[src++];",4438,0.40625,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Not overlapped // src1:          o-----o // src2: o----o","// src:          o-----o",4481,0.5263157894736842,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// for UNIoN","throw new RuntimeException("Internal Error: type="+this.type);",4081,0.47619047619047616,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// src1:    o--------o // src2:  o----o // res:     o--o // Reuse the rest of src1","// src2:  o------------o",4531,0.44155844155844154,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// src1:    o--------o // src2:  o------------o // res:     o--------o // Reuse src2","src1 += 2;",4527,0.2894736842105263,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Not overlapped // src:          o-----o // sub: o----o","// sub:         o-----o",4436,0.49056603773584906,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// s&0x1f : 0-31","} else {",4707,0.48148148148148145,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// for UNION","return 0;",4078,0.6666666666666666,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Count all the bits in the bit patterns up to this one in the sequence of bit patterns. //","for (int i = offset; --i >= 0;)",1742,0.9861111111111112,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/BasicEObjectImpl.java
"// In a character class, this.chardata has one character, that is to say, // a pair of surrogates is composed and stored to this.chardata.","switch (ch) {",4927,0.6931818181818182,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Load the resource through the editing domain. // This will create a context and associate it with the resource set. //","resource = editingDomain.getResourceSet().getResource(resourceURI, true);",1067,0.5815602836879432,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreEditor.java
"// handle category escape","boolean positive = c == 'p';",5539,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"//this.setLocale(locale);","}",4858,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Skips '.'","tok = Token.token_dot;",5453,0.625,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Through down","default:",4952,0.9629629629629629,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// The one object in the resource's extent should be the root object. //","if (resource.getContents().isEmpty())",1620,0.9827586206896551,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping.ui/src/org/eclipse/emf/mapping/presentation/MappingEditor.java
"// conditional // this.offsets points the next of '('.","None",None,None,None
"// Options","this.offset --;",5013,0.2727272727272727,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"//tok = Token.createConcat(tok, this.parseFactor());","}",5079,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Parses yes/no-patterns.","this.next();",5232,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// this.offset points the next of '('","if (this.offset+1 >= this.regexlen)  throw ex("parser.factor.4", this.offset);",5201,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Parses a condition.","int refno = -1;",5203,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// '(?:' // '(?(' // (?modifiers ... )","None",None,None,None
"// such as (?-i)","this.offset ++;",5275,0.6046511627906976,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// {min,max}","while (off < this.regexlen",5400,0.6666666666666666,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// separate fields with an empty line","javaCoreOptions.put(DefaultCodeFormatterConstants.FORMATTER_BLANK_LINES_BEFORE_FIELD, "1");",434,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTFacadeHelper.java
"// this.offset -> next of '{'","int min = 0, max = -1;",5375,0.7164179104477612,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Save the resource to the file system. //","Resource r = mappingRoot.eResource();",1875,0.9705882352941176,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping.ui/src/org/eclipse/emf/mapping/presentation/MappingEditor.java
"// Set the value at the previously allocated index and return the previous value there. //","return eSetVirtualValue(index, value);",1951,0.9864864864864865,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/BasicEObjectImpl.java
"/*0B00..0B7F;*/","/*0B80..0BFF;*/ "Tamil",",6467,0.7894736842105263,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// If there is a cached result, return it. // We expect that if the package is set to be a proxy,  // the code in EPackageImpl.eSetProxyURI override will have cleared this value. //","if (ePackage != null)",704,0.3756906077348066,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EClassifierImpl.java
"// ***** Really?","default:",6127,0.7777777777777778,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// If we turn the package into a proxy, ensure that the child classifiers clear their cached container. //","if (uri != null && eClassifiers != null)",195,0.9885057471264368,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EPackageImpl.java
"// if not shorthands... // Here is no '-'.","None",None,None,None
"// *** It is not a bug.","}",5958,0.4594594594594595,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Update the workbench's knowledge of the file's contents. //","file.refreshLocal(1, monitor);",1881,0.9807692307692307,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping.ui/src/org/eclipse/emf/mapping/presentation/MappingEditor.java
"/*20D0..20FF;*/","/*2100..214F;*/ "Letterlike Symbols",",6491,0.5263157894736842,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// **** We can not optimize.","} else {",6265,0.71875,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// infinity","ret = -1;",6152,0.6666666666666666,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// When this.child.getMaxLength() < 0, // this returns minus value","return this.getMax() * this.getChild(0).getMaxLength();",6163,0.7472527472527473,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"//blockNames in UNICODE 3.1 that supported by XML Schema REC","private static final String[] blockNames = {",6447,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// This is the page for the table tree viewer. //","ViewerPane viewerPane =",1311,0.9736842105263158,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping.ecore2xml.ui/src/org/eclipse/emf/mapping/ecore2xml/presentation/Ecore2XMLEditor.java
"// Skip if there's an equality filter and the values aren't equal. //","if (pullRule.getEqualityFeature() != null)",669,0.9821428571428571,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/JMerger.java
"// The methods were matched by a process that doesn't consider the // parameters","None",None,None,None
"/*02B0..02FF;*/","/*0300..036F;*/ "Combining Diacritical Marks",",6454,0.5454545454545454,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Look for the annotation with the matching source. //","for (Object object : eContents())",408,0.9777777777777777,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EModelElementImpl.java
"// We can't find the class, so we don't want this class loader, // but instead want the last result that was able to load the class. //","break;",334,0.6748466257668712,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EPackageRegistryImpl.java
"// Don't push method annotations into redirected methods. //","None",None,None,None
"// Create a resource for this file. //","Resource resource = resourceSet.createResource(fileURI);",143,0.9666666666666667,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/DynamicModelWizard.java
"// This just notifies those things that are affected by the section. //","public void selectionChanged(SelectionChangedEvent selectionChangedEvent)",963,0.9827586206896551,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreEditor.java
"/*0C80..0CFF;*/","/*0D00..0D7F;*/ "Malayalam",",6470,0.75,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"/*0C00..0C7F;*/","/*0C80..0CFF;*/ "Kannada",",6469,0.7692307692307693,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Ensures that this editor will only display the page's tab // area if there are more than one page //","getContainer().addControlListener",1181,0.7518796992481203,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreEditor.java
"/*0E80..0EFF;*/","/*0F00..0FFF;*/ "Tibetan",",6474,0.8333333333333334,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"/*0D80..0DFF;*/","/*0E00..0E7F;*/ "Thai",",6472,0.75,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"/*0E00..0E7F;*/","/*0E80..0EFF;*/ "Lao",",6473,0.8108108108108109,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"/*0F00..0FFF;*/","/*1000..109F;*/ "Myanmar",",6475,0.75,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"/*13A0..13FF;*/","/*1400..167F;*/ "Unified Canadian Aboriginal Syllabics",",6480,0.7317073170731707,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"/*20A0..20CF;*/","/*20D0..20FF;*/ "Combining Marks for Symbols",",6490,0.625,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"/*1F00..1FFF;*/","/*2000..206F;*/ "General Punctuation",",6487,0.6521739130434783,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"/*1E00..1EFF;*/","/*1F00..1FFF;*/ "Greek Extended",",6486,0.5357142857142857,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"/*2E80..2EFF;*/","/*2F00..2FDF;*/ "Kangxi Radicals",",6506,0.5555555555555556,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Search the local scope for a resolution of the type parameter name. //","LOOP:",3299,0.9830508474576272,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenBaseImpl.java
"// Create the source and target JCompilationUnit. //","sourceCompilationUnit = createCompilationUnitForURI(sourceURI);",1208,0.9772727272727273,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/JMerger.java
"// Set the instance type name instead, since that will also set the instance class name  // but this way will make undo restore the current instance type name correctly //","editingDomain.getCommandStack().execute",127,0.6792452830188679,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.edit/src/org/eclipse/emf/ecore/provider/EClassifierItemProvider.java
"/*25A0..25FF;*/","/*2600..26FF;*/ "Miscellaneous Symbols",",6502,0.625,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// You can only add type arguments if there are type parameters not yet used up. //","return",413,0.9848484848484849,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.edit/src/org/eclipse/emf/ecore/provider/EGenericTypeItemProvider.java
"// Only if you are contained by a generic type can you have bounds, // and only if there is no classifier or type parameter // and in that case the lower bound is returned only if that's the one that's set. //","eGenericType.getELowerBound() != null ?",428,0.48868778280542985,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.edit/src/org/eclipse/emf/ecore/provider/EGenericTypeItemProvider.java
"// apply changes using ASTRewrite //","edits.apply(targetDoc);",321,0.9666666666666667,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJCompilationUnit.java
"// Don't use the normal reference copying for eOpposite. //","@Override",379,0.9795918367346939,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.edit/src/org/eclipse/emf/ecore/provider/EReferenceItemProvider.java
"// Write a signature that will be obviously corrupt // if the binary contents end up being UTF-8 encoded // or altered by line feed or carriage return changes. //","None",None,None,None
"// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //","None",None,None,None
"// If an input stream can't be created, ensure that the resource is still considered loaded after the failure, // and do all the same processing we'd do if we actually were able to create a valid input stream. //","None",None,None,None
"// apply additional edits like replacing or commenting out nodes //","TextEdit additionalEdits = null;",346,0.9821428571428571,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJCompilationUnit.java
"/*2F00..2FDF;*/","/*2FF0..2FFF;*/ "Ideographic Description Characters",",6507,0.6382978723404256,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Build a list of the keys //","ArrayList<String> keys = new ArrayList<String>();",764,0.9545454545454546,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// Do the extent processing that should have been done for the root but was actualljy done for the document root. //","if (deferredExtent != null)",1415,0.9893617021276596,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"/*31A0..31BF;*/","/*3200..32FF;*/ "Enclosed CJK Letters and Months",",6515,0.6122448979591837,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// replace existing InsertEdit at this position // (case when previous node ends at the same position that current node starts at)","InsertEdit existingEdit = addedInsertEdits.get(lineBreakEdit.getOffset());",781,0.5466666666666666,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJCompilationUnit.java
"/*30A0..30FF;*/","/*3100..312F;*/ "Bopomofo",",6511,0.7317073170731707,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"/*FEFF..FEFF;*/","/*FF00..FFEF;*/ "Halfwidth and Fullwidth Forms",",6531,0.7317073170731707,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"/*AC00..D7A3;*/","/*E000..F8FF;*/ "Private Use",",6522,0.625,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Reserve a place to insert xmlns declarations after we know what they all are. //","Object mark;",580,0.9850746268656716,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLSaveImpl.java
"/*FE50..FE6F;*/","/*FE70..FEFE;*/ "Arabic Presentation Forms-B",",6529,0.6,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"/*A490..A4CF;*/","/*AC00..D7A3;*/ "Hangul Syllables",",6521,0.6976744186046512,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"/*4E00..9FFF;*/","/*A000..A48F;*/ "Yi Syllables",",6519,0.5660377358490566,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"/*FE30..FE4F;*/","/*FE50..FE6F;*/ "Small Form Variants",",6528,0.5555555555555556,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// create and try to add dummy edit to find the ReplaceEdit // this should be faster than lookup since underneath of addChild() binary search is used","ReplaceEdit dummyEdit = new ReplaceEdit(nodePosition.getStartPosition() + 1, 0, "");",881,0.5614035087719298,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJCompilationUnit.java
"/*F900..FAFF;*/","/*FB00..FB4F;*/ "Alphabetic Presentation Forms",",6524,0.5084745762711864,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"/*E000..F8FF;*/","/*F900..FAFF;*/ "CJK Compatibility Ideographs",",6523,0.6976744186046512,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"/*FE20..FE2F;*/","/*FE30..FE4F;*/ "CJK Compatibility Forms",",6527,0.5882352941176471,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"/*FB00..FB4F;*/","/*FB50..FDFF;*/ "Arabic Presentation Forms-A",",6525,0.5,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"/*2F800..2FA1F;*/","/*E0000..E007F;*/ "Tags",",6541,0.4657534246575342,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"/*1D100..1D1FF;*/","/*1D400..1D7FF;*/ "Mathematical Alphanumeric Symbols",",6538,0.6666666666666666,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"/*1D000..1D0FF;*/","/*1D100..1D1FF;*/ "Musical Symbols",",6537,0.5666666666666667,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"/*E0000..E007F;*/","//missing 2 private use add manually",6542,0.8292682926829268,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// for all characters","ranges[Character.UNASSIGNED].addRange(0x10000, Token.UTF16_MAX);",6647,0.972972972972973,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// If we're creating a child under an object in a feature map, the selection will be the feature map entry. // We want to replace it with the model object. //","if (this.selection.size() == 1)",208,0.8130841121495327,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/CreateChildCommand.java
"//missing 2 private use add manually","};",6543,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Exit this loop","}",7785,0.8235294117647058,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// [{ASSIGNED}]-[{M},{C}]","base_char.mergeRanges(Token.getRange("ASSIGNED", true));",6865,0.5783132530120482,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Add it to the list and remove it from the other list. //","childrenOfThisFeature.add(o);",1235,0.9777777777777777,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"// Doing this just makes focus go to the default control, not the control that last has focus. // // super.setFocus();","if (currentViewerPane != null)",2001,0.88,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping.ui/src/org/eclipse/emf/mapping/presentation/MappingEditor.java
"// Commands should operate on the values, not their wrappers.  If the command's values needed to be unwrapped, // we'll back get a new CommandParameter. //","CommandParameter oldCommandParameter = commandParameter;",904,0.832579185520362,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"// synchronized // if null","None",None,None,None
"// Subraction","if (base != null)",7775,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// hangul_medial and hangul_final // extras","None",None,None,None
"// This is CONCAT, and new child is CONCAT.","if (tok.type == CONCAT)",7341,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// base_char?","left.addChild(base_char);",6880,0.4444444444444444,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Replace previous token by STRING","buffer = new StringBuffer(2 + nextMaxLength);",7366,0.9836065573770492,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"//System.err.println("Merge '"+previous+"' and '"+tok+"'.");","(">   " + eStructuralFeature.getEContainingClass().getName() + "." + eStructuralFeature.getName() +",4086,0.48,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// CRRIAGE RETURN U+000D","case 't':  c = '\t';  break; // HORIZONTAL TABULATION U+0009",5750,0.6666666666666666,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// \ + c // backsolidus","None",None,None,None
"// LINE FEED U+000A","case 'r':  c = '\r';  break; // CRRIAGE RETURN U+000D",5749,0.6037735849056604,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// if not shorthands...","if (this.read() != T_CHAR || this.chardata != '-') { // Here is no '-'.",5637,0.8163265306122449,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// if - is at the last position of the group","tok.addRange(c, c);",7811,0.9855072463768116,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Here is no '-'.","tok.addRange(c, c);",5638,0.3888888888888889,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// c '-' ']' -> '-' is a single-range.","if (type == T_CHAR && this.chardata == ']')",7809,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// return actucal char","default:",7921,0.8636363636363636,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// HORIZONTAL TABULATION U+0009","//case 'v':  c = 0x0b;  break; // VERTICAL TABULATION U+000B",5751,0.7272727272727273,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Recursion","return;",7345,0.41509433962264153,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Found '-' // Is this '-' is a from-to token?? // Skips '-'","this.next(); // Skips '-'",7805,0.7368421052631579,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Add the binding to the provided hash table: //","into.put(name, value);",528,0.9743589743589743,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETReader.java
"// Create the copy //","EClass metaObject = owner.eClass();",111,0.9375,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/CreateCopyCommand.java
"// If we didn't find authority we need to back up. Attempt to // match against abs_path next.","if (!initializeAuthority(uriSpec.substring(startPos, index))) {",1948,0.784,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Check if we found a resolution for it. //","if (eGenericType.getETypeParameter() == null)",3329,0.9705882352941176,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenBaseImpl.java
"// Otherwise, recursively call ourselves to substitute it in context if necessary. //","result.append(getTypeArgument(context, eGenericType, isImported, isErased));",3339,0.9861111111111112,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenBaseImpl.java
"// Unassigned","ranges[i].addRange(0x10000, Token.UTF16_MAX);",6652,0.46153846153846156,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Add back in the array indices if there are any. //","if (arrayIndices != null)",3344,0.975609756097561,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenBaseImpl.java
"//One PAD  e.g. 3cQ[Pad]","b3 = base64Alphabet[ d3 ];",340,0.5633802816901409,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Just import the name or use it directly. //","result.append(isImported ? getGenModel().getImportedName(instanceTypeName) : instanceTypeName);",3353,0.9722222222222222,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenBaseImpl.java
"//build table of Pi values","if (i == 0x00AB || i == 0x2018 || i == 0x201B || i == 0x201C ||",6587,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"/*FE70..FEFE;*/","/*FEFF..FEFF;*/ "Specials",",6530,0.5172413793103449,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Check if the host is a valid IPv6reference.","if (address.startsWith("[")) {",3009,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"/*0A80..0AFF;*/","/*0B00..0B7F;*/ "Oriya",",6466,0.7317073170731707,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Load the model and if it's not one already considered, e.g., a local version in the workspace, process its GenPackages. //","Resource resource = resourceSet.getResource(uri, true);",654,0.9902912621359223,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero","None",None,None,None
"// IViewPart view = getViewPart(); // titleLabel.setText(view.getTitle()); // titleLabel.setImage(view.getTitleImage());","titleLabel.update();",563,0.4225352112676056,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common.ui/src/org/eclipse/emf/common/ui/ViewerPane.java
"// If we don't already have it, try to get the source early. We can't give // feedback if it's not available yet (this is platform-dependent). //","if (source == null)",264,0.6629213483146067,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/dnd/EditingDomainViewerDropAdapter.java
"// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html","fIANA2JavaMap.put("IBM-37",    "CP037");",1238,0.4580152671755725,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// form integral number of 6-bit groups","if (fewerThan24bits == EIGHTBIT) {",237,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// This implementation was changed to not introduce multi line content.","if (binaryData == null)",183,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"//should be divisible by four","}",286,0.819672131147541,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// remove white spaces","int len = removeWhiteSpace(base64Data);",282,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Add support for Cp1252 and its friends","fIANA2JavaMap.put("WINDOWS-1250",   "Cp1250");",1135,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// This came from trial and error, yielding decent results on all // platforms.  It should be consistent with activate(). //","int x = paddingWidth == 0 ? 3 : paddingWidth;",643,0.6878980891719745,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/celleditor/AdapterFactoryTableTreeEditor.java
"// count characters that's not whitespace","int newSize = 0;",374,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"//No PAD e.g 3cQl","b3 = base64Alphabet[ d3 ];",352,0.8235294117647058,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// proposed addition (see above for details):","fJava2IANAMap.put("CP1047",    "IBM1047");",1363,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
""/* * format validation * * This class encodes/decodes hexadecimal data * @author Jeffrey Rodriguez */"","* @author Sandy Gao",110,0.42857142857142855,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// give up if we couldn't create the command; otherwise, use a // CommandActionDelegate to set the action's text, tool-tip, icon, // etc. or just use the default icon","if (command == null || command == UnexecutableCommand.INSTANCE)",159,0.5396825396825397,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/action/StaticSelectionCommandAction.java
"//titleLabel.setBackground(null, null); // titleLabel.setForeground(null);","titleLabel.addMouseListener",352,0.6728971962616822,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common.ui/src/org/eclipse/emf/common/ui/ViewerPane.java
"// Add ASCII Letters","for (int i = 'A'; i <= 'F'; ++i) {",1568,0.6538461538461539,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// presence of the host (whether valid or empty) means // double-slashes which means generic uri","return (m_host != null);",2954,0.7142857142857143,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Add ASCII Digits and ASCII Hex Numbers","for (int i = '0'; i <= '9'; ++i) {",1563,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"//RFC 2732 added '[' and ']' as reserved characters","private static final int RESERVED_CHARACTERS = 0x01;",1518,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?","// add Java to IANA encoding mappings",1287,0.5121951219512195,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// class EncodingMap","/**********************************************************************",1440,0.972972972972973,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// // Public static methods //","* Adds an IANA to Java encoding name mapping.",1379,0.9130434782608695,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// set rewriter on the new node","newASTJNode.setRewriter(contextNode.getRewriter());",513,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTFacadeHelper.java
"// Add Path Characters","fgLookupTable[';'] |= PATH_CHARACTERS;",1619,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Add Scheme Characters","fgLookupTable['+'] |= SCHEME_CHARACTERS;",1605,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Add Reserved Characters","fgLookupTable[';'] |= RESERVED_CHARACTERS;",1580,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Add Mark Characters","fgLookupTable['-'] |= MARK_CHARACTERS;",1594,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Just use null.","}",1636,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Authority will be everything up to path, query or fragment","char testChar = '\0';",1934,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// find insertion point from returned result (-(insertion point) - 1) // commentIndex is the index of the first element with end position > rangeEndPos","commentIndex = -(commentIndex) - 1;",251,0.6344086021505376,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/CommentAwareSourceRangeComputer.java
"// 6a - get all but the last segment of the base URI path","if (basePath != null && basePath.length() > 0) {",2022,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// check for absolute path - RFC 2396 5.2 #5","if (m_path.length() > 0 &&",2011,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// assume {min,}","max = -1;",5412,0.8484848484848485,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// userinfo is everything up to @","if (p_uriSpec.indexOf('@', start) != -1) {",2132,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// 6c - remove all "./" where "." is a complete path segment","index = -1;",2036,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// through down","}",5364,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// 6b - append the relative URI path","path = path.concat(m_path);",2033,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// port","if (hasPort) {",2171,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// 6d - remove "." if path ends with "." as a complete path segment","if (path.endsWith("/.")) {",2042,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// host is everything up to last ':', or up to  // and including ']' if followed by ':'.","String host = null;",2145,0.6857142857142857,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','","int index = 0;",2246,0.7777777777777778,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Check if the host is well formed.","if (!isWellFormedAddress(host)) {",2231,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Check that userinfo is well formed if it exists.","if (userinfo != null) {",2244,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Points '('.","this.next();",5216,0.4897959183673469,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]","if (((index+1) < uriSpecLen) &&",1928,0.5567010309278351,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Scan opaque part. // opaque_part = uric_no_slash *uric","while (index < end) {",2359,0.5151515151515151,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// fragment - starts with #","if (testChar == '#') {",2420,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Check that that there are no more than three digits // in this segment.","else if (++numDigits > 3) {",3115,0.8461538461538461,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum","// RFC 2396 states that hostnames take the form described in",3033,0.4530386740331492,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// // Constants //","/** Character flags. */",3505,0.8461538461538461,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// RFC 1034: Labels must be 63 characters or less.","else if (++labelCharCount > 63) {",3063,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric","char testChar;",3044,0.6935483870967742,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Registry based authority.","else {",2482,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Check if string is a potential match for IPv6reference.","if (!(addrLength > 2 && address.charAt(0) == '['",3156,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Fill 3 of value (byte) 49","CHARS[38] = 1;",3557,0.5641025641025641,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Check that this segment is not greater than 255.","else if (numDigits == 3) {",3120,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Address must contain 128-bits of information.","else if (index == end) {",3170,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Fill 15 of value (byte) -19","CHARS[1743] = 33;",3688,0.5517241379310345,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Scan hex sequence before possible '::' or IPv4 address.","index = scanHexSequence(address, index, end, counter);",3165,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());","return;",122,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/provider/ComplexTypeConverterItemProvider.java
"// Trailing zeros will fill out the rest of the address.","if (index == end) {",3182,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// 3. Scan hex sequence after '::'.","int prevCount = counter[0];",3199,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// This could be '::'.","if (numDigits == 0 || ((index+1 < end) && address.charAt(index+1) == ':')) {",3242,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// which ASCII characters need to be escaped","private static boolean gNeedEscaping[] = new boolean[128];",3380,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// There can be at most 4 hex digits per group.","else if (++numDigits > 4) {",3257,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// If encoding happened, create a new string; // otherwise, return the orginal one.","if (buffer.length() != len)",3468,0.7037037037037037,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Paint over the selected padding spaces with the // background colour.  On GTK, the whole item, not just // the text, is selected, so we don't do this. //","if (!isGTK())",171,0.5,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common.ui/src/org/eclipse/emf/common/ui/viewer/ExtendedTableTreeViewer.java
"// for each character in the anyURI","int i = 0;",3417,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71","None",None,None,None
"// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19","None",None,None,None
"// Fill 53 of value (byte) -19","CHARS[383] = 33;",3589,0.5647058823529412,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19","None",None,None,None
"// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33","None",None,None,None
"//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());","return;",135,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/provider/MappingRootItemProvider.java
"//MappingPackage ePackage = ((FunctionNamePair)msg.getNotifier()).ePackageMapping();","MappingPackage ePackage = MappingPackage.eINSTANCE;",110,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/provider/FunctionNamePairItemProvider.java
"// Fill 20 of value (byte) -19","CHARS[930] = 33;",3615,0.5647058823529412,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Fill 10 of value (byte) -71","CHARS[58] = 61;",3562,0.5783132530120482,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Fill 44 of value (byte) -19","CHARS[975] = 33;",3617,0.5647058823529412,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// for Ecore or something that explicitly extends it, we need to exclude // EObject, which is already handled by the default case","List<GenClass> result =",454,0.718562874251497,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenClassImpl.java
"// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33","None",None,None,None
"// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33","None",None,None,None
"// We assume that the rootExtendsClass already implements it. //","if (extendsClass != null && !rootImplementsInterface.equals(extendsClass.getGenModel().getRootImplementsInterface()))",541,0.9814814814814815,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenClassImpl.java
"// Fill 12 of value (byte) -19","CHARS[1037] = 33;",3631,0.5517241379310345,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// There needs to be another URL protocol right after the archive protocol, and not a "/". //","if (start > limit || specification.charAt(start) == '/')",91,0.9866666666666667,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/archive/Handler.java
"// Fill 66 of value (byte) -19","CHARS[1104] = 33;",3633,0.5517241379310345,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Fill 31 of value (byte) -19","CHARS[247] = 33;",3581,0.5647058823529412,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Fill 36 of value (byte) -19","Arrays.fill(CHARS, 497, 500, (byte) 33 ); // Fill 3 of value (byte) 33",3593,0.5647058823529412,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// there is anything else but comma after constant - insert line break","return new InsertEdit(i, createLineBreakString(lineInfo.getOffset(), false));",1261,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJCompilationUnit.java
"// Fill 23 of value (byte) -87","CHARS[1466] = 33;",3661,0.5517241379310345,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// When an object is controlled, the only change will be in the new resource's contents, so it must // refresh the whole viewer to hit the object's label. //","case Resource.RESOURCE__CONTENTS:",170,0.7751196172248804,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/resource/ResourceItemProvider.java
"// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87","None",None,None,None
"// since enum constants are separated by commas, they should always have the default range // we can not extend their range or reduce it","return node.getNodeType() != ASTNode.ENUM_CONSTANT_DECLARATION && !nodesWithDefaultRange.contains(node);",723,0.8085106382978723,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/CommentAwareSourceRangeComputer.java
"// Fill 4 of value (byte) -19","CHARS[1748] = 33;",3690,0.5411764705882353,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33","None",None,None,None
"// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());","return;",115,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/provider/FunctionNamePairItemProvider.java
"//HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());","return;",115,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/provider/FunctionNamePairItemProvider.java
"// Stop if the next item will be out the event bounds. // The event bounds values are also misaligned on GTK. //","fixForGC(itemBounds);",200,0.6466165413533834,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common.ui/src/org/eclipse/emf/common/ui/viewer/ExtendedTableTreeViewer.java
"// check if given node should use the default range (i.e. node removed), // or extended range (i.e. surrounding nodes removed)","if (shouldHaveExtendedRange(node))",752,0.7228915662650602,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/CommentAwareSourceRangeComputer.java
"// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33","None",None,None,None
"//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());","}",730,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/provider/MappingItemProvider.java
"// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33","None",None,None,None
"// Fill 8 of value (byte) -87","Arrays.fill(CHARS, 1619, 1632, (byte) 33 ); // Fill 13 of value (byte) 33",3679,0.5411764705882353,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19","None",None,None,None
"// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19","None",None,None,None
"// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33","None",None,None,None
"// Fill 22 of value (byte) -19","CHARS[2473] = 33;",3722,0.5517241379310345,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33","None",None,None,None
"// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87","None",None,None,None
"// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19","None",None,None,None
"// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87","None",None,None,None
"// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33","None",None,None,None
"// Fill 8 of value (byte) -19","CHARS[329] = 33;",3587,0.5542168674698795,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Go directly to the right entry in the zip file,  // get the stream,  // and wrap it so that closing it closes the zip file. //","final ZipFile zipFile = new ZipFile(nestedURL.substring(5));",233,0.5714285714285714,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/archive/ArchiveURLConnection.java
"// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87","None",None,None,None
"// Build list of wrapped children from the appropriate adapters. //","for (Object owner : getOwners())",2909,0.9821428571428571,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"// Parse as an attribute=value:","//",583,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETReader.java
"// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19","None",None,None,None
"//fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());","}",735,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/provider/MappingItemProvider.java
"// If this entry isn't the end marker  // and isn't the matching one that we are replacing... //","ZipEntry zipEntry = zipInputStream.getNextEntry();",408,0.5607476635514018,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/archive/ArchiveURLConnection.java
"// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19","None",None,None,None
"// Simple cases: no mix-ins for no inheritance or for a single base class. //","List<EClass> superTypes = getEcoreClass().getESuperTypes();",1359,0.9838709677419355,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenClassImpl.java
"// Fill 2 of value (byte) 33","CHARS[93] = 1;",3570,0.5641025641025641,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Mix-ins are everything after the base class. //","int i = allBases.indexOf(baseGenClass) + 1;",1378,0.975609756097561,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenClassImpl.java
"// This is for the in2out feature. //","itemPropertyDescriptors.add",74,0.9655172413793104,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/provider/ComplexTypeConverterItemProvider.java
"// Strips an escaped white space.","if (ch == '\\' && offset < len) {",630,0.875,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Try to transfer it by reading the contents of the temporary file  // and writing them to the output stream of the delegate. //","InputStream inputStream = null;",527,0.6918238993710691,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/archive/ArchiveURLConnection.java
"// If this is class has mixed content, the mixed feature should always be included, even if inherited, and come first. //","final GenFeature mixed = getMixedGenFeature();",1838,0.98989898989899,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenClassImpl.java
"// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19","None",None,None,None
"// Add all other create child features that this item provider is responsible for. //","result.addAll(collectGenFeatures(getProviderImplementedGenClasses(), null,",1847,0.9857142857142858,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenClassImpl.java
"// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19","None",None,None,None
"// Either execute or redo the command, as appropriate. //","Command command = commands.next();",262,0.9787234042553191,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/command/StrictCompoundCommand.java
"// Fill 8 of value (byte) 33","Arrays.fill(CHARS, 192, 215, (byte) -19 ); // Fill 23 of value (byte) -19",3578,0.55,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// isSpace(int):boolean","/**",4286,0.9777777777777777,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Fill 4 of value (byte) 33","Arrays.fill(CHARS, 506, 536, (byte) -19 ); // Fill 30 of value (byte) -19",3596,0.55,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Fill 40 of value (byte) 33","CHARS[4510] = -19;",4069,0.5476190476190477,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33","None",None,None,None
"// Fill 9 of value (byte) 33","Arrays.fill(CHARS, 461, 497, (byte) -19 ); // Fill 36 of value (byte) -19",3592,0.55,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Skip over the command that threw the exception. //","commands.previous();",276,0.9767441860465116,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/command/StrictCompoundCommand.java
"// This is for the out2in feature. //","itemPropertyDescriptors.add",83,0.9655172413793104,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/provider/ComplexTypeConverterItemProvider.java
"// isMarkup(int):boolean","/**",4276,0.9787234042553191,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Only return the feedback for an executable command. //","return isExecutable ? feedback : FEEDBACK_SELECT;",904,0.9787234042553191,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/DragAndDropCommand.java
"// isContent(int):boolean","/**",4266,0.9795918367346939,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// This is kind of tricky. // If the saveIndex was in the redo part of the command list which has now been wiped out, // then we can never reach a point where a save is not necessary, not even if we undo all the way back to the beginning. //","if (saveIndex >= top)",105,0.1990521327014218,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/command/BasicCommandStack.java
"// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33","None",None,None,None
"// isInvalid(int):boolean","/**",4256,0.9795918367346939,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33","None",None,None,None
"// isValid(int):boolean","/**",4247,0.9777777777777777,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Return whether there is a list, the value is in the list, and index is in range... //","boolean result =",200,0.9855072463768116,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/MoveCommand.java
"// isName(int):boolean","/**",4308,0.9767441860465116,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// replace arguments that match the name of the fields with the initializer value of the field //","@SuppressWarnings("unchecked")",289,0.9873417721518988,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTNodeConverter.java
"// isNCName(int):boolean","/**",4330,0.9787234042553191,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// encodings","/**",4421,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
""/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */"","* Check to see if a string is a valid Name according to [5]",4344,0.926829268292683,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// isPubid(int):boolean","/*",4341,0.9777777777777777,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
""/*      * [7] Nmtoken ::= (NameChar)+      */"","* Check to see if a string is a valid Nmtoken according to [7]",4396,0.8928571428571429,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
""/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */"","* Check to see if a string is a valid NCName according to [4]",4370,0.47619047619047616,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// Set the range so that we re-check when we get into the other half. //","if (location <= 0.50)",322,0.9821428571428571,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/DragAndDropCommand.java
"//order constants","public static final short LESS_THAN     = -1;",4483,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// class XMLChar","public static class TypeValidator {",4479,0.9655172413793104,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// interface TypeValidator","}",4501,0.9795918367346939,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// If this looks like a feature getter, a kind property will allow it to be recognized properly. //","if (getGenParameters().isEmpty() &&",708,0.9875,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenOperationImpl.java
"// indicate that initializer has been changed // (required to not overwrite initializer if variables are split later)","this.initializer = initializer;",249,0.5611510791366906,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJField.java
"// Remove from by position in reverse order. //","for (int i = 0; i < count; ++i)",873,0.9736842105263158,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/notify/impl/DelegatingNotifyingListImpl.java
"// keep comments between nodes when removing or moving nodes","rewriter.setTargetSourceRangeComputer(new CommentAwareSourceRangeComputer(astCompilationUnit, contents));",289,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTFacadeHelper.java
"// Type parameter casts can't be checked. //","if (eGenericType.getETypeParameter() != null)",516,0.9722222222222222,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenTypedElementImpl.java
"// Break the cycle. //","return;",178,0.9411764705882353,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETCompiler.java
"// This ensures that we are dealing with actual MOF objects. //","commandParameter.collection = (Collection<?>)substituteMappedObject((Mapping)object, commandParameter.getCollection());",759,0.9803921568627451,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/provider/MappingItemProvider.java
"// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1","public static final int getDigit(char ch) {",4495,0.8591549295774648,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"//Ecore2XMLSwitch","None",None,None,None
"// Check whether there is an opposite that needs attention. //","if (eReference.getEOpposite() != null)",601,0.9803921568627451,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/SetCommand.java
"// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."","index = 1;",2047,0.8057553956834532,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/DataValue.java
"// The byte is automatically widened into an int, with sign extension, // for shifting.  This can introduce 1's to the left of the byte, which // must be cleared by masking before looking up the hex digit. //","result.append(HEX_DIGITS[(b >> 4) & 0x0F]);",2966,0.5175438596491229,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// buttonComposite has to be the first child of composite because subclasses are expecting this.","Composite buttonComposite = new Composite(composite, SWT.NONE);",160,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common.ui/src/org/eclipse/emf/common/ui/dialogs/ResourceDialog.java
"// This is to handle a genmodel produced by rose2genmodel. //","String modelDirectory = genModel.getModelDirectory();",363,0.98,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/Generator.java
"// If the object is an input or output object, then use it. //","if (mappingDomain.getMappingRoot().isInputObject(selectedElement) ||",2153,0.9791666666666666,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping.ui/src/org/eclipse/emf/mapping/presentation/MappingEditor.java
"// Process the children recursively. //","Object [] selectedElementChildren = mappingDomain.getChildren(selectedElement).toArray();",2162,0.9696969696969697,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping.ui/src/org/eclipse/emf/mapping/presentation/MappingEditor.java
"// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33","None",None,None,None
"// Common to all URI types.","private final int hashCode;",140,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Remove variables since the plugin.xml should provide the complete path information. //","for (Iterator<IClasspathEntry> i = classpathEntries.iterator(); i.hasNext(); )",848,0.9868421052631579,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/Generator.java
"// Look for a single-char work delimiter: //","if (ch == '=' || ch == endTagFinalChar || ch == '"' || ch == '\'' || ch == '/')",693,0.9722222222222222,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETReader.java
"//SimpleAnyTypeImpl","None",None,None,None
"// oldWidth = table.getClientArea().width;","TableColumn objectColumn = new TableColumn(table, SWT.NONE);",2727,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping.ui/src/org/eclipse/emf/mapping/presentation/MappingEditor.java
"// The lower-cased schemes that will be used to identify archive URIs.","private static final Set<String> archiveSchemes;",202,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Special segment values interpreted at resolve and resolve time.","private static final String SEGMENT_EMPTY = "";",212,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Consult the generator option for backwards compatibility. //","@SuppressWarnings("deprecation")",441,0.9814814814814815,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/generator/AbstractGeneratorAdapter.java
"// Optimize the performance of applying the import regular  // expressions locating the last import line //","String contents = compilationUnit.getContents();",316,0.7142857142857143,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/JPatternDictionary.java
"// Don't do replacement if we just did one, or if previous line // ended with a semicolon. //","if (current != 0 && (begin <= current || string.charAt(begin - 1) == ';'))",742,0.8095238095238095,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/util/CodeGenUtil.java
"// Don't do replacement if previous line ended with a comment. //","for (int i = begin - 1; i >= current; --i)",750,0.9811320754716981,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/util/CodeGenUtil.java
"// Returns the upper half bitmask for all the ASCII characters in the given // string.","private static long highBitmask(String chars)",348,0.9323308270676691,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// We can't undo it, so we'd better give up. //","result = false;",197,0.9722222222222222,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/command/StrictCompoundCommand.java
"// If the path isn't within the root of the archive,  // create a new URI for the folder location of the archive,  // so we can look in the folder that contains it. //","uri = URI.createURI(uri.authority()).trimSegments(1);",450,0.48554913294797686,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/EMFPlugin.java
"// Platform.resolve() doesn't work if the project is encoded. //","uriWithoutFragmentToString = URI.decode(uriWithoutFragmentToString);",203,0.9814814814814815,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/CommonPlugin.java
"// There must be at least one archive path. //","int archiveSeparator = specification.indexOf("!/", start);",100,0.9722222222222222,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/archive/Handler.java
"// There should be at least one archive separator per scheme. //","archiveSeparator = specification.indexOf("!/", archiveSeparator + 2);",112,0.9807692307692307,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/archive/Handler.java
"// Parse to extract the archives that will be delegated to the nested URL based on the number of schemes at the start. //","for (int i = start, end = urlString.indexOf("/") - 1; (i = urlString.indexOf(":", i)) < end; )",167,0.9896907216494846,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/archive/ArchiveURLConnection.java
"// Skip a scheme for the archive accessor to be handled directly here. //","start = ++i;",173,0.9830508474576272,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/archive/ArchiveURLConnection.java
"// Create the delegate URL. //","String nestedURL = getNestedURL();",200,0.9583333333333334,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/archive/ArchiveURLConnection.java
"// The cutoff point to the next archive. //","int archiveSeparator = urlString.indexOf(nestedURL) + nestedURL.length();",204,0.9705882352941176,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/archive/ArchiveURLConnection.java
"//missing Specials add manually // 84","/*10300..1032F;*/ "Old Italic",   // 84",6533,0.9333333333333333,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// Construct the input stream in a special efficient way for case of a file scheme. //","InputStream inputStream;",209,0.9855072463768116,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/archive/ArchiveURLConnection.java
"// Just get the stream from the URL. //","inputStream =  createInputStream(nestedURL);",215,0.9666666666666667,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/archive/ArchiveURLConnection.java
"// The name to be used for the entry. //","String entry =",221,0.9666666666666667,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/archive/ArchiveURLConnection.java
"// Skip over this archive path to the next one, since we are handling this one special. //","archiveSeparator = nextArchiveSeparator;",228,0.9861111111111112,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/archive/ArchiveURLConnection.java
"// Loop over the archive paths. //","LOOP:",256,0.9629629629629629,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/archive/ArchiveURLConnection.java
"// The entry name to be matched. //","String entry =",263,0.9629629629629629,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/archive/ArchiveURLConnection.java
"// Wrap the input stream as a zip stream to scan it's contents for a match. //","ZipInputStream zipInputStream = new ZipInputStream(inputStream);",270,0.9836065573770492,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/archive/ArchiveURLConnection.java
"// Skip to the next archive path and continue the loop. //","archiveSeparator = nextArchiveSeparator;",285,0.9782608695652174,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/archive/ArchiveURLConnection.java
"// Create the delegate URL //","final String nestedURL = getNestedURL();",337,0.9565217391304348,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/archive/ArchiveURLConnection.java
"// Record the input and output streams for closing in case of failure so that handles are not left open. //","InputStream sourceInputStream =  null;",346,0.9883720930232558,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/archive/ArchiveURLConnection.java
"// The most deeply nested output stream that will be returned wrapped as the result. //","ZipOutputStream zipOutputStream;",374,0.9859154929577465,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/archive/ArchiveURLConnection.java
"// A buffer for transferring archive contents. //","final byte [] bytes = new byte [4096];",378,0.975609756097561,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/archive/ArchiveURLConnection.java
"// The name that will be used as the archive entry. //","String entry =",388,0.9761904761904762,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/archive/ArchiveURLConnection.java
"// Wrap the current result as a zip stream, and record it for loop-based recursion. //","zipOutputStream = null;",395,0.9857142857142858,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/archive/ArchiveURLConnection.java
"// Loop over the entries in the zip stream. //","while (zipInputStream != null && zipInputStream.available() >= 0)",404,0.9722222222222222,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/archive/ArchiveURLConnection.java
"// Transfer the entry and its contents. //","if (timeStamp != -1 && match && nextArchiveSeparator < 0)",430,0.9705882352941176,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/archive/ArchiveURLConnection.java
"// Find the next archive path and continue "recursively" if there is one. //","archiveSeparator = nextArchiveSeparator;",445,0.9838709677419355,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/archive/ArchiveURLConnection.java
"// Get the Java literal expression for the value. //","if (value == null) return "null";",1158,0.9761904761904762,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenDataTypeImpl.java
"// Create no entry since we are deleting and return immediately. //","outputZipEntry = null;",456,0.9818181818181818,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/archive/ArchiveURLConnection.java
"// Ensure that it won't be closed in the finally block. //","tempOutputStream = null;",483,0.9782608695652174,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/archive/ArchiveURLConnection.java
"// result = new XMLResource.XMLInfoImpl(); // result.setXMLRepresentation(XMLResource.XMLInfo.UNSPECIFIED);","ecoreToXMLInfo.put(element, result);",112,0.5467625899280576,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLMapImpl.java
"// Wrap the deepest result so that on close, the results are finally transferred. //","final boolean deleteRequired = sourceInputStream != null;",487,0.9855072463768116,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/archive/ArchiveURLConnection.java
"// Make sure we close only once. //","if (!isClosed)",498,0.9629629629629629,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/archive/ArchiveURLConnection.java
"// Close for real so that the temporary file is ready to be read. //","super.close();",504,0.9811320754716981,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/archive/ArchiveURLConnection.java
"// Make sure they are closed no matter what bad thing happens. //","if (inputStream != null)",543,0.9807692307692307,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/archive/ArchiveURLConnection.java
"// Close in case of failure to complete. //","if (tempOutputStream != null)",562,0.9705882352941176,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/archive/ArchiveURLConnection.java
"// Close if we created this. //","if (sourceInputStream != null)",569,0.9583333333333334,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/archive/ArchiveURLConnection.java
"// If there are some... //","if (commands.hasNext())",156,0.95,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/command/StrictCompoundCommand.java
"// The termination guard is in the body. //","for (;;)",162,0.9705882352941176,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/command/StrictCompoundCommand.java
"// Otherwise, produce an expression that uses the appropriate factory to create a value from the literal. //","if (literal == null) return "null";",1165,0.9888888888888889,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenDataTypeImpl.java
"// src:    o--------o // sub:      o----o // res:    o-o    o-o // Reuse src(=right res)","// sub:  o------------o",4444,0.4155844155844156,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// If the location indicates after, add one more. //","if (location >= 0.5)",403,0.9761904761904762,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/DragAndDropCommand.java
"// Now is the best time to record isUndoable because later we would have to do all the executes again! // This makes canUndo very simple! //","isUndoable = command.canUndo();",205,0.8426395939086294,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/command/StrictCompoundCommand.java
"// If we can't execute this one, we just can't do it at all. //","result = false;",214,0.9791666666666666,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/command/StrictCompoundCommand.java
"// The most recently processed command will never have been executed. //","commands.previous();",225,0.9833333333333333,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/command/StrictCompoundCommand.java
"// We want to unroll all the effects of the previous commands. //","while (commands.hasPrevious())",229,0.9807692307692307,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/command/StrictCompoundCommand.java
"// Iterate back over the executed commands to undo them. //","while (commands.hasPrevious())",280,0.9791666666666666,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/command/StrictCompoundCommand.java
"// Clear the list past the top. //","for (Iterator<Command> commands = commandList.listIterator(top + 1); commands.hasNext(); commands.remove())",82,0.9615384615384616,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/command/BasicCommandStack.java
"// If this owned object is one from the collection... //","if (containsExact(collection, ownedObject))",272,0.9777777777777777,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/RemoveCommand.java
"// oldValue = owner.eGet(feature);","}",534,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/SetCommand.java
"// Record the successfully executed command. //","None",None,None,None
"// extend to include the comment at the same line as the position  // if there is nothing between the position and the comment","int firstTrailingCommentIndex = findFirstCommentInRangeIndex(position, Integer.MAX_VALUE);",545,0.6838709677419355,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/CommentAwareSourceRangeComputer.java
"// note that string place holder adjusts indentation // to correct this trackAndReplace method is used below","ASTNode newASTNode = rewriter.createStringPlaceholder(contents, originalASTNode.getNodeType());",506,0.656934306569343,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTFacadeHelper.java
"// This forces isSaveNeded to always be true. //","saveIndex = -2;",111,0.9743589743589743,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/command/BasicCommandStack.java
"// Only if we are at the remembered index do we NOT need to save. // //return top != saveIndex;","if (saveIndex < -1)",300,0.8031496062992126,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/command/BasicCommandStack.java
"// Clear the list. //","for (Iterator<Command> commands = commandList.listIterator(); commands.hasNext(); commands.remove())",203,0.9375,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/command/BasicCommandStack.java
"//iri = iri || containsNonASCII(segments[i]);","}",1020,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"//  Remember where we are now. //","saveIndex = top;",289,0.96,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/command/BasicCommandStack.java
"// This is the default return value. //","boolean result = false;",661,0.967741935483871,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/DragAndDropCommand.java
"// <p>A valid query may be null or contain any allowed URI characters.","//return value == null || validate(value, URIC_HI, URIC_LO, true, true);",1272,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Compute the GeneratorData for the given object and its children, then for the parents of the given object. //","List<GeneratorData> childrenData = getGeneratorData(object, projectType, forGenerate, true, false, objects);",412,0.9891304347826086,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/generator/Generator.java
"// If the base package isn't set but there is a parent package, us it's information instead. //","String result = getBasePackageGen();",650,0.987012987012987,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenPackageImpl.java
"//XMLTypeValidator","None",None,None,None
"//MappingPackage ePackage = ((ComplexTypeConverter)object).ePackageMapping();","MappingPackage ePackage = MappingPackage.eINSTANCE;",71,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/provider/ComplexTypeConverterItemProvider.java
"//XMLTypeResourceImpl","None",None,None,None
"// Ensure that the map for Ecore is not repeatedly populated and that Property maps to EReference rather than EAttribute. //","if (nameToClassifierMap == null)",147,0.9902912621359223,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/EMOFExtendedMetaData.java
"// Iterate forward over the undone commands to redo them. //","while (commands.hasNext())",343,0.9795918367346939,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/command/CompoundCommand.java
"// This ensures that these useless state variables at least reflect the right value. //","isPrepared = true;",42,0.9861111111111112,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/command/IdentityCommand.java
"// Copy to a list and allocate positions. //","BasicEList<Object> list = new BasicEList<Object>(collection);",775,0.9714285714285714,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/notify/impl/DelegatingNotifyingListImpl.java
"// Give all generator adapters the chance to do tear down. //","for (int i = 0; i < preIndex; i++)",624,0.9795918367346939,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/generator/Generator.java
"// Ignore derived features. //","EStructuralFeature feature = eClass.getEStructuralFeature(i);",2166,0.96,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// end setting whole list","else if (eReference.getEOpposite() != null)",192,0.9767441860465116,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/SetCommand.java
"// If we aren't simply removing all the old values... //","if (!removedValues.equals(oldValues))",130,0.9777777777777777,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/SetCommand.java
"// Determine the values that will remain and move them into the right order, if necessary. //","List<Object> remainingValues = new BasicEList.FastCompare<Object>(oldValues);",141,0.9868421052631579,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/SetCommand.java
"// If there are values to remove, append a command for them. //","if (!removedValues.isEmpty())",134,0.98,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/SetCommand.java
"// Look through all the references... //","LOOP:",1040,0.9696969696969697,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHandler.java
"// Is the feature an attribute of the owner... //","if (eMetaObject.getEAllStructuralFeatures().contains(feature))",507,0.9743589743589743,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/SetCommand.java
"// Don't set the type if it's already set. //","else if (feature == EcorePackage.Literals.ETYPED_ELEMENT__ETYPE)",84,0.9714285714285714,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/EMOFHelperImpl.java
"// ((value != null)","Command addCommand =",263,0.9696969696969697,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/SetCommand.java
"// Add the collection //","dropCommand = AddCommand.create(domain, parent, null, collection, index);",642,0.9473684210526315,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/DragAndDropCommand.java
"// Get the owner's meta object. //","EClass eMetaObject = owner.eClass();",503,0.9629629629629629,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/SetCommand.java
"// (value == null) && (oldValue != null) // Remove owner from the old value and unset if necessary. //","Command removeCommand = RemoveCommand.create(domain, oldValue, eOtherEnd, Collections.singleton(owner));",245,0.732824427480916,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/SetCommand.java
"// The classifier of an references's generic type must be a class. //","if (diagnostics == null)",2886,0.9821428571428571,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// (value == null) && (oldValue == null) // A simple set/unset will suffice. //","return domain.createCommand(SetCommand.class, new CommandParameter(owner, eReference, value));",239,0.631578947368421,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/SetCommand.java
"// specify the exact parent of annotations","((ASTJNode<?>)annotation).setParent(this);",225,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTJMember.java
"// If there is an owner. //","if (owner != null)",494,0.95,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/SetCommand.java
"// ((value != null) && (oldValue != null)) // Need a compound command to remove owner from old value and add it to new value. //","CompoundCommand compound = new CompoundCommand(CompoundCommand.LAST_COMMAND_ALL, LABEL, DESCRIPTION);",282,0.7810650887573964,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/SetCommand.java
"// (value != null) && (oldValue == null) // Add owner to new value. //","return addCommand;",276,0.5454545454545454,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/SetCommand.java
"// For consistency, we always set 1-1 container relations from the container end. //","return",296,0.9857142857142858,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/SetCommand.java
"// For a 1-to-1, we can directly create a SetCommand. //","compound.append(domain.createCommand(SetCommand.class, new CommandParameter(value, eOtherEnd, null)));",340,0.9777777777777777,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/SetCommand.java
"// Make sure the container is not being put into a contained object. //","if (result && feature instanceof EReference && ((EReference)feature).isContainment())",575,0.9824561403508771,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/SetCommand.java
"// We can try to do a drop on instead. //","reset();",282,0.9666666666666667,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/DragAndDropCommand.java
"// current document reference: use base path and query","newAbsolutePath = base.hasAbsolutePath();",1969,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// If must be of this type then. //","EClassifier eType = feature.getEType();",511,0.9615384615384616,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/SetCommand.java
"// String getCapPackageID(); // Includes features in other packages that delegate to those in this one.","List<GenFeature> getAllGenFeatures(); // Includes features in other packages that delegate to those in this one.",903,0.45614035087719296,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/GenPackage.java
"// If the other end is single, then we should unset the owner from the old value's opposite feature so that undo will put it back. //","if (value instanceof Collection)",643,0.9905660377358491,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/SetCommand.java
"// If any objects are matched. //","if (count > 0)",865,0.9615384615384616,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/notify/impl/DelegatingNotifyingListImpl.java
"// returns the package in which this feature is defined // returns the name of the feature get method in the package interface (e.g. Company_Name) // returns the name of the feature get method in the package interface (e.g. Xyz.eINSTANCE.getCompany_Name)","None",None,None,None
"// Either set or unset the feature. //","if (ownerList != null)",677,0.9666666666666667,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/SetCommand.java
"// It must be an unsettable feature to be null and considered set. //","copy.eSet(reference, null);",217,0.9818181818181818,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/InitializeCopyCommand.java
"// Set the bounds so that we re-check when we are closer to the middle. //","if (location <= 0.20)",267,0.9827586206896551,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/DragAndDropCommand.java
"// If it's a feature map, we'll need to validate the entry feature and enforce its multiplicity restraints. //","@Override",74,0.23076923076923078,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore.ui/src/org/eclipse/emf/codegen/ecore/genmodel/provider/GenBaseItemProvider.java
"// Either set or unset the old value. //","if (ownerList != null)",714,0.967741935483871,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/SetCommand.java
"// We'd like the owner selected after this undo completes. //","affectedObjects = owner == null ? Collections.EMPTY_SET : Collections.singleton(owner);",423,0.98,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/AddCommand.java
"// Check that the object isn't already in a unique list. //","if (feature.isUnique() && ownerList.contains(object))",333,0.9787234042553191,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/AddCommand.java
"// Check type of object. //","if (!feature.getEType().isInstance(object))",326,0.9523809523809523,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/AddCommand.java
"// Check each object...  //","for (Object object : collection)",320,0.9523809523809523,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/AddCommand.java
"// Remove the collection from the list by index. //","int i = index != CommandParameter.NO_INDEX ? index : ownerList.size() - collection.size();",418,0.975609756097561,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/AddCommand.java
"// If we could do a drop insert operation... //","result = prepareDropInsert();",262,0.972972972972973,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/DragAndDropCommand.java
"// if one is null, they'll all be null","if (reverseReference != null)",242,0.7317073170731707,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/InitializeCopyCommand.java
"// Possible scope for the ChangeRecorder","protected Notifier notifier;",43,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/ChangeCommand.java
"// If the location is near the boundary, we'll start by trying to do a drop insert. //","if (location <= 0.20 || location >= 0.80)",258,0.9852941176470589,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/DragAndDropCommand.java
"// boolean isGenerateEditPlugin(); // boolean isGenerateEditorPlugin();","String getModelProjectDirectory();",2454,0.6530612244897959,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/GenModel.java
"// If there isn't something obviously wrong with the arguments... //","if (owner != null && collection != null && operations != DROP_NONE && operation != DROP_NONE)",254,0.9824561403508771,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/DragAndDropCommand.java
"// We'll default to this. //","boolean result = false;",250,0.9545454545454546,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/DragAndDropCommand.java
"// Create commands to create copies of the children. //","for (EObject child : object.eContents())",233,0.9777777777777777,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/CopyCommand.java
"// Prepare the right type of operation. //","switch (operation)",669,0.9705882352941176,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/DragAndDropCommand.java
"// The feedback is set based on which half we are in. // If the command isn't executable, these values won't be used. //","feedback = location < 0.5 ? FEEDBACK_INSERT_BEFORE : FEEDBACK_INSERT_AFTER;",373,0.60431654676259,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/DragAndDropCommand.java
"// We'll always be wrong for these arguments, so don't bother re-checking. //","lowerLocationBound = 0.0F;",339,0.984375,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/DragAndDropCommand.java
"// We are near the middle, so we'll start by trying to do a drop on. //","// If we can do a drop on operation.",301,0.9814814814814815,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/DragAndDropCommand.java
"// We can reset and try a drop insert instead. //","reset();",317,0.9736842105263158,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/DragAndDropCommand.java
"// If we can do a drop on operation. //","result = prepareDropOn();",305,0.9655172413793104,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/DragAndDropCommand.java
"// Try to create a specific command based on the current desired operation. //","switch (operation)",410,0.984375,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/DragAndDropCommand.java
"// When we match the owner, we're done. //","if (child == owner)",394,0.9696969696969697,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/DragAndDropCommand.java
"// If we can't determine the parent. //","Object parent = getParent(owner);",378,0.967741935483871,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/DragAndDropCommand.java
"// If the dragged objects share a parent... //","else if (children.containsAll(collection))",480,0.972972972972973,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/DragAndDropCommand.java
"// This is the name of the model. //","String genModelName = arguments[index++];",292,0.9629629629629629,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/Generator.java
"// And add the copy. //","dropCommand = AddCommand.create(domain, parent, null, dragCommand.getResult(), index);",597,0.9411764705882353,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/DragAndDropCommand.java
"// Copy the collection //","dragCommand = CopyCommand.create(domain, collection);",578,0.95,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/DragAndDropCommand.java
"// We don't want to copy insert an object before or after itself... //","if (collection.contains(owner))",568,0.9821428571428571,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/DragAndDropCommand.java
"// Just remove the objects and add them. //","dropCommand = AddCommand.create(domain, parent, null, collection, index);",529,0.9705882352941176,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/DragAndDropCommand.java
"// if optimize // if collection","None",None,None,None
"// This can execute if there is an owner list and a collection and the owner list contains all the objects of the collection. //","boolean result =",242,0.9902912621359223,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/RemoveCommand.java
"// If we can't set the collection, try setting use the single value of the collection. //","if (!dropCommand.canExecute() && collection.size() == 1)",799,0.9861111111111112,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/DragAndDropCommand.java
"// Add the value back in the right place. //","ownerList.add(index, value);",292,0.9705882352941176,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/ReplaceCommand.java
"// Determine if the operation is executable. //","return canExecute();",890,0.9743589743589743,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/DragAndDropCommand.java
"// Clean it up. //","reset();",878,0.9230769230769231,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/DragAndDropCommand.java
"// Set the range so that we re-check when we get aren't in the middle. //","lowerLocationBound = 0.2F;",310,0.9824561403508771,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/DragAndDropCommand.java
"// If the operation has changed significantly... //","if (owner != this.owner ||",871,0.9767441860465116,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/DragAndDropCommand.java
"// Reset as in the constructor. //","isPrepared = false;",855,0.9629629629629629,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/DragAndDropCommand.java
"// Thread.dumpStack();","}",213,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/CopyCommand.java
"// Remove the collection of replacements. //","ownerList.removeAll(collection);",288,0.972972972972973,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/ReplaceCommand.java
"// Only return the operation for an executable command. //","return isExecutable ? operation : DROP_NONE;",911,0.9791666666666666,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/DragAndDropCommand.java
"// Just return the cached result. //","return isExecutable;",896,0.9655172413793104,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/DragAndDropCommand.java
"// Insert the collection at the right place. //","ownerList.addAll(index, collection);",276,0.9736842105263158,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/ReplaceCommand.java
"// Make sure each object conforms to the type of the feature. //","for (Object replacement : collection)",251,0.9803921568627451,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/ReplaceCommand.java
"// An extent allows anything to be added. //","return true;",245,0.9714285714285714,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/ReplaceCommand.java
"// Record the position of the value in the owner list. //","None",None,None,None
"// Set the bounds so that we re-check when we get near the other end. //","if (location <= 0.20)",287,0.9821428571428571,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/DragAndDropCommand.java
"// We'd like the replaced selected after this undo replace completes. //","affectedObjects = Collections.singleton(value);",296,0.9833333333333333,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/ReplaceCommand.java
"// Set the arguments again. //","this.owner = owner;",882,0.9583333333333334,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/DragAndDropCommand.java
"// Create a strict compound command to do a copy and then add the result //","command = new StrictCompoundCommand();",136,0.9830508474576272,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/PasteFromClipboardCommand.java
"// We need to check canExecute() here in case prepare() went down the "optimize" path. //","if (command.canExecute())",244,0.9863013698630136,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/PasteFromClipboardCommand.java
"// This will actually execute the copy command in order to check if the add can execute. //","result = command.canExecute();",222,0.9863013698630136,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/PasteFromClipboardCommand.java
"// Create a command to copy the clipboard. //","final Command copyCommand = CopyCommand.create(domain, domain.getClipboard());",140,0.9722222222222222,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/PasteFromClipboardCommand.java
"// This will determine canExecute as efficiently as possible. //","result = optimizedCanExecute();",216,0.9814814814814815,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/PasteFromClipboardCommand.java
"// Create a proxy that will create an add command. //","command.append",145,0.9761904761904762,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/PasteFromClipboardCommand.java
"// Record the index. //","identityIndices[i++] = ownedObjects.previousIndex();",281,0.9444444444444444,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/RemoveCommand.java
"// Remove the object from the collection and add it to the equality list.  //","collection.remove(ownedObject);",307,0.9836065573770492,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/RemoveCommand.java
"// always include fragment, even if null; // no validation needed since all components are from existing URIs","return new URI(true, base.scheme(), newAuthority, newDevice,",1990,0.7651006711409396,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Remove the object from the collection and add it to the identity list. //","removeExact(collection, ownedObject);",276,0.9836065573770492,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/RemoveCommand.java
"// If either list is empty, the result is simply the other. //","if (objects2.isEmpty())",381,0.9795918367346939,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/RemoveCommand.java
"// We'd like the owner selected after this remove completes. //","affectedObjects = owner == null ? Collections.EMPTY_SET : Collections.singleton(owner);",329,0.9807692307692307,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/RemoveCommand.java
"// Merge the lists. //","merge(identity, identityIndices, equality, equalityIndices);",318,0.9411764705882353,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/RemoveCommand.java
"// Object iterators. //","Iterator<Object> iter1 = objects1.iterator();",409,0.9473684210526315,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/RemoveCommand.java
"// Allocate list and array for objects and indices. //","int size = objects1.size() + objects2.size();",397,0.9772727272727273,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/RemoveCommand.java
"// Second pass: match by value equality. //","List<Object> equality = new ArrayList<Object>(collection.size());",292,0.9714285714285714,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/RemoveCommand.java
"// Create view form.     //control = new ViewForm(parent, getStyle());","control = new ViewForm(parent, SWT.NONE);",162,0.4533333333333333,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common.ui/src/org/eclipse/emf/common/ui/ViewerPane.java
"// This will execute the CreateCopyCommand's and then call canExecute on the InitializeCopyCommand's. //","boolean result = super.prepare();",175,0.9888888888888889,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/CopyCommand.java
"// Create commands to create the copy object(s). //","CompoundCommand createCommand = new CompoundCommand(0);",137,0.9761904761904762,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/CopyCommand.java
"// Record it for execution. //","if (!this.appendIfCanExecute(initializeCopyCommand))",159,0.9583333333333334,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/CopyCommand.java
"// Create an initialize copy command for each of the created objects. //","if (copyHelper.decrementDeferredInitializationCount() == 0)",144,0.9830508474576272,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/CopyCommand.java
"// If there is a column object, just convert it to a string. //","else if (object != null)",231,0.9795918367346939,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/AdapterFactoryItemDelegator.java
"// This will call prepare() which will partially execute the command. //","result = super.canExecute();",194,0.9833333333333333,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/CopyCommand.java
"// Create a command to create a copy of the object. //","Command createCopyCommand = CreateCopyCommand.create(domain, object, copyHelper);",219,0.9761904761904762,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/CopyCommand.java
"// If command has no owner specified //","if (commandClass == RemoveCommand.class)",469,0.967741935483871,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/domain/AdapterFactoryEditingDomain.java
"// If the owner parameter is set, we delegate to the owner's adapter //","Object owner = commandParameter.getOwner();",433,0.9824561403508771,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/domain/AdapterFactoryEditingDomain.java
"// If there is an adapter of the correct type... //","IEditingDomainItemProvider editingDomainItemProvider =",456,0.975,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/domain/AdapterFactoryEditingDomain.java
"// Does this part provide an editing domain? //","if (workbenchPart instanceof IEditingDomainProvider)",179,0.9736842105263158,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/action/CommandAction.java
"//MappingFactoryImpl","None",None,None,None
"// Remove and dispose any wrappers for remaining old children. //","if (!oldDelegateChildren.isEmpty())",221,0.9814814814814815,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/DelegatingWrapperItemProvider.java
"//MappingHelperImpl","None",None,None,None
"// Set the mapper to build an XSD2EcoreMappingRoot, if available. //","Bundle xsd2ecorePlugin = Platform.getBundle("org.eclipse.emf.mapping.xsd2ecore");",3021,0.9824561403508771,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenPackageImpl.java
"// We will iterate over the whole collection, removing some as we go. //","ListIterator<Object> remainingObjects = objects.listIterator();",480,0.9827586206896551,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/domain/AdapterFactoryEditingDomain.java
"//MappingStrategyImpl","None",None,None,None
"//TreeSwitch","None",None,None,None
"// Take the first object, and remove it. //","Object object = remainingObjects.next();",484,0.9705882352941176,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/domain/AdapterFactoryEditingDomain.java
"// Get the next object and check if it has the same parent. //","Object otherObject = remainingObjects.next();",503,0.9791666666666666,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/domain/AdapterFactoryEditingDomain.java
"// The parent is null, which implies a top-level removal, so create a self-removing command. //","None",None,None,None
"// We will now create a command with this implied parent //","removeCommand.append(createCommand(RemoveCommand.class, new CommandParameter(parent, null, siblings)));",516,0.9787234042553191,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/domain/AdapterFactoryEditingDomain.java
"// Remove the object and add it as a sibling. //","remainingObjects.remove();",509,0.972972972972973,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/domain/AdapterFactoryEditingDomain.java
"// protected Object labelProvider;","/**",139,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemPropertyDescriptor.java
"// If no object is specified, but an existing sibling is, the object is // its parent. //","if (object == null)",718,0.8923076923076924,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/domain/AdapterFactoryEditingDomain.java
"//return getDefaultValue(attribute.getEType());","return null;",1134,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemPropertyDescriptor.java
"// If any children were added or removed, reset the indices.","if (changed)",237,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/DelegatingWrapperItemProvider.java
"// This URI handler redirect the URI based on the mapping. //","XMLResource.URIHandler uriHandler =",307,0.9795918367346939,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/generator/GenPackageGeneratorAdapter.java
"// This handles IStructuredSelection. //","Class<?> objectClass = object.getClass();",149,0.9714285714285714,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/domain/AdapterFactoryEditingDomain.java
"// We need to check canExecute() in case optimize is true. //","if (super.canExecute())",205,0.9795918367346939,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/CopyCommand.java
"// Add in additional wrappers to search. //","if (useAdditionalWrappers && additionalWrappers != null)",2941,0.9714285714285714,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"// Computes a three-character escape sequence for the byte, appending // it to the StringBuffer.  Only characters up to 0xFF should be escaped; // all but the least significant byte will be ignored.","private static void appendEscaped(StringBuffer result, byte b)",2959,0.5333333333333333,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// If there are objects to populate... //","if (list != null && list.size() > 0)",105,0.9696969696969697,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common.ui/src/org/eclipse/emf/common/ui/celleditor/ExtendedComboBoxCellEditor.java
"// Fill in the result array with labels and re-populate the original list in order. //","None",None,None,None
"// No color is a good default. //","Object result = null;",327,0.96,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/AdapterFactoryItemDelegator.java
"// No font is a good default. //","Object result = null;",290,0.9583333333333334,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/AdapterFactoryItemDelegator.java
"// Otherwise, we could check that the adapter implements interface IItemFontProvider. //","IItemFontProvider itemFontProvider = (IItemFontProvider)adapterFactory.adapt(object, IItemFontProvider.class);",302,0.9868421052631579,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/AdapterFactoryItemDelegator.java
""/*   * Returns <code>true</code> if this URI contains non-ASCII characters;   * <code>false</code> otherwise.   *   * This unused code is included for possible future use...    */"","* @return whether <code>eObject1</code> and <code>eObject2</code> are equal.",2039,0.3314285714285714,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"//public String getUpdateableText(Object object)","/**",506,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/AdapterFactoryItemDelegator.java
"// Iterate over all the set feature to factor each child to the right reference. //","for (EStructuralFeature eStructuralFeature : getSetFeatures(object))",585,0.9850746268656716,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"// Check that the value is type compatible with the entry feature. //","if (getEntryFeature().getEType().isInstance(value))",487,0.9821428571428571,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/FeatureMapEntryWrapperItemProvider.java
"//FunctionPairImpl","None",None,None,None
"// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return needsEncoding(feature) ? encode((String)getEntryValue()) : getEntryValue();","//return value;",711,0.48,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/WrapperItemProvider.java
"//MappingPackage ePackage = ((MappingRoot)msg.getNotifier()).ePackageMapping();","MappingPackage ePackage = MappingPackage.eINSTANCE;",130,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/provider/MappingRootItemProvider.java
"// If the last object was deleted and the selection was in the property sheet view, the obsolete wrapper will // reference past the end of the list. //","List<?> list = (List<?>)result;",720,0.8450704225352113,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/WrapperItemProvider.java
"// Fill in the array with labels. //","for (int i = 0, size = list.size(); i < size; ++i)",154,0.9642857142857143,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common.ui/src/org/eclipse/emf/common/ui/celleditor/ExtendedComboBoxCellEditor.java
""/*      ResourceSet resourceSet = (ResourceSet)object;      childrenFeatures.add(ResourcePackage.eINSTANCE.getResourceSet_Resources());*/"","return resourceSet.getResources();",77,0.5149700598802395,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/resource/ResourceSetItemProvider.java
"// First, try an existing implementation of getChildReference().  This provides backwards compatibility if that // method, now deprecated, was overridden. //","EStructuralFeature oldFeature = getChildReference(object, child);",501,0.8326180257510729,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"// Use an existing getReferenceValue() override. //","if (feature instanceof EReference)",470,0.9772727272727273,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"// If this object is compatible with this reference... //","if (isValidValue(object, child, eReference))",555,0.9787234042553191,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"// Get the index into the list via this call to super. //","int index = ((Integer)super.doGetValue()).intValue();",227,0.9772727272727273,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common.ui/src/org/eclipse/emf/common/ui/celleditor/ExtendedComboBoxCellEditor.java
"// Find the index of a feature containing the sibling, or an equivalent value, in the collection of children // features. //","Collection<? extends EStructuralFeature> childrenFeatures = getAnyChildrenFeatures(object);",779,0.9326424870466321,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"//MappingPackage ePackage = ((FunctionNamePair)object).ePackageMapping();","MappingPackage ePackage = MappingPackage.eINSTANCE;",69,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/provider/FunctionNamePairItemProvider.java
"//XMLTypeFactory","None",None,None,None
"// Add child descriptors contributed by extenders. //","if (adapterFactory instanceof IChildCreationExtender)",766,0.9777777777777777,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"// Set the index of the object value in the list via this call to super. //","int index = list.indexOf(value);",236,0.9827586206896551,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common.ui/src/org/eclipse/emf/common/ui/celleditor/ExtendedComboBoxCellEditor.java
"// Build the collection of new child descriptors. //","Collection<Object> newChildDescriptors = new ArrayList<Object>();",761,0.9767441860465116,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"// If we can open  an input stream, then the plugin.properties is there, and we have a good base URL. //","InputStream inputStream =  new URL(uri.appendSegment("plugin.properties").toString()).openStream();",156,0.9878048780487805,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/DelegatingResourceLocator.java
"// For each CommandParameter with a non-null, multi-valued structural feature... //","DESCRIPTORS_LOOP:",809,0.9861111111111112,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"// Ensure there are no extraneous style bits. //","if ((style & ~(SWT.MULTI | SWT.SINGLE | SWT.OPEN | SWT.SAVE)) != 0)",84,0.9743589743589743,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common.ui/src/org/eclipse/emf/common/ui/dialogs/ResourceDialog.java
"//AnyTypeImpl","None",None,None,None
"// Assign default style bits, if necessary, and ensure none conflict. //","if ((style & SWT.MULTI) == 0 && (style & SWT.SINGLE) == 0)",91,0.9833333333333333,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common.ui/src/org/eclipse/emf/common/ui/dialogs/ResourceDialog.java
"//SpaceType","None",None,None,None
"// find insertion point from returned result (-(insertion point) - 1) // commentIndex is an index of the first element that has start position > rangeStartPos","// commentIndex is the index of the first element with end position > rangeEndPos",251,0.6145833333333334,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/CommentAwareSourceRangeComputer.java
"// Otherwise, if a sibling feature was found, iterate through the children features to find the index of // the child feature...  //","if (siblingFeatureIndex != -1)",837,0.8877551020408163,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"// Iterator over all the child references to factor each child to the right reference. //","for (EStructuralFeature feature : getAnyChildrenFeatures(eObject))",1214,0.9863013698630136,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"// If the child feature follows the sibling feature, the child should be first in its feature. //","if (i > siblingFeatureIndex)",847,0.9873417721518988,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"// Subclasses may override to add descriptors.","public boolean canFinish()",149,0.7301587301587301,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.exporter/src/org/eclipse/emf/exporter/ui/EMFExportWizard.java
"// if there are no groups defined or matched, but the whole pattern matches, // then markup nodes with pattern name //","String markup = dictionaryPattern.getName();",558,0.7875,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/JPatternDictionary.java
"// Is this child in this feature... //","if (getChildFeature(eObject, child) == childFeature)",1393,0.9666666666666667,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"// On Motif, selection color may be set as background. //","Display display = tableItem.getDisplay();",177,0.9782608695652174,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common.ui/src/org/eclipse/emf/common/ui/viewer/ExtendedTableTreeViewer.java
"// Is this object in this feature... //","if (value.contains(o))",1231,0.967741935483871,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
""/*   * Returns the help context id for this property.   */"","Object getHelpContextIds(Object object);",78,0.9302325581395349,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/IItemPropertyDescriptor.java
"// Restore original resource URI values. //","for (Iterator i = set.getResources().iterator(); i.hasNext(); )",3199,0.9722222222222222,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenPackageImpl.java
"// If all the objects are used up by the above, then we can't do the command. //","if (list.isEmpty())",1310,0.9838709677419355,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"// Create a command to set this to null and remove the object from the other list. //","Command setCommand = createSetCommand(domain, eObject, feature, null);",1262,0.9850746268656716,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"// It's just a single value //","final Object value = getFeatureValue(eObject, feature);",1251,0.9565217391304348,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"// Consume the rest of the appropriate children. //","while (children.hasNext())",1387,0.9761904761904762,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"// The "suffix" can actually be a substitution pattern for the package name. //","None",None,None,None
"// Correct the index, if necessary. //","if (index != CommandParameter.NO_INDEX)",1355,0.967741935483871,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"// Create a command for this feature, //","addCommand.append(createAddCommand(domain, eObject, childFeature, childrenOfThisFeature, index));",1404,0.96875,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"// Compute the relative index as best as possible. //","for (EStructuralFeature feature : getAnyChildrenFeatures(eObject))",1492,0.9767441860465116,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"// Create a command for this feature,  //","addCommand.append(createAddCommand(domain, eObject, childFeature, childrenOfThisFeature, index));",1404,0.96875,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"// continue to next case","}",2532,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"// Dispose the child wrappers. //","if (wrappers != null)",1604,0.9629629629629629,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"// All this logic is so that we only create a list if the adapter is set to more than one target. //","if (this.target != null)",1524,0.987012987012987,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"//XMLNamespacePackage","None",None,None,None
"// We can enable the action as indicated by the command, // and we can set all the other values from the command. //","((Action)action).setEnabled(command.canExecute());",258,0.6618705035971223,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/action/CommandAction.java
"// If we have resolved to an EClass but we have an EAttribute, we can change it to be an EReference. //","if (eClassifier instanceof EClass && eStructuralFeature instanceof EAttribute)",370,0.9876543209876543,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"//TreeAdapterFactory","implements",53,0.9473684210526315,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/tree/provider/TreeItemProviderAdapterFactory.java
"// Unwrap value. //","Object oldValue = commandParameter.getValue();",2713,0.9333333333333333,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"// If the adapter factory is composeable, we'll adapt using the root. //","AdapterFactory af = adapterFactory instanceof ComposeableAdapterFactory ?",2903,0.9830508474576272,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"// If a new collection was allocated, continue to populate it. //","if (newCollection != null)",2704,0.9811320754716981,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"// create rewriter to record changes","ASTRewrite rewriter = new ASTRewriteWithRemove(astCompilationUnit.getAST());",286,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTFacadeHelper.java
"// TreeNode","None",None,None,None
"// Delegate the action for this object to the editing domain. //","command = createActionCommand(editingDomain, collection);",254,0.9807692307692307,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/action/CommandAction.java
"// Draw the extra first-column image. //","Rectangle sourceBounds = image.getBounds();",191,0.9696969696969697,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common.ui/src/org/eclipse/emf/common/ui/viewer/ExtendedTableTreeViewer.java
"// If the table is indenting, draw tree lines. //","if (firstTableTreeItem != null && isIndenting())",213,0.9743589743589743,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common.ui/src/org/eclipse/emf/common/ui/viewer/ExtendedTableTreeViewer.java
"//private final boolean iri; //private URI cachedASCIIURI;","// Applicable only to a hierarchical URI.",148,0.6493506493506493,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Is this the label feature? //","boolean label = feature == getLabelFeature(eClass);",739,0.96,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ReflectiveItemProvider.java
"// case Resource.RESOURCE__IS_MODIFIED: // case Resource.RESOURCE__IS_LOADED: // case Resource.RESOURCE__IS_TRACKING_MODIFICATION: // case Resource.RESOURCE__RESOURCE_SET:","case Resource.RESOURCE__ERRORS:",430,0.34196891191709844,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreEditor.java
"// Is this a containment reference child? //","boolean child =",724,0.9722222222222222,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ReflectiveItemProvider.java
"// This ensure that this package itself is traversed even if the reference type is EObject... //","gatherAllMetaData((EObject)object);",572,0.9873417721518988,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ReflectiveItemProvider.java
"// Or a feature map child? //","child |=",731,0.9545454545454546,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ReflectiveItemProvider.java
"// Overlay if the resource is the target for any controlled objects.  //","for (Object o : resource.getContents())",127,0.9827586206896551,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/resource/ResourceItemProvider.java
"// Don't include controlled children here, they'll show up under their container. //","List<EObject> contents = ((Resource)object).getContents();",78,0.9859154929577465,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/resource/ResourceItemProvider.java
"// Resource resource = (Resource)object; // childrenFeatures.add(ResourcePackage.eINSTANCE.getResource_Contents());","return childrenFeatures;",103,0.496551724137931,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/resource/ResourceItemProvider.java
"//TreeFactoryImpl","None",None,None,None
"//TreePackage","None",None,None,None
"//TreeNodeImpl","None",None,None,None
"// If we have a good editing domain... //","if (editingDomain != null)",250,0.96875,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/action/CommandAction.java
"//TreePackageImpl","None",None,None,None
"// This guard is for extra security, but should not be necessary. //","if (editingDomain != null && command != null)",209,0.9818181818181818,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/action/CommandAction.java
"// We will only deal with structured selections. //","if (selection instanceof IStructuredSelection)",225,0.9761904761904762,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/action/CommandAction.java
"// If there is a new one... //","if (workbenchPart != null)",175,0.9545454545454546,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/action/CommandAction.java
""/*    super.collectNewChildDescriptors(newChildDescriptors, object);*/"","newChildDescriptors.add",235,0.953125,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping.ecore2xml.ui/src/org/eclipse/emf/mapping/ecore2xml/provider/XMLMapItemProvider.java
"// Use up the command. // Note that notification will cause a new command to be created. //","editingDomain.getCommandStack().execute(command);",213,0.391304347826087,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/action/CommandAction.java
"//TreeFactory","None",None,None,None
"// No point in keeping garbage. //","command = null;",303,0.9629629629629629,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/action/CommandAction.java
"// We just can't do it. //","((Action)action).setEnabled(false);",299,0.9473684210526315,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/action/CommandAction.java
"// Fill with background. //","event.gc.setBackground(display.getSystemColor(SWT.COLOR_LIST_BACKGROUND));",629,0.9545454545454546,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/celleditor/AdapterFactoryTableTreeEditor.java
"// only handle structured selections","if (!(selection instanceof IStructuredSelection))",126,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/action/StaticSelectionCommandAction.java
"// Add the edit menu actions. //","menuManager.add(new ActionContributionItem(undoAction));",420,0.96,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/action/EditingDomainActionBarContributor.java
"// try to get editing domain from workbench part","if (workbenchPart instanceof IEditingDomainProvider)",81,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/action/StaticSelectionCommandAction.java
"// Show the colourless image. //","if (getDefaultImageDescriptor() != null)",308,0.9615384615384616,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/action/CommandAction.java
"// if we found an editing domain, create command","if (editingDomain != null)",152,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/action/StaticSelectionCommandAction.java
"// convert the selection to a collection of the selected objects","IStructuredSelection sselection = (IStructuredSelection) selection;",133,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/action/StaticSelectionCommandAction.java
"// Allocate the new collection, and populate it up to this point. //","newCollection = new ArrayList<Object>(oldCollection.size());",2694,0.9818181818181818,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"// if the editing domain wasn't given by the workbench part, try to get // it from the selection","if (editingDomain == null)",138,0.8529411764705882,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/action/StaticSelectionCommandAction.java
"// Add our standard marker. //","if ((style & ADDITIONS_LAST_STYLE) == 0)",412,0.9583333333333334,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/action/EditingDomainActionBarContributor.java
"// If the first wrapped value is found... //","if (newValue != oldValue && newCollection == null)",2690,0.9714285714285714,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemProviderAdapter.java
"// use up the command","editingDomain.getCommandStack().execute(command);",240,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/action/StaticSelectionCommandAction.java
"//MappingPackage ePackage = ((FunctionPair)object).ePackageMapping();","MappingPackage ePackage = MappingPackage.eINSTANCE;",70,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/provider/FunctionPairItemProvider.java
"// We use multi even for a single line because we want to respond to the enter key. //","int style = multiLine ?",203,0.9850746268656716,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/celleditor/FeatureEditorDialog.java
"// Remember the requested operation.","originalOperation = event.detail;",140,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/dnd/EditingDomainViewerDropAdapter.java
"// If there are delegated features, add only those that aren't already in this package to the end of the list. //","if (!delegated.isEmpty())",3391,0.989010989010989,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenPackageImpl.java
"// grabHorizontal = true;","minimumWidth = Math.max(50, treeItem.getBounds().width);",75,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/celleditor/AdapterFactoryTreeEditor.java
"//MappingPackage ePackage = ((FunctionPair)msg.getNotifier()).ePackageMapping();","MappingPackage ePackage = MappingPackage.eINSTANCE;",116,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/provider/FunctionPairItemProvider.java
"// Add our other standard marker. //","menuManager.add(new Separator("additions-end"));",437,0.9655172413793104,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/action/EditingDomainActionBarContributor.java
"// Clear the source data.  We won't need this again, since, if it was // available, it's already in the command. //","source = null;",166,0.7432432432432432,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/dnd/EditingDomainViewerDropAdapter.java
"// Ensure that all proxies are resolved so that references into the controlled object will be saved to reference the new resource. //","EcoreUtil.resolveAll(domain.getResourceSet());",135,0.990909090909091,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/action/ControlAction.java
"// Cache the tree path for each object. //","final Collection<List<?>> allTreePaths = new ArrayList<List<?>>();",449,0.9696969696969697,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/impl/MappingRootImpl.java
"// dropDown.addListener(SWT.Paint, dropDownListener);","dropDown.addListener(SWT.Deactivate, dropDownListener);",373,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/celleditor/AdapterFactoryTableTreeEditor.java
"// This is here only to support deprecated adapt(object) rather than adapt(object, Interface.class). // // supportedTypes.add(null);","// supportedTypes.add(IUpdateableItemText.class);",86,0.8585365853658536,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/provider/MappingItemProviderAdapterFactory.java
"// setEditor(null, null, -1);","}",514,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/celleditor/AdapterFactoryTableTreeEditor.java
"// event is null when featureTableViewer is double clicked","@Override",440,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/celleditor/FeatureEditorDialog.java
"// event is null when choiceTableViewer is double clicked","@Override",403,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/celleditor/FeatureEditorDialog.java
"// This should be consistent with paintControl(). //","int x = paddingWidth == 0 ? 3 : paddingWidth;",444,0.9772727272727273,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/celleditor/AdapterFactoryTableTreeEditor.java
"// Draw 3D effect on right-side button. //","if (hasLaunched || hasDropDown)",719,0.9705882352941176,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/celleditor/AdapterFactoryTableTreeEditor.java
"// Draw outline. //","event.gc.setForeground(display.getSystemColor(SWT.COLOR_DARK_GRAY));",714,0.9333333333333333,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/celleditor/AdapterFactoryTableTreeEditor.java
"// Draw down arrow, offset if dropped. //","if (hasDropDown)",678,0.9696969696969697,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/celleditor/AdapterFactoryTableTreeEditor.java
"// Draw background of right-side button. //","int boxX = itemBounds.width - itemBounds.height;",661,0.9722222222222222,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/celleditor/AdapterFactoryTableTreeEditor.java
""/*     * (non-Javadoc)     *      * @see org.eclipse.jface.window.Window#configureShell(org.eclipse.swt.widgets.Shell)     */"","* @see org.eclipse.emf.mapping.action.AddRootTopAction#getTopsToAdd()",46,0.23931623931623933,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping.ecore2ecore.editor/src/org/eclipse/emf/mapping/ecore2ecore/action/AddInputRootAction.java
"// This is for the helper feature. //","if (mapping.getEffectiveHelper() != null)",148,0.9655172413793104,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/provider/MappingItemProvider.java
"// Execute it. //","domain.getCommandStack().execute(command);",232,0.9230769230769231,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/dnd/EditingDomainViewerDropAdapter.java
"// If so, revalidate the command. //","valid = ((DragAndDropFeedback)command).validate(target, location, event.operations, originalOperation, source);",302,0.9655172413793104,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/dnd/EditingDomainViewerDropAdapter.java
"// Draw the text. //","if (text != null)",639,0.9333333333333333,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/celleditor/AdapterFactoryTableTreeEditor.java
"// If the command can execute... //","if (command.canExecute())",228,0.9642857142857143,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/dnd/EditingDomainViewerDropAdapter.java
"// A command was created if the source was available early, and the // information used to create it was cached... //","if (dragAndDropCommandInformation != null)",209,0.7284768211920529,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/dnd/EditingDomainViewerDropAdapter.java
"// If we can't do anything else, we'll provide the default select feedback // and enable auto-scroll and auto-expand effects.","event.feedback = DND.FEEDBACK_SELECT | getAutoFeedback();",260,0.7380952380952381,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/dnd/EditingDomainViewerDropAdapter.java
"// This is for the typeMapping feature. //","if (mapping.getTypeMapping() != null)",222,0.9705882352941176,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/provider/MappingItemProvider.java
"// Clean up the state. //","command = null;",244,0.9473684210526315,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/dnd/EditingDomainViewerDropAdapter.java
"// Otherwise, let's call the whole thing off. //","event.detail = DND.DROP_NONE;",238,0.9743589743589743,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/dnd/EditingDomainViewerDropAdapter.java
"// Clear out any old information from a previous drag. //","None",None,None,None
"// Recreate the command. //","command = dragAndDropCommandInformation.createCommand();",214,0.9545454545454546,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/dnd/EditingDomainViewerDropAdapter.java
"// Check if the cached command can provide DND feedback/revalidation. //","if (target == commandTarget && command instanceof DragAndDropFeedback)",298,0.9836065573770492,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/dnd/EditingDomainViewerDropAdapter.java
"//FIX:::","Notification.SET,",718,0.3076923076923077,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/provider/MappingItemProvider.java
"// create composite","Composite composite = (Composite) super.createDialogArea(parent);",171,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/provider/InputDialog.java
"// Remember the target; create the command and test if it is executable. //","commandTarget = target;",290,0.9836065573770492,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/dnd/EditingDomainViewerDropAdapter.java
"// Keep track of any changes to the command information.","dragAndDropCommandInformation = new DragAndDropCommandInformation(domain, target, location, event.operations, originalOperation, source);",306,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/dnd/EditingDomainViewerDropAdapter.java
"//We are not generating the manifest file if the plugin.xml exists. //","if (outputFilePath.endsWith("/META-INF/MANIFEST.MF") && exists(targetFile.trimSegments(2).appendSegment("plugin.xml")))",408,0.9827586206896551,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenBaseImpl.java
"// If we don't have a previous cached command... //","if (command == null)",282,0.975609756097561,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/dnd/EditingDomainViewerDropAdapter.java
"// If this command can provide detailed drag and drop feedback... //","if (command instanceof DragAndDropFeedback)",321,0.9821428571428571,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/dnd/EditingDomainViewerDropAdapter.java
"//do this here because setting the text will set enablement on the OK // button","None",None,None,None
"// If not, dispose the current command and create a new one. //","dragAndDropCommandInformation = new DragAndDropCommandInformation(domain, target, location, event.operations, originalOperation, source);",311,0.98,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/dnd/EditingDomainViewerDropAdapter.java
"// Use it for the operation and drag under effect. //","DragAndDropFeedback dragAndDropFeedback = (DragAndDropFeedback)command;",325,0.9761904761904762,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/dnd/EditingDomainViewerDropAdapter.java
"// FunctionPair","None",None,None,None
"// Transfer the data and convert the structured selection to a collection of objects. //","if (object instanceof IStructuredSelection)",399,0.9863013698630136,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/dnd/EditingDomainViewerDropAdapter.java
"// Check whether the current data type can be transfered locally. //","LocalTransfer localTransfer = LocalTransfer.getInstance();",358,0.9821428571428571,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/dnd/EditingDomainViewerDropAdapter.java
"// Transfer the data and, if non-null, extract it. //","Object object = localTransfer.nativeToJava(event.currentDataType);",386,0.9767441860465116,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/dnd/EditingDomainViewerDropAdapter.java
"// Iterate over the data types to see if there is a data type that supports a local transfer. //","TransferData [] dataTypes = event.dataTypes;",363,0.9868421052631579,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/dnd/EditingDomainViewerDropAdapter.java
"// If there was no old input, then we must be providing content for this part for the first time... //","this.viewer = viewer;",133,0.9876543209876543,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/provider/AdapterFactoryContentProvider.java
"// Walk the project looking for .java files to analyze. //","IJavaProject javaProject = JavaCore.create(project);",300,0.9787234042553191,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"//    case Notification.TOUCH:","default:",342,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/provider/NotifyChangedToViewerRefresh.java
"// Set the input to the widget. //","if (currentViewerPane.getViewer().getInput() != selectedElement)",1623,0.9615384615384616,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping.ecore2xml.ui/src/org/eclipse/emf/mapping/ecore2xml/presentation/Ecore2XMLEditor.java
"// n2.isLabelUpdate()","{",433,0.9090909090909091,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/provider/AdapterFactoryContentProvider.java
"// Previously, we never updated the viewer on a resolve.  Now we post and merge it as appropriate. //","if (compatibility && notification.getEventType() == Notification.RESOLVE) return;",468,0.9876543209876543,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/provider/AdapterFactoryContentProvider.java
"// We ignore non-changes for now. //","break;",364,0.9655172413793104,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/provider/NotifyChangedToViewerRefresh.java
"// If the index was previously assigned, return it. // Otherwise, return a negative result that encodes the newly assigned index. //","return bit != 0 ? result : ~result;",1749,0.5584415584415584,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/BasicEObjectImpl.java
"// Add a dummy GenModel for referenced packages. //","if (referencedEPackages != null && !referencedEPackages.isEmpty())",624,0.9761904761904762,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer/src/org/eclipse/emf/importer/ModelImporterApplication.java
"// Escape a string that will terminate the comment in which this will all be nested. //","for (int index = result.indexOf("*/"); index != -1; index = result.indexOf("*/", index))",1812,0.9857142857142858,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenBaseImpl.java
"// We set it and get back the interned string. // This way, when instanceClassName == instanceTypeName we know we should serialize only the class name. //","basicSetInstanceClassName(newInstanceClassName);",635,0.4484848484848485,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EClassifierImpl.java
"// We also need to set it on any GenModels holding any used or static packages that may be refered to. //","for (GenPackage genPackage : getUsedGenPackages())",2001,0.9879518072289156,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenModelImpl.java
"//  private static final long SCHEME_CHAR_HI = ALPHANUM_HI | highBitmask("+-."); //  private static final long SCHEME_CHAR_LO = ALPHANUM_LO | lowBitmask("+-.");","private static final long MAJOR_SEPARATOR_HI = highBitmask(":/?#");",264,0.6698564593301436,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Create the model project. //","List<IProject> referencedProjects = new ArrayList<IProject>(referencedModelProjects);",832,0.96,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer/src/org/eclipse/emf/importer/ModelImporter.java
"// Determine which projects will need to be referenced. //","List<IProject> referencedModelProjects = new ArrayList<IProject>();",801,0.9791666666666666,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer/src/org/eclipse/emf/importer/ModelImporter.java
"// no property // no property // no property","None",None,None,None
"// Create resources for all the root EPackages. //","createResource(eNS_URI);",2391,0.5517241379310345,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EcorePackageImpl.java
"// The class is not available.","}",162,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit.ui/src/org/eclipse/emf/edit/ui/util/EditUIUtil.java
"// Nested GenAnnotations","public static final String GENANNOTATION_SOURCE_SELECTED_EPACKAGES = "selectedPackages";",58,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.exporter/src/org/eclipse/emf/exporter/ModelExporter.java
"// removing the first space","if (genModelFullPath == null)",274,0.46938775510204084,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer/src/org/eclipse/emf/importer/ModelImporterApplication.java
"// Subclasses may overwrite","}",616,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer/src/org/eclipse/emf/importer/ModelImporterApplication.java
"// Handle application genmodel stub //","for (GenPackage genPackage : getGenModel().getUsedGenPackages())",784,0.96875,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer/src/org/eclipse/emf/importer/ModelImporter.java
"// Create resources for all the referenced EPackages // The referencedEPackage is a "local" instance of the realEPackage.  We  // will add the former to a resource that has the same URI of the later.","createResource(eNS_URI);",2391,0.1787709497206704,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EcorePackageImpl.java
"// Initialize the GenModel with all the computed data. //","getGenModel().initialize(ePackages);",713,0.9787234042553191,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer/src/org/eclipse/emf/importer/ModelImporter.java
"// Now we should sort. //","for (Map.Entry<EPackage, Map<Object, Integer>> entry : ePackageToOrderingMap.entrySet())",492,0.9473684210526315,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Compute the closure. //","for (Iterator<EObject> j = ePackage.eAllContents(); j.hasNext();)",733,0.9523809523809523,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// For arrays, consider the element type. //","int i = baseName.indexOf('[');",2707,0.9722222222222222,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Convert reference to attribute if its type is an EDataType...  //","EReference eReference = (EReference)element;",2230,0.9818181818181818,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseEcoreBuilder.java
"// Clean up the temporary container annotations for holding map entry classes until they are for sure needed. //","for (EPackage ePackage : packageNameToEPackageMap.values())",481,0.989247311827957,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Now we need to hook up opposites by finding the named feature in the type. //","for (Map.Entry<EReference, String> entry : eReferenceToOppositeNameMap.entrySet())",420,0.9841269841269841,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Restore all configured settings from the original. //","getGenModel().reconcile(getOriginalGenModel());",721,0.9787234042553191,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer/src/org/eclipse/emf/importer/ModelImporter.java
"// Now we need to hook up keys by finding the named feature in the type. //","for (Map.Entry<EReference, List<String>> entry : eReferenceToKeyNamesMap.entrySet())",456,0.9827586206896551,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Copy the children references  //","Collection<Object> copyChildren = new ArrayList<Object>();",82,0.9642857142857143,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/command/InitializeCopyOverrideCommand.java
"// Keep only the plugins that have GenModels for consideration. //","allReferencedPluginIDs.retainAll(allPluginsWithGenModels.keySet());",645,0.9818181818181818,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Iterate over all projects to look at the manifests. //","List<String> allReferencedPluginIDs = new UniqueEList<String>();",560,0.9782608695652174,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Also add each required plugin for consideration in the loop. //","ManifestElement element = elements[j];",612,0.9814814814814815,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Create the EPackage on demand. //","ePackage = EcoreFactory.eINSTANCE.createEPackage();",951,0.9655172413793104,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Check whether this has @model annotation contents. //","// If not, it might be a package interface, for backwards compatibility.",979,0.9787234042553191,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Match them and accumulate the appropriate result. //","match(eClass.getEGenericSuperTypes(), javaEGenericSuperTypes, ecoreEGenericSuperTypes);",1078,0.9782608695652174,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// use no encoding","}",878,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Create a generic super type with an EClass as the classifier for each super interface in the Java representation. //","List<EGenericType> javaEGenericSuperTypes = new ArrayList<EGenericType>();",1024,0.9897959183673469,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// The class address was not equal, so we don't want this class loader, // but instead want the last result that was able to load the class. //","break;",333,0.6705202312138728,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/impl/EPackageRegistryImpl.java
"// Check whether this has @model annotation contents. // If not, it might be a package interface, for backwards compatibility. //","String modelAnnotation = getModelAnnotation(type.getComment());",979,0.5935483870967742,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Get the package name and see if there's an EPackage for it. //","EPackage ePackage = getEPackage(type);",994,0.9803921568627451,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// It's definitely a package if it was declared as such. //","if ("package".equals(kind))",1154,0.9787234042553191,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Additional attributes and references may be defined directly on the interface in order to allow the // get accessor method to have suppressed visibility. //","String features = getModelAnnotationAttribute(modelAnnotation, "features");",1095,0.7818181818181819,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Walk the methods. //","for (JMethod method : facadeHelper.getChildren(type, JMethod.class))",1088,0.9444444444444444,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// This will catch inherited features, or additional things we don't want to worry about.","}",1214,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Find Packages and Factories","else",1142,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Otherwise it's treated as an EEnum //","EEnum eEnum = EcoreFactory.eINSTANCE.createEEnum();",1123,0.96875,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Handle the type, multiplicity and other ETypedElement attributes. //","@Override",74,0.32432432432432434,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore.ui/src/org/eclipse/emf/codegen/ecore/genmodel/provider/GenBaseItemProvider.java
"// Each token in parameters will specify a dataType for the corresponding parameter, but can be overridden by a // parameter-name-prefixed dataType property. //","StringTokenizer stringTokenizer = new StringTokenizer(parameters == null ? "" : parameters);",1460,0.808695652173913,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// The name is extracted and lower cased. //","featureName = CodeGenUtil.uncapName(methodName.substring(2));",1442,0.9714285714285714,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// 7 is the size of (object","processToTheEnd(currentLine, lineCounter);",150,0.4883720930232558,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/parser/RoseLexer.java
"// The feature name is extracted lower cased. //","featureName = CodeGenUtil.uncapName(methodName.substring(3));",1431,0.9743589743589743,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Map to an EEnum.","EEnum eEnum = EcoreFactory.eINSTANCE.createEEnum();",241,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseEcoreBuilder.java
"// Drop the _ separators and normalize the case. //","String key = name.replace("_", "").toLowerCase();",781,0.975609756097561,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// Set the EAttribute attributes. //","eAttribute.setUnsettable("true".equals(getModelAnnotationAttribute(modelAnnotation, "unsettable")));",1592,0.9666666666666667,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Each token in exceptions will specify a data type for the corresponding exception. //","List<EGenericType> ecoreEGenericExceptions = new ArrayList<EGenericType>();",1498,0.9863013698630136,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// We'll create one of these. //","EStructuralFeature eStructuralFeature = null;",1523,0.96,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Set the EReference attributes. //","eReference.setContainment",1549,0.9666666666666667,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// If any of these attributes appear, this must be a reference. //","String opposite = getModelAnnotationAttribute(modelAnnotation, "opposite");",1527,0.9811320754716981,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Set the visibility annotations for the EstructuralFeature. //","EcoreUtil.setSuppressedVisibility",1615,0.9818181818181818,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Process the annotations. //","eTypedElement.getEAnnotations().addAll(extractEAnnotations(modelAnnotation));",1629,0.96,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Set the EStructuralFeature attributes. //","eStructuralFeature.setChangeable(!"false".equals(getModelAnnotationAttribute(modelAnnotation, "changeable")));",1608,0.9736842105263158,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Check if it is exactly the name of a type parameter that's in scope. //","for (EObject eObject = eModelElement; eObject != null; eObject = eObject.eContainer())",2498,0.9827586206896551,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Allow a distinct literal value to be provided, too. //","String literal = getModelAnnotationAttribute(modelAnnotation, "literal");",2096,0.9782608695652174,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// The type can be augmented by specifying the it explicitly in the annotation. // This mostly makes sense only for many-valued typed elements, where the Java // type is a list and the item type needs to be specified. //","if (modelType != null)",1804,0.5365853658536586,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// continue with default processing","}",3471,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLSaveImpl.java
"// Allow the value to be defined by an annotation or by the field's initializer //","String value = getModelAnnotationAttribute(modelAnnotation, "value");",2041,0.9848484848484849,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// We want to resolve to this. //","EGenericType eGenericType = null;",2494,0.96,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Returns the lower half bitmask for all ASCII characters between the two // given characters, inclusive.","private static long lowBitmask(char from, char to)",312,0.8157894736842105,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// But, if name doesn't expand into field name, ignore it. //","if (name == null || !CodeGenUtil.format(name, '_', null, false, true).toUpperCase().equals(fieldName))",2082,0.9795918367346939,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Returns the upper half bitmask for all AsCII characters between the two // given characters, inclusive.","private static long lowBitmask(char from, char to)",313,0.4745762711864407,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Allow a mixed case version of the name to be provided. //","String name = getModelAnnotationAttribute(modelAnnotation, "name");",2073,0.9787234042553191,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Returns the lower half bitmask for all the ASCII characters in the given // string.","private static long lowBitmask(String chars)",335,0.9323308270676691,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// If we can't find it, try the simple name in the package... //","if (eGenericType == null && "".equals(packageName))",2581,0.98,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// This could potentially map every created model element to its corresponding Rose node. // However, for now we're only using it as needed. //","protected Map<EModelElement, RoseNode> eModelElementToRoseNodeMap = new HashMap<EModelElement, RoseNode>();",94,0.7794871794871795,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseEcoreBuilder.java
"// Find an explicit import or the first wildcard import. //","boolean firstWildcard = true;",2541,0.9791666666666666,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"//no caching","featureTable = new Lookup(map, extendedMetaData, elementHandler);",563,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLSaveImpl.java
"// If we still don't have one, we'll have to settle for an EDataType or EClass with an instance class name. //","if (eGenericType == null)",2630,0.9886363636363636,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Find the modeled package for the name and look up the name there. //","packageName = baseName.substring(0, index);",2595,0.9821428571428571,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Create a resource set and load the model file into it. //","ResourceSet resourceSet = new ResourceSetImpl();",134,0.5882352941176471,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/DynamicModelWizard.java
"// The package not in a .cat file. //","String qualifiedName = objName;",122,0.9642857142857143,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/UnitTreeBuilder.java
"// See if we already have the EDataType. //","String modifiedName = typeName.replace('$', '.');",2634,0.9705882352941176,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// The package is in a .cat file. //","RoseNode fileNameNode = tree.findNodeWithKey(RoseStrings.FILE_NAME);",108,0.9629629629629629,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/UnitTreeBuilder.java
"// It's okay for there not be a precompiled template, so fail quietly. // exception.printStackTrace();","finally",164,0.4827586206896552,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/DynamicModelWizard.java
"// Returns whether the given character is in the set specified by the given // bitmask.","private static boolean matches(char c, long highBitmask, long lowBitmask)",361,0.9253731343283582,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// If we still don't have one, we'll have to settle for a demand created EDataType or EClass, // so create a new EClassifier with a nice unique name. //","if (eGenericType == null)",2695,0.7638190954773869,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// If we don't have one yet, maybe it's one of the special types... //","if (eGenericType == null &&",2671,0.9818181818181818,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Converts null to length-zero array, and clones array to ensure // immutability.","private static String[] fix(String[] segments)",507,0.88,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// If there are any warnings other than raw type warnings, include all the warnings. //","for (Diagnostic child : diagnostic.getChildren())",2887,0.9859154929577465,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenModelImpl.java
"// For the model information. //","String quid = unitNode.getQUID();",70,0.9615384615384616,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/UnitTreeBuilder.java
"// Avoid classifier name collisions. //","for (int j = 1; ePackage.getEClassifier(name) != null; ++j)",2793,0.9696969696969697,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Make array names legal. //","while (name.endsWith("[]"))",2766,0.9565217391304348,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Get the parent object. //","RoseNode currentNode = roseNode;",119,0.9545454545454546,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseEcoreBuilder.java
"// Even primitives should be represented by a data type with a conventional (i.e. capitalized) name. //","String name = baseName;",2758,0.9883720930232558,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// Add to package. //","((EPackage)parent).getESubpackages().add(ePackage);",182,0.9375,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseEcoreBuilder.java
"// Map to an EPackage. //","if (roseNode.isLoaded())",170,0.9473684210526315,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseEcoreBuilder.java
"// node is not marked up by now, but keep checking other rules","markedUp = false;",1105,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/JMerger.java
"// Map to an EDataType. //","EDataType eDataType = EcoreFactory.eINSTANCE.createEDataType();",255,0.95,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseEcoreBuilder.java
"// Map to EAttribute, or EEnumLiteral. //","if (parent instanceof EEnum)",449,0.9705882352941176,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseEcoreBuilder.java
"// Map to an EParameter as input parameter for operation. //","EParameter eParameter = EcoreFactory.eINSTANCE.createEParameter();",415,0.9795918367346939,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseEcoreBuilder.java
"// Add to an EClass //","((EClass)parent).getEOperations().add(eOperation);",407,0.9375,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseEcoreBuilder.java
"// Map to an EOperation.","EOperation eOperation = EcoreFactory.eINSTANCE.createEOperation();",376,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseEcoreBuilder.java
"// If not we'll erase it to java.lang.Object. //","result.append(isImported ? getGenModel().getImportedName("java.lang.Object") : "java.lang.Object");",3333,0.9743589743589743,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenBaseImpl.java
"// Alternate, stricter implementations of the following validation methods // are provided, commented out, for possible future use...","* Returns <code>true</code> if the specified <code>value</code> would be",1082,0.7252747252747253,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// We will need to check the containment if we have to convert the EAttribute to an EReference later.  //","if (roseNode.getContainment() != null)",526,0.9880952380952381,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseEcoreBuilder.java
"// <p>A valid scheme may be null, or consist of a single letter followed // by any number of letters, numbers, and the following characters: // <code>+ - .</code>","//if (value == null) return true;",1096,0.6113989637305699,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// 5 is the size of (list","processToTheEnd(currentLine, lineCounter);",163,0.4634146341463415,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/parser/RoseLexer.java
"// Load the schema and packages that were used to load the instance into this resource set. //","ResourceSet resourceSet = editingDomain.getResourceSet();",206,0.9868421052631579,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/EcoreEditor.java
"// try to retrieve the fully qualified name of the specified type...","if (null == type || type.length() == 0 || "void".equals(type))",2503,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseEcoreBuilder.java
"// qualify type name if not already qualified...","if (qualifiedType.indexOf('.') == -1 && eModelElement != null)",2532,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseEcoreBuilder.java
"// remove garbage characters...","stringBuffer.append(st.nextToken().replace('"', ' ').replace('[', ' ').replace(']', ' ').trim());",2521,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseEcoreBuilder.java
"// convert to dot-separated format if necessary...","if (qualifiedType.indexOf("::") != -1)",2510,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseEcoreBuilder.java
"// Store the base name for relative .cat file references. //","if (topNode == null)",84,0.9795918367346939,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseUtil.java
"// Order first by number of features (descending) and then alphabetically (ascending) //","EClass c1 = (EClass)(o1 instanceof EGenericType ? ((EGenericType)o1).getEClassifier() : o1);",1438,0.9866666666666667,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseEcoreBuilder.java
"// Iterate over the whole tree to do this. //","for (TreeIterator<?> mappings = mappingRoot.treeIterator(); mappings.hasNext(); )",255,0.9714285714285714,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/command/PersistentCommandStack.java
"// default value //","String initv = roseNode.getInitV();",1055,0.9333333333333333,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseEcoreBuilder.java
"// We treat the feature as volatile if it is volatile itself or if it is  // a reference whose opposite end is volatile,  // unless that opposite volatile reference delegates to a feature map, // in which case, a full implementation of the references can be generated. //","EReference eReverseFeature = isReferenceType() ?",1234,0.41007194244604317,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenFeatureImpl.java
"//MappingFactory","None",None,None,None
"// Remove zero width non-breaking space, which may be used as a byte order marker,  // and may be ignored according to the Unicode FAQ: http://www.unicode.org/unicode/faq/utf_bom.html#38 //","if (buf[0] == '\uFEFF')",100,0.591304347826087,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETReader.java
"// A container must be transient. //","eReference.setTransient(true);",1911,0.9655172413793104,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseEcoreBuilder.java
"// Temporary WAS/WSAD migration option. //","if (unsettablePrimitive)",1851,0.9722222222222222,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseEcoreBuilder.java
"// It was not found in the model class so check if primitive type. //","eType = getBasicType(type);",2161,0.9814814814814815,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseEcoreBuilder.java
"// setup attribute and parameter type //","for (EObject element : roseUtil.typeTable.keySet())",2104,0.9696969696969697,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseEcoreBuilder.java
"// Convert attributes of with EClass type to references. //","eType = (EClassifier)tableObj.getObject();",2155,0.9795918367346939,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseEcoreBuilder.java
"// read mdl file...","RoseLoader loader = new RoseLoader(fileName, uriConverter);",95,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseUtil.java
"// file is a mdl file // // get model name","int ind_1 = fileName.lastIndexOf(System.getProperty("file.separator"));",137,0.6666666666666666,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseUtil.java
"// special case, traverse cat file or mdl file //","UnitTreeNode unitTree = null;",115,0.9743589743589743,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseUtil.java
"// could this happen?","List<RoseNode> subSubNodes = subNode.getNodes();",812,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/parser/RoseNode.java
"// map properties even when isTreeOnly == true","public RoseParser(RoseLexer lexer)",59,0.6902654867256637,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/parser/RoseParser.java
"//directoryName.length() > 0 && directoryName.charAt(0) == '$')","{",427,0.7755102040816326,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseUtil.java
"// size should be 1","RoseNode subNode = subNodes.get(j);",803,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/parser/RoseNode.java
"// Create a resource for this file. Don't specify a content type, as it could be Ecore or EMOF. //","Resource resource = resourceSet.createResource(fileURI);",143,0.5370370370370371,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.editor/src/org/eclipse/emf/ecore/presentation/DynamicModelWizard.java
"//    top++;","idStack.push(new Integer(++top));",268,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/parser/RoseParser.java
"// No additional features // MappingStrategy","} // TypeConverter",33,0.7213114754098361,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/TypeConverter.java
"// Record the records for the executed commands on the stack. //","Collection<CommandCreationRecord> commandCreationRecordList = new ArrayList<CommandCreationRecord>();",121,0.9807692307692307,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/command/PersistentCommandStack.java
"// map to EReference when is navigable //","EReference ref = EcoreFactory.eINSTANCE.createEReference();",553,0.9696969696969697,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseEcoreBuilder.java
"// Process the contents of the extent //","for (EObject eObject : node.getExtent())",330,0.96875,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseUtil.java
"// This will not add duplicates. //","genPackages.addAll(genPackagesToAdd);",90,0.9642857142857143,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer/src/org/eclipse/emf/importer/util/ImporterUtil.java
"// This sets the parent so that the nodes can traverse to the root to find default eCore settings. //","if (containingNode != null)",361,0.9876543209876543,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseUtil.java
"// Load the Rose .mdl or .cat file, and create mappings for the objects. //","String roseFile = node.getRoseFileName();",347,0.9833333333333333,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseUtil.java
"// Only one open quote. //","String currentLine = roseLoader.readLine();",264,0.95,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/parser/RoseLexer.java
"// Start second traverse to create mapping objects in memory. //","RoseWalker roseWalker = new RoseWalker(modelTree);",370,0.9811320754716981,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseUtil.java
"// Put all static package in the package registry. //","None",None,None,None
"// This is the path of the target directory. //","IPath targetRootDirectory = new Path(arguments[index]);",351,0.972972972972973,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/Generator.java
"//MappingPackage","MappingPackage ePackage = MappingPackage.eINSTANCE;",71,0.35555555555555557,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/provider/ComplexTypeConverterItemProvider.java
"// No additional features // TypeConverter","} // MappingStrategy",33,0.7457627118644068,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/MappingStrategy.java
"// MappingHelper","None",None,None,None
"// FunctionNamePair","None",None,None,None
"// Do we also have some non-input objects to copy? //","if (sourceObjects.size() > 0)",56,0.9761904761904762,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/command/CopyToClipboardOverrideCommand.java
"// For each mapping being removed... //","for (Object object : collection)",133,0.96875,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/command/RemoveMappingCommand.java
"// MappingRoot","None",None,None,None
"// Since input objects are read-only, we don't need to make a copy of them for the clipboard. // We can just put a pointer to the original object(s) on the clipboard. //","copyCommand = new IdentityCommand(inputObjects);",51,0.7136150234741784,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/command/CopyToClipboardOverrideCommand.java
"// Make sure the back pointers to this mapping from the mapped objects is set. //","domain.getMappingRoot().deregister(mapping);",140,0.9846153846153847,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/command/RemoveMappingCommand.java
"// A valid authority may be null or contain any allowed URI characters except // for the following: <code>/ ?</code>","//return value == null || validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);",1140,0.7950310559006211,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Copy the name //","String ownerName = mappingDomain.getName(owner);",109,0.9285714285714286,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/command/InitializeCopyOverrideCommand.java
"// Add any remaining object-index pairs from either set. //","while (o1 != null)",435,0.9795918367346939,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/RemoveCommand.java
"//Resource resource = EcoreUtil.getURI(refObject).; FIX:::","String href = EcoreUtil.getURI(refObject).toString();",285,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/command/PersistentCommandStack.java
"// <p>A valid path segment must be non-null and may contain any allowed URI // characters except for the following: <code>/ ?</code>","//return value != null && validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);",1225,0.7167630057803468,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
""/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootTopAction#getTopsToAdd()   */"","@Override",46,0.27450980392156865,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping.ecore2ecore.editor/src/org/eclipse/emf/mapping/ecore2ecore/action/AddInputRootAction.java
"// Searches the specified string for any characters in the set represented // by the 128-bit bitmask.  Returns true if any occur, or false otherwise.","private static boolean contains(String s, long highBitmask, long lowBitmask)",1292,0.6737967914438503,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"//return;","}",133,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.edit/src/org/eclipse/emf/ecore/provider/EParameterItemProvider.java
"// Create commands to do mapping.getNested().addAll(siblingsToReparent). //","subcommands.appendAndExecute",163,0.9852941176470589,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/command/AddMappingCommand.java
"// For each mapping being added... //","for (Object object : collection)",119,0.9666666666666667,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/command/AddMappingCommand.java
"// note: (absolutePath || authority == null) -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null","return absolutePath || (authority == null && device == null);",1383,0.6265060240963856,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// this will create the mapping as well","}",100,0.7529411764705882,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/command/InitializeCopyOverrideCommand.java
"// If there are siblings that need to be reparented. //","if (!siblingsToReparent.isEmpty())",153,0.9772727272727273,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/command/AddMappingCommand.java
"//(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));","(new RemoveCommand(domain, parentMapping, MappingPackage.eINSTANCE.getMapping_Nested(), siblingsToReparent));",160,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/command/AddMappingCommand.java
"// Create commands to do parentMapping.getNested().removeAll(siblingsToReparent). //","subcommands.appendAndExecute",157,0.987012987012987,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/command/AddMappingCommand.java
"// If we can't create a temp file then we have to ignore the option.","}",410,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLSaveImpl.java
"// find prefix in current context","for (int i = namespaceSize; i > 0; i -= 2)",1542,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/XMLHelperImpl.java
"//(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object)));","(RemoveCommand.create(mappingDomain, mapping, MappingPackage.eINSTANCE.getMapping_Outputs(), object)));",95,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/command/SetOverrideCommand.java
"// return false if iteration should continue.","}",83,0.7222222222222222,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/command/NameMatchMappingCommand.java
"//commandList.add(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object));","commandList.add(RemoveCommand.create(mappingDomain, mapping, MappingPackage.eINSTANCE.getMapping_Outputs(), object));",91,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/command/RemoveOverrideCommand.java
"// Get the corresponding type. //","EClass outputType = (EClass)mappingDomain.getOutputMetaObject(owner.eClass());",79,0.9629629629629629,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/command/CreateCopyOverrideCommand.java
"// Type matching never matches inputs that are already mapped","}",49,0.896551724137931,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/command/TypeMatchMappingCommand.java
"// Create the copy from this corresponding type. //","EClass metaObject = owner.eClass();",111,0.5172413793103449,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/command/CreateCopyCommand.java
"// Remove all the mappings from the root. //","MappingRoot mappingRoot = domain.getMappingRoot();",96,0.9714285714285714,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/command/RestoreInitialStateCommand.java
"// We have done our preparation. Now ask the super to validate. //","boolean result = super.prepare();",86,0.9811320754716981,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/command/MatchMappingCommand.java
"// Copy the type //","Object ownerType = mappingDomain.getTypeClassifier(owner);",117,0.9285714285714286,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/command/InitializeCopyOverrideCommand.java
"// Skips '-'","if ((type = this.read()) == T_EOF)  throw this.ex("parser.cc.2", this.offset);",5641,0.625,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/xml/type/internal/RegEx.java
"// This is the tricky part where we set the encoding  // that we'd like to have decoded as a series of commands to execute after this command has completed. //","PersistentCommandStack commandStack = (PersistentCommandStack)domain.getCommandStack();",112,0.49411764705882355,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/command/RestoreInitialStateCommand.java
"// If eCore, return the ENamedElement name //","if (object instanceof ENamedElement)",339,0.972972972972973,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/domain/AdapterFactoryMappingDomain.java
"// top-label-separator","IConfigurationElement topLabelSeparatorAll[] = d.getChildren("top-label-separator");",144,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/domain/PluginAdapterFactoryMappingDomain.java
"// Tests whether this URI's path segment array is equal to that of the // given uri.","private boolean segmentsEqual(URI uri)",1582,0.912,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// If the owner and the copy are of the same type, we can proceed with the command, i.e. no override. // If not, we will skip this command by returning a do-nothing override. //","if (!isSameEditingDomainAdapterFactory)",617,0.7232142857142857,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/domain/AdapterFactoryMappingDomain.java
"// If there is an adapter of the correct type, return the item label //","IItemLabelProvider itemLabelProvider = (IItemLabelProvider)adapterFactory.adapt(object, IItemLabelProvider.class);",346,0.9821428571428571,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/domain/AdapterFactoryMappingDomain.java
"// If this is a RemoveCommand for a root input object, direct it to the MappingRoot. //","Collection<?> collection = commandParameter.getCollection();",480,0.9857142857142858,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/domain/AdapterFactoryMappingDomain.java
"// remove all sourceSeparator characters","StringBuffer newString = new StringBuffer();",839,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/domain/AdapterFactoryMappingDomain.java
"// Tests two objects for equality, tolerating nulls; null is considered // to be a valid value that is only equal to itself.","private static boolean equals(Object o1, Object o2)",1594,0.7484662576687117,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// type-mappings","IConfigurationElement typeMappings[] = d.getChildren("type-mappings");",133,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/domain/PluginAdapterFactoryMappingDomain.java
"// add a targetSeparator in front of every upper case character","StringBuffer newString = new StringBuffer();",864,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/domain/AdapterFactoryMappingDomain.java
"// Tests two strings for equality, tolerating nulls and optionally // ignoring case.","private static boolean equals(String s1, String s2, boolean ignoreCase)",1601,0.8837209302325582,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// sourceSeparator == LABEL_NO_SEPARATOR","if (sourceCase == LABEL_MIXED)",861,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/domain/AdapterFactoryMappingDomain.java
"// top-label-forms","IConfigurationElement topLabelForms[] = d.getChildren("top-label-forms");",204,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/domain/PluginAdapterFactoryMappingDomain.java
"// relative path: merge with base and keep query (note: if the // base has no path and this a non-empty relative path, there is // an implied root in the resulting path)","newAbsolutePath = base.hasAbsolutePath() || !hasEmptyPath();",1976,0.5425531914893617,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// top-label-case","IConfigurationElement topLabelCaseAll[] = d.getChildren("top-label-case");",166,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/domain/PluginAdapterFactoryMappingDomain.java
"//Ecore2EcoreFactory","None",None,None,None
"// bottom-label-forms","IConfigurationElement bottomLabelForms[] = d.getChildren("bottom-label-forms");",216,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/domain/PluginAdapterFactoryMappingDomain.java
"//Ecore2EcorePackage","None",None,None,None
"//MappingSwitch","None",None,None,None
"// encrypt the input","Cipher keyCipher = Cipher.getInstance(PBE_ALGORITHM);",115,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/resource/impl/AESCipherImpl.java
"// we don't want to include the line comments immediately before an import in the  // returned range","if (node.getNodeType() == ASTNode.IMPORT_DECLARATION)",693,0.8993288590604027,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/CommentAwareSourceRangeComputer.java
""/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getInputEPackage()   */"","* @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)",84,0.26785714285714285,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore.xmi/src/org/eclipse/emf/ecore/xmi/impl/DefaultDOMHandlerImpl.java
"//if // for // for","None",None,None,None
"// An interface should be abstract, but this makes sure of that fact. //","return getEcoreClass().isAbstract() || getEcoreClass().isInterface();",1084,0.9827586206896551,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenClassImpl.java
"//Ecore2EcoreSwitch","None",None,None,None
"// Adds a segment to a stack, skipping empty segments and self references, // and interpreting parent references.","private static int accumulate(String[] stack, int sp, String segment,",2044,0.7848101265822784,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// For CreateChildCommand, we will find the owner by calling EditingDomain.getParent() on the first selected object","Collection<?> sel = commandParameter.getCollection();",539,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/domain/AdapterFactoryEditingDomain.java
"// special care must be taken for a root's parent reference: it is // either ignored or the symbolic reference itself is pushed","if (preserveRootParents) stack[sp++] = segment;",2053,0.6792452830188679,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// unless we're already accumulating root parent references, // parent references simply pop the last segment descended","if (SEGMENT_PARENT.equals(stack[sp - 1])) stack[sp++] = segment;",2059,0.6794871794871795,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// If extending an interface, its mix-ins must be included, since there is no implementation to handle them. //","GenClass baseGenClass = getBaseGenClass();",1370,0.9891304347826086,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenClassImpl.java
"// If we've found thing with type parameters, search them for a match. //","if (eTypeParameters != null)",2511,0.9830508474576272,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.java/src/org/eclipse/emf/importer/java/builder/JavaEcoreBuilder.java
"// XMLInfo","None",None,None,None
"//Ecore2XMLPackage","None",None,None,None
"// missing attribute","}",114,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping.ecore2xml/src/org/eclipse/emf/mapping/ecore2xml/Ecore2XMLRegistry.java
"// this is the case that starting process rose file by passing cat file name // this is a special case. // normally, user should pass mdl file instead of cat file //  // file is a cat file // modelTree did contain quid info","String quid = modelTree.getRoseId();",120,0.5166666666666667,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.importer.rose/src/org/eclipse/emf/importer/rose/builder/RoseUtil.java
"//XMLMapImpl","None",None,None,None
"// invalid element","}",123,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping.ecore2xml/src/org/eclipse/emf/mapping/ecore2xml/Ecore2XMLRegistry.java
"//Ecore2XMLFactoryImpl","None",None,None,None
"//Ecore2XMLPackageImpl","None",None,None,None
"// We either remove the root mapping or we use the iterator that returned the most recent next mapping. //","if (nextRemoveIterator == null)",600,0.9883720930232558,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/impl/MappingImpl.java
"// Set the editor's selection based on the current viewer's selection. //","setSelection(currentViewer.getSelection());",573,0.9836065573770492,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping.ui/src/org/eclipse/emf/mapping/presentation/MappingEditor.java
"// Many inherited methods must be overridden to handle this case. //","public boolean isVoid()",416,0.9821428571428571,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenOperationImpl.java
"// Since we only use this right on an operation, we always want to include the keyType and valueType, and we never // want to qualify the property names. //","String mapModelInfo = getMapModelInfo(false, true);",719,0.8454545454545455,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenOperationImpl.java
"// If there are any arguments and they are not unbounded wildcards, casts can't be checked. //","for (EGenericType eTypeArgument : eGenericType.getETypeArguments())",540,0.987012987012987,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenTypedElementImpl.java
"// We need to be conservative and diagnose a problem only if we are quite sure that type is built-in  // and hence that the lack of a default value really represents a problem with being unable to convert the literal to a value. //","result = !isBuiltinEDataType(eDataType);",2435,0.6067415730337079,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// Or we test their relationship via their instance classes, if they have them. //","Class<?> eBoundClass = eBoundEClassifier.getInstanceClass();",3307,0.9850746268656716,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// Some XML types declare nebulous Object mappings. // They actually map to internal types that shouldn't be generated into code. //","String name = eDataType.getName();",1072,0.567741935483871,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenDataTypeImpl.java
"// This guards the switch. //","List<IItemPropertyDescriptor> list = itemDelegator.getPropertyDescriptors(nestedPropertySource);",993,0.9565217391304348,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.edit/src/org/eclipse/emf/edit/provider/ItemPropertyDescriptor.java
"// If there is a base XML or Ecore type, use one of the two corresponding built-in factories to create a value from the literal string. //","EDataType base = getBasicType();",1139,0.990990990990991,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenDataTypeImpl.java
"// Clean up any old project information. //","if (!project.exists())",662,0.9714285714285714,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/Generator.java
"//MappingImpl","None",None,None,None
"// The bound is a wildcard with no constraints. //","return false;",3454,0.975,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreValidator.java
"// See if a GenModel is registered for the package's URI, and if so, try to load it. //","GenPackage staticGenPackage = null;",5855,0.9852941176470589,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenModelImpl.java
"// If that didn't work, just synthesize one. //","if (staticGenPackage == null)",5873,0.9736842105263158,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenModelImpl.java
"// EATM  // Foreign Model","setDynamicTemplates(oldGenModelVersion.isDynamicTemplates());",7963,0.8235294117647058,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenModelImpl.java
"// Any features from one package that delegate to features in another. //","List<GenFeature> delegated = new ArrayList<GenFeature>();",8191,0.9833333333333333,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenModelImpl.java
"// If there are features delegating across packages, add only those that aren't already being generated. //","if (!delegated.isEmpty())",8207,0.9888888888888889,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenModelImpl.java
"// a single separator, possibly preceded by some parent reference // segments, is redundant","if (downCount == 1 && SEGMENT_EMPTY.equals(endPath[endCount - 1]))",2268,0.835820895522388,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// an empty path needs to be replaced by a single "." if there is no // query, to distinguish it from a current document reference","if (upCount + downCount == 0)",2275,0.6708860759493671,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Collapses non-ending empty segments, parent references, and self // references in a non-relative path, returning the same path that would // be produced from the base hierarchical URI as part of a resolve.","String[] collapseSegments(boolean preserveRootParents)",2290,0.5042735042735043,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// if the path is non-empty and originally ended in an empty segment, a // parent reference, or a self reference, add a trailing separator","if (sp > 0 && (SEGMENT_EMPTY.equals(segments[segmentCount - 1]) ||",2312,0.6744186046511628,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"//TypeConverterImpl","None",None,None,None
"// Returns a string representation of this URI for debugging, explicitly // showing each of the components.","String toString(boolean includeSimpleForm)",2397,0.8104575163398693,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// If the new prefix has segments, it is not the root absolute path, // and we need to drop the trailing empty segment and append the tail // segments.","String[] mergedSegments = tailSegments;",2723,0.6214689265536724,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
""/*        featureMap.add(eStructuralFeature, cursor++, o);        expectedModCount = featureMap.getModCount();        ++entryCursor;        ++lastCursor;        // lastCursor = -1;        // prepared = 0;*/"","isFeatureMap = isFeatureMap(eStructuralFeature);",313,0.4375,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/FeatureMapUtil.java
"// Add all classes from this package first, to guarantee they get the // simple names","for (GenClass genClass : getGenClasses())",2426,0.8976377952755905,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenPackageImpl.java
"// Don't even consider it unless this is hierarchical and has scheme, // authority, device and path absoluteness equal to those of the prefix.","if (!hierarchical ||",2757,0.655367231638418,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// If the prefix has no segments, then it is the root absolute path, and // we know this is an absolute path, too.","if (prefix.segmentCount() == 0) return segments;",2768,0.7785234899328859,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Barring a better result, this will be the result. //","Mapping result = this;",445,0.9772727272727273,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.mapping/src/org/eclipse/emf/mapping/impl/MappingRootImpl.java
"// The prefix really is a prefix of this.  If this has just one more, // empty segment, the paths are the same.","if (i == segments.length - 1 && SEGMENT_EMPTY.equals(segments[i]))",2784,0.7605633802816901,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Do this here because getExtendedMetaData() is used during initialization  // and the mappings are are populated the first time it's fetched // which will miss the packages we add as we initialize the tree. //","if (!EcorePackage.eNS_URI.equals(ePackage.getNsURI()) && !GenModelPackage.eNS_URI.equals(ePackage.getNsURI()))",2592,0.5477178423236515,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen.ecore/src/org/eclipse/emf/codegen/ecore/genmodel/impl/GenPackageImpl.java
"// rewriter is required for set methods","newField.setRewriter(contextNode.getRewriter());",563,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/merge/java/facade/ast/ASTFacadeHelper.java
"// If we can't add it, it must already be in the list so find it and move it to the end. //","if (!copyFeatureMap.add(feature, copyReferencedEObject))",661,0.9852941176470589,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// Both eObject1 and eObject2 are not null. // If eObject1 has been compared already... //","Object eObject1MappedValue = get(eObject1);",2114,0.6486486486486487,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// Encodes the given string, replacing each ASCII character that is not in // the set specified by the 128-bit bitmask and each non-ASCII character // below 0xA0 by an escape sequence of % followed by two hex digits.  If // % is not in the set but ignoreEscaped is true, then % will not be encoded // iff it already begins a valid escape sequence.","private static String encode(String value, long highBitmask, long lowBitmask, boolean ignoreEscaped)",2918,0.36151603498542273,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Tests whether an escape occurs in the given string, starting at index i. // An escape sequence is a % followed by two hex digits.","private static boolean isEscaped(String s, int i)",2950,0.7337278106508875,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.common/src/org/eclipse/emf/common/util/URI.java
"// Multiple jet directives.","}",273,1.0,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.codegen/src/org/eclipse/emf/codegen/jet/JETCompiler.java
"// There's no reason they aren't equal, so they are. //","return true;",2178,0.9772727272727273,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
"// If the set states are the same, and the values of the feature are the structurally equal, they are equal. //","return",2221,0.9887640449438202,/Users/yonekuramiki/Desktop/resarch/searchSATD-underCode/clone/plugins/org.eclipse.emf.ecore/src/org/eclipse/emf/ecore/util/EcoreUtil.java
